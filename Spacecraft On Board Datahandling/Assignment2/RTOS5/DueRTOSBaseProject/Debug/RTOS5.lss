
RTOS5.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00003da8  00080000  00080000  00010000  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .relocate     00000974  20070000  00083da8  00020000  2**3
                  CONTENTS, ALLOC, LOAD, CODE
  2 .bss          0000ba9c  20070974  0008471c  00020974  2**2
                  ALLOC
  3 .stack        00002000  2007c410  000901b8  00020974  2**0
                  ALLOC
  4 .ARM.attributes 00000029  00000000  00000000  00020974  2**0
                  CONTENTS, READONLY
  5 .comment      00000059  00000000  00000000  0002099d  2**0
                  CONTENTS, READONLY
  6 .debug_info   0001dab3  00000000  00000000  000209f6  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000424f  00000000  00000000  0003e4a9  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_loc    000086ce  00000000  00000000  000426f8  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_aranges 00000dc8  00000000  00000000  0004adc6  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 00000f20  00000000  00000000  0004bb8e  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_macro  0001bd75  00000000  00000000  0004caae  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_line   00014a30  00000000  00000000  00068823  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_str    0006d23b  00000000  00000000  0007d253  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_frame  00002820  00000000  00000000  000ea490  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00080000 <exception_table>:
   80000:	10 e4 07 20 65 29 08 00 61 29 08 00 61 29 08 00     ... e)..a)..a)..
   80010:	61 29 08 00 61 29 08 00 61 29 08 00 00 00 00 00     a)..a)..a)......
	...
   8002c:	01 09 08 00 61 29 08 00 00 00 00 00 a1 09 08 00     ....a)..........
   8003c:	e9 09 08 00 61 29 08 00 61 29 08 00 61 29 08 00     ....a)..a)..a)..
   8004c:	61 29 08 00 61 29 08 00 61 29 08 00 61 29 08 00     a)..a)..a)..a)..
   8005c:	61 29 08 00 a5 03 08 00 61 29 08 00 00 00 00 00     a)......a)......
   8006c:	09 28 08 00 1d 28 08 00 31 28 08 00 45 28 08 00     .(...(..1(..E(..
	...
   80084:	61 29 08 00 61 29 08 00 61 29 08 00 61 29 08 00     a)..a)..a)..a)..
   80094:	61 29 08 00 61 29 08 00 61 29 08 00 61 29 08 00     a)..a)..a)..a)..
   800a4:	00 00 00 00 61 29 08 00 61 29 08 00 61 29 08 00     ....a)..a)..a)..
   800b4:	61 29 08 00 61 29 08 00 61 29 08 00 61 29 08 00     a)..a)..a)..a)..
   800c4:	61 29 08 00 61 29 08 00 61 29 08 00 61 29 08 00     a)..a)..a)..a)..
   800d4:	61 29 08 00 61 29 08 00 61 29 08 00 61 29 08 00     a)..a)..a)..a)..
   800e4:	61 29 08 00 61 29 08 00 61 29 08 00 61 29 08 00     a)..a)..a)..a)..

000800f4 <__do_global_dtors_aux>:
   800f4:	b510      	push	{r4, lr}
   800f6:	4c05      	ldr	r4, [pc, #20]	; (8010c <__do_global_dtors_aux+0x18>)
   800f8:	7823      	ldrb	r3, [r4, #0]
   800fa:	b933      	cbnz	r3, 8010a <__do_global_dtors_aux+0x16>
   800fc:	4b04      	ldr	r3, [pc, #16]	; (80110 <__do_global_dtors_aux+0x1c>)
   800fe:	b113      	cbz	r3, 80106 <__do_global_dtors_aux+0x12>
   80100:	4804      	ldr	r0, [pc, #16]	; (80114 <__do_global_dtors_aux+0x20>)
   80102:	f3af 8000 	nop.w
   80106:	2301      	movs	r3, #1
   80108:	7023      	strb	r3, [r4, #0]
   8010a:	bd10      	pop	{r4, pc}
   8010c:	20070974 	.word	0x20070974
   80110:	00000000 	.word	0x00000000
   80114:	00083da8 	.word	0x00083da8

00080118 <frame_dummy>:
   80118:	4b0c      	ldr	r3, [pc, #48]	; (8014c <frame_dummy+0x34>)
   8011a:	b143      	cbz	r3, 8012e <frame_dummy+0x16>
   8011c:	480c      	ldr	r0, [pc, #48]	; (80150 <frame_dummy+0x38>)
   8011e:	b510      	push	{r4, lr}
   80120:	490c      	ldr	r1, [pc, #48]	; (80154 <frame_dummy+0x3c>)
   80122:	f3af 8000 	nop.w
   80126:	480c      	ldr	r0, [pc, #48]	; (80158 <frame_dummy+0x40>)
   80128:	6803      	ldr	r3, [r0, #0]
   8012a:	b923      	cbnz	r3, 80136 <frame_dummy+0x1e>
   8012c:	bd10      	pop	{r4, pc}
   8012e:	480a      	ldr	r0, [pc, #40]	; (80158 <frame_dummy+0x40>)
   80130:	6803      	ldr	r3, [r0, #0]
   80132:	b933      	cbnz	r3, 80142 <frame_dummy+0x2a>
   80134:	4770      	bx	lr
   80136:	4b09      	ldr	r3, [pc, #36]	; (8015c <frame_dummy+0x44>)
   80138:	2b00      	cmp	r3, #0
   8013a:	d0f7      	beq.n	8012c <frame_dummy+0x14>
   8013c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
   80140:	4718      	bx	r3
   80142:	4b06      	ldr	r3, [pc, #24]	; (8015c <frame_dummy+0x44>)
   80144:	2b00      	cmp	r3, #0
   80146:	d0f5      	beq.n	80134 <frame_dummy+0x1c>
   80148:	4718      	bx	r3
   8014a:	bf00      	nop
   8014c:	00000000 	.word	0x00000000
   80150:	00083da8 	.word	0x00083da8
   80154:	20070978 	.word	0x20070978
   80158:	00083da8 	.word	0x00083da8
   8015c:	00000000 	.word	0x00000000

00080160 <usart_serial_getchar>:
 * \param p_usart   Base address of the USART instance.
 * \param data   Data to read
 *
 */
static inline void usart_serial_getchar(usart_if p_usart, uint8_t *data)
{
   80160:	b5f0      	push	{r4, r5, r6, r7, lr}
   80162:	b083      	sub	sp, #12
   80164:	4604      	mov	r4, r0
   80166:	460d      	mov	r5, r1
	uint32_t val = 0;
   80168:	2300      	movs	r3, #0
   8016a:	9301      	str	r3, [sp, #4]

	/* Avoid Cppcheck Warning */
	UNUSED(val);

#ifdef UART
	if (UART == (Uart*)p_usart) {
   8016c:	4b20      	ldr	r3, [pc, #128]	; (801f0 <usart_serial_getchar+0x90>)
   8016e:	4298      	cmp	r0, r3
   80170:	d00d      	beq.n	8018e <usart_serial_getchar+0x2e>
		while (usart_read(p_usart, &val));
		*data = (uint8_t)(val & 0xFF);
	}
#else
# ifdef USART0
	if (USART0 == p_usart) {
   80172:	4b20      	ldr	r3, [pc, #128]	; (801f4 <usart_serial_getchar+0x94>)
   80174:	4298      	cmp	r0, r3
   80176:	d012      	beq.n	8019e <usart_serial_getchar+0x3e>
		while (usart_read(p_usart, &val));
		*data = (uint8_t)(val & 0xFF);
	}
# endif
# ifdef USART1
	if (USART1 == p_usart) {
   80178:	4b1f      	ldr	r3, [pc, #124]	; (801f8 <usart_serial_getchar+0x98>)
   8017a:	4298      	cmp	r0, r3
   8017c:	d019      	beq.n	801b2 <usart_serial_getchar+0x52>
		while (usart_read(p_usart, &val));
		*data = (uint8_t)(val & 0xFF);
	}
# endif
# ifdef USART2
	if (USART2 == p_usart) {
   8017e:	4b1f      	ldr	r3, [pc, #124]	; (801fc <usart_serial_getchar+0x9c>)
   80180:	429c      	cmp	r4, r3
   80182:	d020      	beq.n	801c6 <usart_serial_getchar+0x66>
		while (usart_read(p_usart, &val));
		*data = (uint8_t)(val & 0xFF);
	}
# endif
# ifdef USART3
	if (USART3 == p_usart) {
   80184:	4b1e      	ldr	r3, [pc, #120]	; (80200 <usart_serial_getchar+0xa0>)
   80186:	429c      	cmp	r4, r3
   80188:	d027      	beq.n	801da <usart_serial_getchar+0x7a>
		*data = (uint8_t)(val & 0xFF);
	}
# endif
#endif /* ifdef USART */

}
   8018a:	b003      	add	sp, #12
   8018c:	bdf0      	pop	{r4, r5, r6, r7, pc}
		while (uart_read((Uart*)p_usart, data));
   8018e:	461f      	mov	r7, r3
   80190:	4e1c      	ldr	r6, [pc, #112]	; (80204 <usart_serial_getchar+0xa4>)
   80192:	4629      	mov	r1, r5
   80194:	4638      	mov	r0, r7
   80196:	47b0      	blx	r6
   80198:	2800      	cmp	r0, #0
   8019a:	d1fa      	bne.n	80192 <usart_serial_getchar+0x32>
   8019c:	e7ef      	b.n	8017e <usart_serial_getchar+0x1e>
		while (usart_read(p_usart, &val));
   8019e:	461f      	mov	r7, r3
   801a0:	4e19      	ldr	r6, [pc, #100]	; (80208 <usart_serial_getchar+0xa8>)
   801a2:	a901      	add	r1, sp, #4
   801a4:	4638      	mov	r0, r7
   801a6:	47b0      	blx	r6
   801a8:	2800      	cmp	r0, #0
   801aa:	d1fa      	bne.n	801a2 <usart_serial_getchar+0x42>
		*data = (uint8_t)(val & 0xFF);
   801ac:	9b01      	ldr	r3, [sp, #4]
   801ae:	702b      	strb	r3, [r5, #0]
   801b0:	e7e8      	b.n	80184 <usart_serial_getchar+0x24>
		while (usart_read(p_usart, &val));
   801b2:	461e      	mov	r6, r3
   801b4:	4c14      	ldr	r4, [pc, #80]	; (80208 <usart_serial_getchar+0xa8>)
   801b6:	a901      	add	r1, sp, #4
   801b8:	4630      	mov	r0, r6
   801ba:	47a0      	blx	r4
   801bc:	2800      	cmp	r0, #0
   801be:	d1fa      	bne.n	801b6 <usart_serial_getchar+0x56>
		*data = (uint8_t)(val & 0xFF);
   801c0:	9b01      	ldr	r3, [sp, #4]
   801c2:	702b      	strb	r3, [r5, #0]
   801c4:	e7e1      	b.n	8018a <usart_serial_getchar+0x2a>
		while (usart_read(p_usart, &val));
   801c6:	461e      	mov	r6, r3
   801c8:	4c0f      	ldr	r4, [pc, #60]	; (80208 <usart_serial_getchar+0xa8>)
   801ca:	a901      	add	r1, sp, #4
   801cc:	4630      	mov	r0, r6
   801ce:	47a0      	blx	r4
   801d0:	2800      	cmp	r0, #0
   801d2:	d1fa      	bne.n	801ca <usart_serial_getchar+0x6a>
		*data = (uint8_t)(val & 0xFF);
   801d4:	9b01      	ldr	r3, [sp, #4]
   801d6:	702b      	strb	r3, [r5, #0]
   801d8:	e7d7      	b.n	8018a <usart_serial_getchar+0x2a>
		while (usart_read(p_usart, &val));
   801da:	461e      	mov	r6, r3
   801dc:	4c0a      	ldr	r4, [pc, #40]	; (80208 <usart_serial_getchar+0xa8>)
   801de:	a901      	add	r1, sp, #4
   801e0:	4630      	mov	r0, r6
   801e2:	47a0      	blx	r4
   801e4:	2800      	cmp	r0, #0
   801e6:	d1fa      	bne.n	801de <usart_serial_getchar+0x7e>
		*data = (uint8_t)(val & 0xFF);
   801e8:	9b01      	ldr	r3, [sp, #4]
   801ea:	702b      	strb	r3, [r5, #0]
}
   801ec:	e7cd      	b.n	8018a <usart_serial_getchar+0x2a>
   801ee:	bf00      	nop
   801f0:	400e0800 	.word	0x400e0800
   801f4:	40098000 	.word	0x40098000
   801f8:	4009c000 	.word	0x4009c000
   801fc:	400a0000 	.word	0x400a0000
   80200:	400a4000 	.word	0x400a4000
   80204:	000807d3 	.word	0x000807d3
   80208:	00080451 	.word	0x00080451

0008020c <usart_serial_putchar>:
{
   8020c:	b570      	push	{r4, r5, r6, lr}
   8020e:	460c      	mov	r4, r1
	if (UART == (Uart*)p_usart) {
   80210:	4b1e      	ldr	r3, [pc, #120]	; (8028c <usart_serial_putchar+0x80>)
   80212:	4298      	cmp	r0, r3
   80214:	d00d      	beq.n	80232 <usart_serial_putchar+0x26>
	if (USART0 == p_usart) {
   80216:	4b1e      	ldr	r3, [pc, #120]	; (80290 <usart_serial_putchar+0x84>)
   80218:	4298      	cmp	r0, r3
   8021a:	d013      	beq.n	80244 <usart_serial_putchar+0x38>
	if (USART1 == p_usart) {
   8021c:	4b1d      	ldr	r3, [pc, #116]	; (80294 <usart_serial_putchar+0x88>)
   8021e:	4298      	cmp	r0, r3
   80220:	d019      	beq.n	80256 <usart_serial_putchar+0x4a>
	if (USART2 == p_usart) {
   80222:	4b1d      	ldr	r3, [pc, #116]	; (80298 <usart_serial_putchar+0x8c>)
   80224:	4298      	cmp	r0, r3
   80226:	d01f      	beq.n	80268 <usart_serial_putchar+0x5c>
	if (USART3 == p_usart) {
   80228:	4b1c      	ldr	r3, [pc, #112]	; (8029c <usart_serial_putchar+0x90>)
   8022a:	4298      	cmp	r0, r3
   8022c:	d025      	beq.n	8027a <usart_serial_putchar+0x6e>
	return 0;
   8022e:	2000      	movs	r0, #0
}
   80230:	bd70      	pop	{r4, r5, r6, pc}
		while (uart_write((Uart*)p_usart, c)!=0);
   80232:	461e      	mov	r6, r3
   80234:	4d1a      	ldr	r5, [pc, #104]	; (802a0 <usart_serial_putchar+0x94>)
   80236:	4621      	mov	r1, r4
   80238:	4630      	mov	r0, r6
   8023a:	47a8      	blx	r5
   8023c:	2800      	cmp	r0, #0
   8023e:	d1fa      	bne.n	80236 <usart_serial_putchar+0x2a>
		return 1;
   80240:	2001      	movs	r0, #1
   80242:	bd70      	pop	{r4, r5, r6, pc}
		while (usart_write(p_usart, c)!=0);
   80244:	461e      	mov	r6, r3
   80246:	4d17      	ldr	r5, [pc, #92]	; (802a4 <usart_serial_putchar+0x98>)
   80248:	4621      	mov	r1, r4
   8024a:	4630      	mov	r0, r6
   8024c:	47a8      	blx	r5
   8024e:	2800      	cmp	r0, #0
   80250:	d1fa      	bne.n	80248 <usart_serial_putchar+0x3c>
		return 1;
   80252:	2001      	movs	r0, #1
   80254:	bd70      	pop	{r4, r5, r6, pc}
		while (usart_write(p_usart, c)!=0);
   80256:	461e      	mov	r6, r3
   80258:	4d12      	ldr	r5, [pc, #72]	; (802a4 <usart_serial_putchar+0x98>)
   8025a:	4621      	mov	r1, r4
   8025c:	4630      	mov	r0, r6
   8025e:	47a8      	blx	r5
   80260:	2800      	cmp	r0, #0
   80262:	d1fa      	bne.n	8025a <usart_serial_putchar+0x4e>
		return 1;
   80264:	2001      	movs	r0, #1
   80266:	bd70      	pop	{r4, r5, r6, pc}
		while (usart_write(p_usart, c)!=0);
   80268:	461e      	mov	r6, r3
   8026a:	4d0e      	ldr	r5, [pc, #56]	; (802a4 <usart_serial_putchar+0x98>)
   8026c:	4621      	mov	r1, r4
   8026e:	4630      	mov	r0, r6
   80270:	47a8      	blx	r5
   80272:	2800      	cmp	r0, #0
   80274:	d1fa      	bne.n	8026c <usart_serial_putchar+0x60>
		return 1;
   80276:	2001      	movs	r0, #1
   80278:	bd70      	pop	{r4, r5, r6, pc}
		while (usart_write(p_usart, c)!=0);
   8027a:	461e      	mov	r6, r3
   8027c:	4d09      	ldr	r5, [pc, #36]	; (802a4 <usart_serial_putchar+0x98>)
   8027e:	4621      	mov	r1, r4
   80280:	4630      	mov	r0, r6
   80282:	47a8      	blx	r5
   80284:	2800      	cmp	r0, #0
   80286:	d1fa      	bne.n	8027e <usart_serial_putchar+0x72>
		return 1;
   80288:	2001      	movs	r0, #1
   8028a:	bd70      	pop	{r4, r5, r6, pc}
   8028c:	400e0800 	.word	0x400e0800
   80290:	40098000 	.word	0x40098000
   80294:	4009c000 	.word	0x4009c000
   80298:	400a0000 	.word	0x400a0000
   8029c:	400a4000 	.word	0x400a4000
   802a0:	000807c3 	.word	0x000807c3
   802a4:	0008043d 	.word	0x0008043d

000802a8 <init_tc>:
/** 
 * Initializes UART console, UART interrupt, command queue
 * and creates TC task 
 */
void init_tc( )
{
   802a8:	b570      	push	{r4, r5, r6, lr}
   802aa:	b084      	sub	sp, #16
 * \param opt         Options needed to set up RS232 communication (see \ref usart_options_t).
 *
 */
static inline void stdio_serial_init(volatile void *usart, const usart_serial_options_t *opt)
{
	stdio_base = (void *)usart;
   802ac:	4c1a      	ldr	r4, [pc, #104]	; (80318 <init_tc+0x70>)
   802ae:	4b1b      	ldr	r3, [pc, #108]	; (8031c <init_tc+0x74>)
   802b0:	601c      	str	r4, [r3, #0]
	ptr_put = (int (*)(void volatile*,char))&usart_serial_putchar;
   802b2:	4a1b      	ldr	r2, [pc, #108]	; (80320 <init_tc+0x78>)
   802b4:	4b1b      	ldr	r3, [pc, #108]	; (80324 <init_tc+0x7c>)
   802b6:	601a      	str	r2, [r3, #0]
	ptr_get = (void (*)(void volatile*,char*))&usart_serial_getchar;
   802b8:	4a1b      	ldr	r2, [pc, #108]	; (80328 <init_tc+0x80>)
   802ba:	4b1c      	ldr	r3, [pc, #112]	; (8032c <init_tc+0x84>)
   802bc:	601a      	str	r2, [r3, #0]
	uart_settings.ul_mck = sysclk_get_peripheral_hz();
   802be:	4b1c      	ldr	r3, [pc, #112]	; (80330 <init_tc+0x88>)
   802c0:	9301      	str	r3, [sp, #4]
	uart_settings.ul_baudrate = opt->baudrate;
   802c2:	f44f 33e1 	mov.w	r3, #115200	; 0x1c200
   802c6:	9302      	str	r3, [sp, #8]
	uart_settings.ul_mode = opt->paritytype;
   802c8:	f44f 6300 	mov.w	r3, #2048	; 0x800
   802cc:	9303      	str	r3, [sp, #12]
 *
 * \param ul_id Id (number) of the peripheral clock.
 */
static inline void sysclk_enable_peripheral_clock(uint32_t ul_id)
{
	pmc_enable_periph_clk(ul_id);
   802ce:	2008      	movs	r0, #8
   802d0:	4b18      	ldr	r3, [pc, #96]	; (80334 <init_tc+0x8c>)
   802d2:	4798      	blx	r3
		uart_init((Uart*)p_usart, &uart_settings);
   802d4:	a901      	add	r1, sp, #4
   802d6:	4620      	mov	r0, r4
   802d8:	4b17      	ldr	r3, [pc, #92]	; (80338 <init_tc+0x90>)
   802da:	4798      	blx	r3
	fdevopen((int (*)(char, FILE*))(_write),(int (*)(FILE*))(_read));
#  endif
#  if UC3 || SAM
	// For AVR32 and SAM GCC
	// Specify that stdout and stdin should not be buffered.
	setbuf(stdout, NULL);
   802dc:	4e17      	ldr	r6, [pc, #92]	; (8033c <init_tc+0x94>)
   802de:	6833      	ldr	r3, [r6, #0]
   802e0:	2100      	movs	r1, #0
   802e2:	6898      	ldr	r0, [r3, #8]
   802e4:	4d16      	ldr	r5, [pc, #88]	; (80340 <init_tc+0x98>)
   802e6:	47a8      	blx	r5
	setbuf(stdin, NULL);
   802e8:	6833      	ldr	r3, [r6, #0]
   802ea:	2100      	movs	r1, #0
   802ec:	6858      	ldr	r0, [r3, #4]
   802ee:	47a8      	blx	r5
	
	/* redirect printf / scanf function calls to UART */
	stdio_serial_init(CONF_UART, &usart_serial_options);
	
    /* Enable UART Interrupt for RX ready */
	uart_enable_interrupt( CONF_UART, UART_IER_RXRDY );
   802f0:	2101      	movs	r1, #1
   802f2:	4620      	mov	r0, r4
   802f4:	4b13      	ldr	r3, [pc, #76]	; (80344 <init_tc+0x9c>)
   802f6:	4798      	blx	r3

    \param [in]      IRQn  External interrupt number. Value cannot be negative.
 */
__STATIC_INLINE void NVIC_EnableIRQ(IRQn_Type IRQn)
{
  NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* enable interrupt */
   802f8:	4b13      	ldr	r3, [pc, #76]	; (80348 <init_tc+0xa0>)
   802fa:	f44f 7280 	mov.w	r2, #256	; 0x100
   802fe:	601a      	str	r2, [r3, #0]
__STATIC_INLINE void NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if(IRQn < 0) {
    SCB->SHP[((uint32_t)(IRQn) & 0xF)-4] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set Priority for Cortex-M  System Interrupts */
  else {
    NVIC->IP[(uint32_t)(IRQn)] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff);    }        /* set Priority for device specific Interrupts  */
   80300:	2250      	movs	r2, #80	; 0x50
   80302:	f883 2308 	strb.w	r2, [r3, #776]	; 0x308
	 * were not called from an ISR with higher or equal priority as 
	 * configMAX_SYSCALL_INTERRUPT_PRIORITY 
	*/
	NVIC_SetPriority(CONF_UART_ID, configMAX_PRIORITIES);
	
	xQueueTC = xQueueCreate( 4, sizeof( char ) );
   80306:	2200      	movs	r2, #0
   80308:	2101      	movs	r1, #1
   8030a:	2004      	movs	r0, #4
   8030c:	4b0f      	ldr	r3, [pc, #60]	; (8034c <init_tc+0xa4>)
   8030e:	4798      	blx	r3
   80310:	4b0f      	ldr	r3, [pc, #60]	; (80350 <init_tc+0xa8>)
   80312:	6018      	str	r0, [r3, #0]
	
}
   80314:	b004      	add	sp, #16
   80316:	bd70      	pop	{r4, r5, r6, pc}
   80318:	400e0800 	.word	0x400e0800
   8031c:	2007c3a4 	.word	0x2007c3a4
   80320:	0008020d 	.word	0x0008020d
   80324:	2007c3a0 	.word	0x2007c3a0
   80328:	00080161 	.word	0x00080161
   8032c:	2007c39c 	.word	0x2007c39c
   80330:	0501bd00 	.word	0x0501bd00
   80334:	00082941 	.word	0x00082941
   80338:	00080789 	.word	0x00080789
   8033c:	20070134 	.word	0x20070134
   80340:	00082d71 	.word	0x00082d71
   80344:	000807bf 	.word	0x000807bf
   80348:	e000e100 	.word	0xe000e100
   8034c:	00080ddd 	.word	0x00080ddd
   80350:	2007c398 	.word	0x2007c398

00080354 <handleInput>:
/** 
 * TC task function, interprets received data from UART
 */
void handleInput(unsigned char input) {
   80354:	b508      	push	{r3, lr}
	
	switch (input) {
   80356:	2862      	cmp	r0, #98	; 0x62
   80358:	d008      	beq.n	8036c <handleInput+0x18>
   8035a:	2863      	cmp	r0, #99	; 0x63
   8035c:	d00a      	beq.n	80374 <handleInput+0x20>
   8035e:	2861      	cmp	r0, #97	; 0x61
   80360:	d000      	beq.n	80364 <handleInput+0x10>
   80362:	bd08      	pop	{r3, pc}
		case ('a'):
		set_cmd(0); /* sets the command value to 0 */
   80364:	2000      	movs	r0, #0
   80366:	4b05      	ldr	r3, [pc, #20]	; (8037c <handleInput+0x28>)
   80368:	4798      	blx	r3
		break;
   8036a:	bd08      	pop	{r3, pc}
		case ('b'):
		set_cmd(1); /* sets the command value to 1 */
   8036c:	2001      	movs	r0, #1
   8036e:	4b03      	ldr	r3, [pc, #12]	; (8037c <handleInput+0x28>)
   80370:	4798      	blx	r3
		break;
   80372:	bd08      	pop	{r3, pc}
		case ('c'):
		set_cmd(2); /* sets the command value to 2 */
   80374:	2002      	movs	r0, #2
   80376:	4b01      	ldr	r3, [pc, #4]	; (8037c <handleInput+0x28>)
   80378:	4798      	blx	r3
		break;
	}

}
   8037a:	e7f2      	b.n	80362 <handleInput+0xe>
   8037c:	00080759 	.word	0x00080759

00080380 <uartInterrupt>:
void UART_Handler( )
{
	uartInterrupt();
}

void uartInterrupt(){ /* Handling the interrupt event */
   80380:	b508      	push	{r3, lr}
	
	/* The UART interrupt is triggered both for RX and TX, therefore
	   we have to see if RXRDY is set in the UART status register */
	if((CONF_UART->UART_SR & UART_SR_RXRDY) == UART_SR_RXRDY)
   80382:	4b06      	ldr	r3, [pc, #24]	; (8039c <uartInterrupt+0x1c>)
   80384:	695b      	ldr	r3, [r3, #20]
   80386:	f013 0f01 	tst.w	r3, #1
   8038a:	d100      	bne.n	8038e <uartInterrupt+0xe>
   8038c:	bd08      	pop	{r3, pc}
	{
		TC_input=CONF_UART->UART_RHR;
   8038e:	4b03      	ldr	r3, [pc, #12]	; (8039c <uartInterrupt+0x1c>)
   80390:	6998      	ldr	r0, [r3, #24]
		handleInput(TC_input);
   80392:	b2c0      	uxtb	r0, r0
   80394:	4b02      	ldr	r3, [pc, #8]	; (803a0 <uartInterrupt+0x20>)
   80396:	4798      	blx	r3
	}
   80398:	e7f8      	b.n	8038c <uartInterrupt+0xc>
   8039a:	bf00      	nop
   8039c:	400e0800 	.word	0x400e0800
   803a0:	00080355 	.word	0x00080355

000803a4 <UART_Handler>:
{
   803a4:	b508      	push	{r3, lr}
	uartInterrupt();
   803a6:	4b01      	ldr	r3, [pc, #4]	; (803ac <UART_Handler+0x8>)
   803a8:	4798      	blx	r3
   803aa:	bd08      	pop	{r3, pc}
   803ac:	00080381 	.word	0x00080381

000803b0 <_read>:
   803b0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   803b4:	b980      	cbnz	r0, 803d8 <_read+0x28>
   803b6:	460c      	mov	r4, r1
   803b8:	4690      	mov	r8, r2
   803ba:	2a00      	cmp	r2, #0
   803bc:	dd0f      	ble.n	803de <_read+0x2e>
   803be:	188f      	adds	r7, r1, r2
   803c0:	4e08      	ldr	r6, [pc, #32]	; (803e4 <_read+0x34>)
   803c2:	4d09      	ldr	r5, [pc, #36]	; (803e8 <_read+0x38>)
   803c4:	6830      	ldr	r0, [r6, #0]
   803c6:	4621      	mov	r1, r4
   803c8:	682b      	ldr	r3, [r5, #0]
   803ca:	4798      	blx	r3
   803cc:	3401      	adds	r4, #1
   803ce:	42bc      	cmp	r4, r7
   803d0:	d1f8      	bne.n	803c4 <_read+0x14>
   803d2:	4640      	mov	r0, r8
   803d4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   803d8:	f04f 38ff 	mov.w	r8, #4294967295
   803dc:	e7f9      	b.n	803d2 <_read+0x22>
   803de:	4680      	mov	r8, r0
   803e0:	e7f7      	b.n	803d2 <_read+0x22>
   803e2:	bf00      	nop
   803e4:	2007c3a4 	.word	0x2007c3a4
   803e8:	2007c39c 	.word	0x2007c39c

000803ec <_write>:
   803ec:	3801      	subs	r0, #1
   803ee:	2802      	cmp	r0, #2
   803f0:	d815      	bhi.n	8041e <_write+0x32>
   803f2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   803f6:	460e      	mov	r6, r1
   803f8:	4614      	mov	r4, r2
   803fa:	b19a      	cbz	r2, 80424 <_write+0x38>
   803fc:	460d      	mov	r5, r1
   803fe:	f8df 8038 	ldr.w	r8, [pc, #56]	; 80438 <_write+0x4c>
   80402:	4f0c      	ldr	r7, [pc, #48]	; (80434 <_write+0x48>)
   80404:	f8d8 0000 	ldr.w	r0, [r8]
   80408:	f815 1b01 	ldrb.w	r1, [r5], #1
   8040c:	683b      	ldr	r3, [r7, #0]
   8040e:	4798      	blx	r3
   80410:	2800      	cmp	r0, #0
   80412:	db0a      	blt.n	8042a <_write+0x3e>
   80414:	1ba8      	subs	r0, r5, r6
   80416:	3c01      	subs	r4, #1
   80418:	d1f4      	bne.n	80404 <_write+0x18>
   8041a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   8041e:	f04f 30ff 	mov.w	r0, #4294967295
   80422:	4770      	bx	lr
   80424:	4610      	mov	r0, r2
   80426:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   8042a:	f04f 30ff 	mov.w	r0, #4294967295
   8042e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   80432:	bf00      	nop
   80434:	2007c3a0 	.word	0x2007c3a0
   80438:	2007c3a4 	.word	0x2007c3a4

0008043c <usart_write>:
   8043c:	6943      	ldr	r3, [r0, #20]
   8043e:	f013 0f02 	tst.w	r3, #2
   80442:	bf1d      	ittte	ne
   80444:	f3c1 0108 	ubfxne	r1, r1, #0, #9
   80448:	61c1      	strne	r1, [r0, #28]
   8044a:	2000      	movne	r0, #0
   8044c:	2001      	moveq	r0, #1
   8044e:	4770      	bx	lr

00080450 <usart_read>:
   80450:	6943      	ldr	r3, [r0, #20]
   80452:	f013 0f01 	tst.w	r3, #1
   80456:	d005      	beq.n	80464 <usart_read+0x14>
   80458:	6983      	ldr	r3, [r0, #24]
   8045a:	f3c3 0308 	ubfx	r3, r3, #0, #9
   8045e:	600b      	str	r3, [r1, #0]
   80460:	2000      	movs	r0, #0
   80462:	4770      	bx	lr
   80464:	2001      	movs	r0, #1
   80466:	4770      	bx	lr

00080468 <blink>:

/* Define global variables */
/* Initialize state which will hold the current state and set initial * state */
static enum states currentState = START;

void blink(void *pvParameters ) {
   80468:	b500      	push	{lr}
   8046a:	b083      	sub	sp, #12
	
	TickType_t xLastWakeTime;		/* Last wake time of the task, needed for periodic execution */
	xLastWakeTime = xTaskGetTickCount();
   8046c:	4b23      	ldr	r3, [pc, #140]	; (804fc <blink+0x94>)
   8046e:	4798      	blx	r3
   80470:	9001      	str	r0, [sp, #4]
	
	for( ;; ) {
		
		switch (get_cmd()) {    /* Get the command value */
   80472:	4e23      	ldr	r6, [pc, #140]	; (80500 <blink+0x98>)
				PIOB->PIO_SODR = 1 << 27;
			}
			break;
			
			case(LOWF):
			delay = 250;
   80474:	4c23      	ldr	r4, [pc, #140]	; (80504 <blink+0x9c>)
			if((PIOB->PIO_ODSR & (1 << 27)) > 0) {
   80476:	4d24      	ldr	r5, [pc, #144]	; (80508 <blink+0xa0>)
   80478:	e029      	b.n	804ce <blink+0x66>
			currentState = READY;       /* Ready state */
   8047a:	2201      	movs	r2, #1
   8047c:	4b23      	ldr	r3, [pc, #140]	; (8050c <blink+0xa4>)
   8047e:	701a      	strb	r2, [r3, #0]
			PIOB->PIO_SODR = 1 << 27;
   80480:	f04f 6300 	mov.w	r3, #134217728	; 0x8000000
   80484:	632b      	str	r3, [r5, #48]	; 0x30
			break;
   80486:	e01e      	b.n	804c6 <blink+0x5e>
			currentState = LOWF; /* Low frequency blinking state */    
   80488:	2202      	movs	r2, #2
   8048a:	4b20      	ldr	r3, [pc, #128]	; (8050c <blink+0xa4>)
   8048c:	701a      	strb	r2, [r3, #0]
			delay = 250;
   8048e:	23fa      	movs	r3, #250	; 0xfa
   80490:	6023      	str	r3, [r4, #0]
			if((PIOB->PIO_ODSR & (1 << 27)) > 0) {
   80492:	6bab      	ldr	r3, [r5, #56]	; 0x38
   80494:	f013 6f00 	tst.w	r3, #134217728	; 0x8000000
				/* If pin 27 is active -> turn off via Clear Output Data Register (CODR) */
				PIOB->PIO_CODR = 1 << 27;
   80498:	f04f 6300 	mov.w	r3, #134217728	; 0x8000000
   8049c:	bf14      	ite	ne
   8049e:	636b      	strne	r3, [r5, #52]	; 0x34
				} else {
				/* If pin 27 is not active -> turn on via Set Output Data Register (SODR) */
				PIOB->PIO_SODR = 1 << 27;
   804a0:	632b      	streq	r3, [r5, #48]	; 0x30
   804a2:	e010      	b.n	804c6 <blink+0x5e>
			currentState = HIGHF; /* High frequency blinking state */        
   804a4:	2203      	movs	r2, #3
   804a6:	4b19      	ldr	r3, [pc, #100]	; (8050c <blink+0xa4>)
   804a8:	701a      	strb	r2, [r3, #0]
			delay = 50;
   804aa:	2332      	movs	r3, #50	; 0x32
   804ac:	6023      	str	r3, [r4, #0]
			if((PIOB->PIO_ODSR & (1 << 27)) > 0) {
   804ae:	6bab      	ldr	r3, [r5, #56]	; 0x38
   804b0:	f013 6f00 	tst.w	r3, #134217728	; 0x8000000
				PIOB->PIO_CODR = 1 << 27;
   804b4:	f04f 6300 	mov.w	r3, #134217728	; 0x8000000
   804b8:	bf14      	ite	ne
   804ba:	636b      	strne	r3, [r5, #52]	; 0x34
				PIOB->PIO_SODR = 1 << 27;
   804bc:	632b      	streq	r3, [r5, #48]	; 0x30
   804be:	e002      	b.n	804c6 <blink+0x5e>
			PIOB->PIO_CODR = 1 << 27;
   804c0:	f04f 6300 	mov.w	r3, #134217728	; 0x8000000
   804c4:	636b      	str	r3, [r5, #52]	; 0x34
			}
			break;
		}
		vTaskDelayUntil(&xLastWakeTime, delay/portTICK_RATE_MS); /* Absolute delay */
   804c6:	6821      	ldr	r1, [r4, #0]
   804c8:	a801      	add	r0, sp, #4
   804ca:	4b11      	ldr	r3, [pc, #68]	; (80510 <blink+0xa8>)
   804cc:	4798      	blx	r3
		switch (get_cmd()) {    /* Get the command value */
   804ce:	47b0      	blx	r6
   804d0:	2801      	cmp	r0, #1
   804d2:	d0d9      	beq.n	80488 <blink+0x20>
   804d4:	2800      	cmp	r0, #0
   804d6:	d0d0      	beq.n	8047a <blink+0x12>
   804d8:	2802      	cmp	r0, #2
   804da:	d0e3      	beq.n	804a4 <blink+0x3c>
		switch(currentState) {
   804dc:	4b0b      	ldr	r3, [pc, #44]	; (8050c <blink+0xa4>)
   804de:	781b      	ldrb	r3, [r3, #0]
   804e0:	2b03      	cmp	r3, #3
   804e2:	d8f0      	bhi.n	804c6 <blink+0x5e>
   804e4:	a201      	add	r2, pc, #4	; (adr r2, 804ec <blink+0x84>)
   804e6:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
   804ea:	bf00      	nop
   804ec:	000804c1 	.word	0x000804c1
   804f0:	00080481 	.word	0x00080481
   804f4:	0008048f 	.word	0x0008048f
   804f8:	000804ab 	.word	0x000804ab
   804fc:	000818cd 	.word	0x000818cd
   80500:	00080729 	.word	0x00080729
   80504:	20070994 	.word	0x20070994
   80508:	400e1000 	.word	0x400e1000
   8050c:	20070990 	.word	0x20070990
   80510:	00081b21 	.word	0x00081b21

00080514 <init_blink>:
}



void init_blink( )
{
   80514:	b510      	push	{r4, lr}
   80516:	b082      	sub	sp, #8
	/* Initialize LED0 on Port B Pin 27*/
	PIOB->PIO_PER = 1 << 27;		/* Pin Enable Register (PER) */
   80518:	4b08      	ldr	r3, [pc, #32]	; (8053c <init_blink+0x28>)
   8051a:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
   8051e:	601a      	str	r2, [r3, #0]
	PIOB->PIO_OER = 1 << 27;		/* Output Enable Register (OER) */
   80520:	611a      	str	r2, [r3, #16]
	PIOB->PIO_OWER = 1 << 27;		/* Output Write Enable Register (OWER) */
   80522:	f8c3 20a0 	str.w	r2, [r3, #160]	; 0xa0
	
		/* Create task */
		xTaskCreate(
   80526:	2300      	movs	r3, #0
   80528:	9301      	str	r3, [sp, #4]
   8052a:	2201      	movs	r2, #1
   8052c:	9200      	str	r2, [sp, #0]
   8052e:	22fa      	movs	r2, #250	; 0xfa
   80530:	4903      	ldr	r1, [pc, #12]	; (80540 <init_blink+0x2c>)
   80532:	4804      	ldr	r0, [pc, #16]	; (80544 <init_blink+0x30>)
   80534:	4c04      	ldr	r4, [pc, #16]	; (80548 <init_blink+0x34>)
   80536:	47a0      	blx	r4
		250,				/* Stack size in words, not bytes. */
		NULL,				/* Parameter passed into the task. */
		1,					/* Priority at which the task is created. */
		NULL 				/* Used to pass out the created task's handle. */
		);
   80538:	b002      	add	sp, #8
   8053a:	bd10      	pop	{r4, pc}
   8053c:	400e1000 	.word	0x400e1000
   80540:	00083d5c 	.word	0x00083d5c
   80544:	00080469 	.word	0x00080469
   80548:	0008163d 	.word	0x0008163d

0008054c <usart_serial_getchar>:
{
   8054c:	b5f0      	push	{r4, r5, r6, r7, lr}
   8054e:	b083      	sub	sp, #12
   80550:	4604      	mov	r4, r0
   80552:	460d      	mov	r5, r1
	uint32_t val = 0;
   80554:	2300      	movs	r3, #0
   80556:	9301      	str	r3, [sp, #4]
	if (UART == (Uart*)p_usart) {
   80558:	4b20      	ldr	r3, [pc, #128]	; (805dc <usart_serial_getchar+0x90>)
   8055a:	4298      	cmp	r0, r3
   8055c:	d00d      	beq.n	8057a <usart_serial_getchar+0x2e>
	if (USART0 == p_usart) {
   8055e:	4b20      	ldr	r3, [pc, #128]	; (805e0 <usart_serial_getchar+0x94>)
   80560:	4298      	cmp	r0, r3
   80562:	d012      	beq.n	8058a <usart_serial_getchar+0x3e>
	if (USART1 == p_usart) {
   80564:	4b1f      	ldr	r3, [pc, #124]	; (805e4 <usart_serial_getchar+0x98>)
   80566:	4298      	cmp	r0, r3
   80568:	d019      	beq.n	8059e <usart_serial_getchar+0x52>
	if (USART2 == p_usart) {
   8056a:	4b1f      	ldr	r3, [pc, #124]	; (805e8 <usart_serial_getchar+0x9c>)
   8056c:	429c      	cmp	r4, r3
   8056e:	d020      	beq.n	805b2 <usart_serial_getchar+0x66>
	if (USART3 == p_usart) {
   80570:	4b1e      	ldr	r3, [pc, #120]	; (805ec <usart_serial_getchar+0xa0>)
   80572:	429c      	cmp	r4, r3
   80574:	d027      	beq.n	805c6 <usart_serial_getchar+0x7a>
}
   80576:	b003      	add	sp, #12
   80578:	bdf0      	pop	{r4, r5, r6, r7, pc}
		while (uart_read((Uart*)p_usart, data));
   8057a:	461f      	mov	r7, r3
   8057c:	4e1c      	ldr	r6, [pc, #112]	; (805f0 <usart_serial_getchar+0xa4>)
   8057e:	4629      	mov	r1, r5
   80580:	4638      	mov	r0, r7
   80582:	47b0      	blx	r6
   80584:	2800      	cmp	r0, #0
   80586:	d1fa      	bne.n	8057e <usart_serial_getchar+0x32>
   80588:	e7ef      	b.n	8056a <usart_serial_getchar+0x1e>
		while (usart_read(p_usart, &val));
   8058a:	461f      	mov	r7, r3
   8058c:	4e19      	ldr	r6, [pc, #100]	; (805f4 <usart_serial_getchar+0xa8>)
   8058e:	a901      	add	r1, sp, #4
   80590:	4638      	mov	r0, r7
   80592:	47b0      	blx	r6
   80594:	2800      	cmp	r0, #0
   80596:	d1fa      	bne.n	8058e <usart_serial_getchar+0x42>
		*data = (uint8_t)(val & 0xFF);
   80598:	9b01      	ldr	r3, [sp, #4]
   8059a:	702b      	strb	r3, [r5, #0]
   8059c:	e7e8      	b.n	80570 <usart_serial_getchar+0x24>
		while (usart_read(p_usart, &val));
   8059e:	461e      	mov	r6, r3
   805a0:	4c14      	ldr	r4, [pc, #80]	; (805f4 <usart_serial_getchar+0xa8>)
   805a2:	a901      	add	r1, sp, #4
   805a4:	4630      	mov	r0, r6
   805a6:	47a0      	blx	r4
   805a8:	2800      	cmp	r0, #0
   805aa:	d1fa      	bne.n	805a2 <usart_serial_getchar+0x56>
		*data = (uint8_t)(val & 0xFF);
   805ac:	9b01      	ldr	r3, [sp, #4]
   805ae:	702b      	strb	r3, [r5, #0]
   805b0:	e7e1      	b.n	80576 <usart_serial_getchar+0x2a>
		while (usart_read(p_usart, &val));
   805b2:	461e      	mov	r6, r3
   805b4:	4c0f      	ldr	r4, [pc, #60]	; (805f4 <usart_serial_getchar+0xa8>)
   805b6:	a901      	add	r1, sp, #4
   805b8:	4630      	mov	r0, r6
   805ba:	47a0      	blx	r4
   805bc:	2800      	cmp	r0, #0
   805be:	d1fa      	bne.n	805b6 <usart_serial_getchar+0x6a>
		*data = (uint8_t)(val & 0xFF);
   805c0:	9b01      	ldr	r3, [sp, #4]
   805c2:	702b      	strb	r3, [r5, #0]
   805c4:	e7d7      	b.n	80576 <usart_serial_getchar+0x2a>
		while (usart_read(p_usart, &val));
   805c6:	461e      	mov	r6, r3
   805c8:	4c0a      	ldr	r4, [pc, #40]	; (805f4 <usart_serial_getchar+0xa8>)
   805ca:	a901      	add	r1, sp, #4
   805cc:	4630      	mov	r0, r6
   805ce:	47a0      	blx	r4
   805d0:	2800      	cmp	r0, #0
   805d2:	d1fa      	bne.n	805ca <usart_serial_getchar+0x7e>
		*data = (uint8_t)(val & 0xFF);
   805d4:	9b01      	ldr	r3, [sp, #4]
   805d6:	702b      	strb	r3, [r5, #0]
}
   805d8:	e7cd      	b.n	80576 <usart_serial_getchar+0x2a>
   805da:	bf00      	nop
   805dc:	400e0800 	.word	0x400e0800
   805e0:	40098000 	.word	0x40098000
   805e4:	4009c000 	.word	0x4009c000
   805e8:	400a0000 	.word	0x400a0000
   805ec:	400a4000 	.word	0x400a4000
   805f0:	000807d3 	.word	0x000807d3
   805f4:	00080451 	.word	0x00080451

000805f8 <usart_serial_putchar>:
{
   805f8:	b570      	push	{r4, r5, r6, lr}
   805fa:	460c      	mov	r4, r1
	if (UART == (Uart*)p_usart) {
   805fc:	4b1e      	ldr	r3, [pc, #120]	; (80678 <usart_serial_putchar+0x80>)
   805fe:	4298      	cmp	r0, r3
   80600:	d00d      	beq.n	8061e <usart_serial_putchar+0x26>
	if (USART0 == p_usart) {
   80602:	4b1e      	ldr	r3, [pc, #120]	; (8067c <usart_serial_putchar+0x84>)
   80604:	4298      	cmp	r0, r3
   80606:	d013      	beq.n	80630 <usart_serial_putchar+0x38>
	if (USART1 == p_usart) {
   80608:	4b1d      	ldr	r3, [pc, #116]	; (80680 <usart_serial_putchar+0x88>)
   8060a:	4298      	cmp	r0, r3
   8060c:	d019      	beq.n	80642 <usart_serial_putchar+0x4a>
	if (USART2 == p_usart) {
   8060e:	4b1d      	ldr	r3, [pc, #116]	; (80684 <usart_serial_putchar+0x8c>)
   80610:	4298      	cmp	r0, r3
   80612:	d01f      	beq.n	80654 <usart_serial_putchar+0x5c>
	if (USART3 == p_usart) {
   80614:	4b1c      	ldr	r3, [pc, #112]	; (80688 <usart_serial_putchar+0x90>)
   80616:	4298      	cmp	r0, r3
   80618:	d025      	beq.n	80666 <usart_serial_putchar+0x6e>
	return 0;
   8061a:	2000      	movs	r0, #0
}
   8061c:	bd70      	pop	{r4, r5, r6, pc}
		while (uart_write((Uart*)p_usart, c)!=0);
   8061e:	461e      	mov	r6, r3
   80620:	4d1a      	ldr	r5, [pc, #104]	; (8068c <usart_serial_putchar+0x94>)
   80622:	4621      	mov	r1, r4
   80624:	4630      	mov	r0, r6
   80626:	47a8      	blx	r5
   80628:	2800      	cmp	r0, #0
   8062a:	d1fa      	bne.n	80622 <usart_serial_putchar+0x2a>
		return 1;
   8062c:	2001      	movs	r0, #1
   8062e:	bd70      	pop	{r4, r5, r6, pc}
		while (usart_write(p_usart, c)!=0);
   80630:	461e      	mov	r6, r3
   80632:	4d17      	ldr	r5, [pc, #92]	; (80690 <usart_serial_putchar+0x98>)
   80634:	4621      	mov	r1, r4
   80636:	4630      	mov	r0, r6
   80638:	47a8      	blx	r5
   8063a:	2800      	cmp	r0, #0
   8063c:	d1fa      	bne.n	80634 <usart_serial_putchar+0x3c>
		return 1;
   8063e:	2001      	movs	r0, #1
   80640:	bd70      	pop	{r4, r5, r6, pc}
		while (usart_write(p_usart, c)!=0);
   80642:	461e      	mov	r6, r3
   80644:	4d12      	ldr	r5, [pc, #72]	; (80690 <usart_serial_putchar+0x98>)
   80646:	4621      	mov	r1, r4
   80648:	4630      	mov	r0, r6
   8064a:	47a8      	blx	r5
   8064c:	2800      	cmp	r0, #0
   8064e:	d1fa      	bne.n	80646 <usart_serial_putchar+0x4e>
		return 1;
   80650:	2001      	movs	r0, #1
   80652:	bd70      	pop	{r4, r5, r6, pc}
		while (usart_write(p_usart, c)!=0);
   80654:	461e      	mov	r6, r3
   80656:	4d0e      	ldr	r5, [pc, #56]	; (80690 <usart_serial_putchar+0x98>)
   80658:	4621      	mov	r1, r4
   8065a:	4630      	mov	r0, r6
   8065c:	47a8      	blx	r5
   8065e:	2800      	cmp	r0, #0
   80660:	d1fa      	bne.n	80658 <usart_serial_putchar+0x60>
		return 1;
   80662:	2001      	movs	r0, #1
   80664:	bd70      	pop	{r4, r5, r6, pc}
		while (usart_write(p_usart, c)!=0);
   80666:	461e      	mov	r6, r3
   80668:	4d09      	ldr	r5, [pc, #36]	; (80690 <usart_serial_putchar+0x98>)
   8066a:	4621      	mov	r1, r4
   8066c:	4630      	mov	r0, r6
   8066e:	47a8      	blx	r5
   80670:	2800      	cmp	r0, #0
   80672:	d1fa      	bne.n	8066a <usart_serial_putchar+0x72>
		return 1;
   80674:	2001      	movs	r0, #1
   80676:	bd70      	pop	{r4, r5, r6, pc}
   80678:	400e0800 	.word	0x400e0800
   8067c:	40098000 	.word	0x40098000
   80680:	4009c000 	.word	0x4009c000
   80684:	400a0000 	.word	0x400a0000
   80688:	400a4000 	.word	0x400a4000
   8068c:	000807c3 	.word	0x000807c3
   80690:	0008043d 	.word	0x0008043d

00080694 <init_cmd>:
/* Prototypes */
static unsigned char cmd_curr;

/* Initializes command object
*/
void init_cmd() {
   80694:	b530      	push	{r4, r5, lr}
   80696:	b085      	sub	sp, #20
	
	xCommandSemaphore = xSemaphoreCreateMutex();
   80698:	2001      	movs	r0, #1
   8069a:	4b15      	ldr	r3, [pc, #84]	; (806f0 <init_cmd+0x5c>)
   8069c:	4798      	blx	r3
   8069e:	4b15      	ldr	r3, [pc, #84]	; (806f4 <init_cmd+0x60>)
   806a0:	6018      	str	r0, [r3, #0]
	cmd_curr = 1;
   806a2:	2201      	movs	r2, #1
   806a4:	4b14      	ldr	r3, [pc, #80]	; (806f8 <init_cmd+0x64>)
   806a6:	701a      	strb	r2, [r3, #0]
	stdio_base = (void *)usart;
   806a8:	4c14      	ldr	r4, [pc, #80]	; (806fc <init_cmd+0x68>)
   806aa:	4b15      	ldr	r3, [pc, #84]	; (80700 <init_cmd+0x6c>)
   806ac:	601c      	str	r4, [r3, #0]
	ptr_put = (int (*)(void volatile*,char))&usart_serial_putchar;
   806ae:	4a15      	ldr	r2, [pc, #84]	; (80704 <init_cmd+0x70>)
   806b0:	4b15      	ldr	r3, [pc, #84]	; (80708 <init_cmd+0x74>)
   806b2:	601a      	str	r2, [r3, #0]
	ptr_get = (void (*)(void volatile*,char*))&usart_serial_getchar;
   806b4:	4a15      	ldr	r2, [pc, #84]	; (8070c <init_cmd+0x78>)
   806b6:	4b16      	ldr	r3, [pc, #88]	; (80710 <init_cmd+0x7c>)
   806b8:	601a      	str	r2, [r3, #0]
	uart_settings.ul_mck = sysclk_get_peripheral_hz();
   806ba:	4b16      	ldr	r3, [pc, #88]	; (80714 <init_cmd+0x80>)
   806bc:	9301      	str	r3, [sp, #4]
	uart_settings.ul_baudrate = opt->baudrate;
   806be:	f44f 33e1 	mov.w	r3, #115200	; 0x1c200
   806c2:	9302      	str	r3, [sp, #8]
	uart_settings.ul_mode = opt->paritytype;
   806c4:	f44f 6300 	mov.w	r3, #2048	; 0x800
   806c8:	9303      	str	r3, [sp, #12]
   806ca:	2008      	movs	r0, #8
   806cc:	4b12      	ldr	r3, [pc, #72]	; (80718 <init_cmd+0x84>)
   806ce:	4798      	blx	r3
		uart_init((Uart*)p_usart, &uart_settings);
   806d0:	a901      	add	r1, sp, #4
   806d2:	4620      	mov	r0, r4
   806d4:	4b11      	ldr	r3, [pc, #68]	; (8071c <init_cmd+0x88>)
   806d6:	4798      	blx	r3
	setbuf(stdout, NULL);
   806d8:	4d11      	ldr	r5, [pc, #68]	; (80720 <init_cmd+0x8c>)
   806da:	682b      	ldr	r3, [r5, #0]
   806dc:	2100      	movs	r1, #0
   806de:	6898      	ldr	r0, [r3, #8]
   806e0:	4c10      	ldr	r4, [pc, #64]	; (80724 <init_cmd+0x90>)
   806e2:	47a0      	blx	r4
	setbuf(stdin, NULL);
   806e4:	682b      	ldr	r3, [r5, #0]
   806e6:	2100      	movs	r1, #0
   806e8:	6858      	ldr	r0, [r3, #4]
   806ea:	47a0      	blx	r4
		.paritytype = CONF_UART_PARITY,
		.stopbits   = CONF_UART_STOP_BITS
	};
	
	stdio_serial_init(CONF_UART, &usart_serial_options);
}
   806ec:	b005      	add	sp, #20
   806ee:	bd30      	pop	{r4, r5, pc}
   806f0:	00080fe5 	.word	0x00080fe5
   806f4:	2007099c 	.word	0x2007099c
   806f8:	20070998 	.word	0x20070998
   806fc:	400e0800 	.word	0x400e0800
   80700:	2007c3a4 	.word	0x2007c3a4
   80704:	000805f9 	.word	0x000805f9
   80708:	2007c3a0 	.word	0x2007c3a0
   8070c:	0008054d 	.word	0x0008054d
   80710:	2007c39c 	.word	0x2007c39c
   80714:	0501bd00 	.word	0x0501bd00
   80718:	00082941 	.word	0x00082941
   8071c:	00080789 	.word	0x00080789
   80720:	20070134 	.word	0x20070134
   80724:	00082d71 	.word	0x00082d71

00080728 <get_cmd>:


unsigned char get_cmd() {
   80728:	b538      	push	{r3, r4, r5, lr}
	
	unsigned char cmd_temp;
	xSemaphoreTake( xCommandSemaphore, (TickType_t) 1);
   8072a:	4c07      	ldr	r4, [pc, #28]	; (80748 <get_cmd+0x20>)
   8072c:	2101      	movs	r1, #1
   8072e:	6820      	ldr	r0, [r4, #0]
   80730:	4b06      	ldr	r3, [pc, #24]	; (8074c <get_cmd+0x24>)
   80732:	4798      	blx	r3
	cmd_temp = cmd_curr; 
   80734:	4b06      	ldr	r3, [pc, #24]	; (80750 <get_cmd+0x28>)
   80736:	781d      	ldrb	r5, [r3, #0]
	xSemaphoreGive( xCommandSemaphore);
   80738:	2300      	movs	r3, #0
   8073a:	461a      	mov	r2, r3
   8073c:	4619      	mov	r1, r3
   8073e:	6820      	ldr	r0, [r4, #0]
   80740:	4c04      	ldr	r4, [pc, #16]	; (80754 <get_cmd+0x2c>)
   80742:	47a0      	blx	r4
	return cmd_temp; /* returns the current command value*/
	
}
   80744:	4628      	mov	r0, r5
   80746:	bd38      	pop	{r3, r4, r5, pc}
   80748:	2007099c 	.word	0x2007099c
   8074c:	0008127d 	.word	0x0008127d
   80750:	20070998 	.word	0x20070998
   80754:	00080e31 	.word	0x00080e31

00080758 <set_cmd>:


void set_cmd ( unsigned char c) {
   80758:	b538      	push	{r3, r4, r5, lr}
   8075a:	4605      	mov	r5, r0
	
	xSemaphoreTake( xCommandSemaphore, (TickType_t) 1);
   8075c:	4c06      	ldr	r4, [pc, #24]	; (80778 <set_cmd+0x20>)
   8075e:	2101      	movs	r1, #1
   80760:	6820      	ldr	r0, [r4, #0]
   80762:	4b06      	ldr	r3, [pc, #24]	; (8077c <set_cmd+0x24>)
   80764:	4798      	blx	r3
	cmd_curr = c; /* sets the current command value to new the value*/
   80766:	4b06      	ldr	r3, [pc, #24]	; (80780 <set_cmd+0x28>)
   80768:	701d      	strb	r5, [r3, #0]
	xSemaphoreGive( xCommandSemaphore);
   8076a:	2300      	movs	r3, #0
   8076c:	461a      	mov	r2, r3
   8076e:	4619      	mov	r1, r3
   80770:	6820      	ldr	r0, [r4, #0]
   80772:	4c04      	ldr	r4, [pc, #16]	; (80784 <set_cmd+0x2c>)
   80774:	47a0      	blx	r4
   80776:	bd38      	pop	{r3, r4, r5, pc}
   80778:	2007099c 	.word	0x2007099c
   8077c:	0008127d 	.word	0x0008127d
   80780:	20070998 	.word	0x20070998
   80784:	00080e31 	.word	0x00080e31

00080788 <uart_init>:
   80788:	b410      	push	{r4}
   8078a:	23ac      	movs	r3, #172	; 0xac
   8078c:	6003      	str	r3, [r0, #0]
   8078e:	680b      	ldr	r3, [r1, #0]
   80790:	684a      	ldr	r2, [r1, #4]
   80792:	fbb3 f3f2 	udiv	r3, r3, r2
   80796:	091b      	lsrs	r3, r3, #4
   80798:	1e5c      	subs	r4, r3, #1
   8079a:	f64f 72fe 	movw	r2, #65534	; 0xfffe
   8079e:	4294      	cmp	r4, r2
   807a0:	d80b      	bhi.n	807ba <uart_init+0x32>
   807a2:	6203      	str	r3, [r0, #32]
   807a4:	688b      	ldr	r3, [r1, #8]
   807a6:	6043      	str	r3, [r0, #4]
   807a8:	f240 2302 	movw	r3, #514	; 0x202
   807ac:	f8c0 3120 	str.w	r3, [r0, #288]	; 0x120
   807b0:	2350      	movs	r3, #80	; 0x50
   807b2:	6003      	str	r3, [r0, #0]
   807b4:	2000      	movs	r0, #0
   807b6:	bc10      	pop	{r4}
   807b8:	4770      	bx	lr
   807ba:	2001      	movs	r0, #1
   807bc:	e7fb      	b.n	807b6 <uart_init+0x2e>

000807be <uart_enable_interrupt>:
   807be:	6081      	str	r1, [r0, #8]
   807c0:	4770      	bx	lr

000807c2 <uart_write>:
   807c2:	6943      	ldr	r3, [r0, #20]
   807c4:	f013 0f02 	tst.w	r3, #2
   807c8:	bf1a      	itte	ne
   807ca:	61c1      	strne	r1, [r0, #28]
   807cc:	2000      	movne	r0, #0
   807ce:	2001      	moveq	r0, #1
   807d0:	4770      	bx	lr

000807d2 <uart_read>:
   807d2:	6943      	ldr	r3, [r0, #20]
   807d4:	f013 0f01 	tst.w	r3, #1
   807d8:	bf1d      	ittte	ne
   807da:	6983      	ldrne	r3, [r0, #24]
   807dc:	700b      	strbne	r3, [r1, #0]
   807de:	2000      	movne	r0, #0
   807e0:	2001      	moveq	r0, #1
   807e2:	4770      	bx	lr

000807e4 <vListInitialise>:
   807e4:	f100 0308 	add.w	r3, r0, #8
   807e8:	6043      	str	r3, [r0, #4]
   807ea:	f04f 32ff 	mov.w	r2, #4294967295
   807ee:	6082      	str	r2, [r0, #8]
   807f0:	60c3      	str	r3, [r0, #12]
   807f2:	6103      	str	r3, [r0, #16]
   807f4:	2300      	movs	r3, #0
   807f6:	6003      	str	r3, [r0, #0]
   807f8:	4770      	bx	lr

000807fa <vListInitialiseItem>:
   807fa:	2300      	movs	r3, #0
   807fc:	6103      	str	r3, [r0, #16]
   807fe:	4770      	bx	lr

00080800 <vListInsertEnd>:
   80800:	6843      	ldr	r3, [r0, #4]
   80802:	604b      	str	r3, [r1, #4]
   80804:	689a      	ldr	r2, [r3, #8]
   80806:	608a      	str	r2, [r1, #8]
   80808:	689a      	ldr	r2, [r3, #8]
   8080a:	6051      	str	r1, [r2, #4]
   8080c:	6099      	str	r1, [r3, #8]
   8080e:	6108      	str	r0, [r1, #16]
   80810:	6803      	ldr	r3, [r0, #0]
   80812:	3301      	adds	r3, #1
   80814:	6003      	str	r3, [r0, #0]
   80816:	4770      	bx	lr

00080818 <vListInsert>:
   80818:	b430      	push	{r4, r5}
   8081a:	680d      	ldr	r5, [r1, #0]
   8081c:	f1b5 3fff 	cmp.w	r5, #4294967295
   80820:	d002      	beq.n	80828 <vListInsert+0x10>
   80822:	f100 0208 	add.w	r2, r0, #8
   80826:	e002      	b.n	8082e <vListInsert+0x16>
   80828:	6902      	ldr	r2, [r0, #16]
   8082a:	e004      	b.n	80836 <vListInsert+0x1e>
   8082c:	461a      	mov	r2, r3
   8082e:	6853      	ldr	r3, [r2, #4]
   80830:	681c      	ldr	r4, [r3, #0]
   80832:	42a5      	cmp	r5, r4
   80834:	d2fa      	bcs.n	8082c <vListInsert+0x14>
   80836:	6853      	ldr	r3, [r2, #4]
   80838:	604b      	str	r3, [r1, #4]
   8083a:	6099      	str	r1, [r3, #8]
   8083c:	608a      	str	r2, [r1, #8]
   8083e:	6051      	str	r1, [r2, #4]
   80840:	6108      	str	r0, [r1, #16]
   80842:	6803      	ldr	r3, [r0, #0]
   80844:	3301      	adds	r3, #1
   80846:	6003      	str	r3, [r0, #0]
   80848:	bc30      	pop	{r4, r5}
   8084a:	4770      	bx	lr

0008084c <uxListRemove>:
   8084c:	6903      	ldr	r3, [r0, #16]
   8084e:	6842      	ldr	r2, [r0, #4]
   80850:	6881      	ldr	r1, [r0, #8]
   80852:	6091      	str	r1, [r2, #8]
   80854:	6882      	ldr	r2, [r0, #8]
   80856:	6841      	ldr	r1, [r0, #4]
   80858:	6051      	str	r1, [r2, #4]
   8085a:	685a      	ldr	r2, [r3, #4]
   8085c:	4290      	cmp	r0, r2
   8085e:	bf04      	itt	eq
   80860:	6882      	ldreq	r2, [r0, #8]
   80862:	605a      	streq	r2, [r3, #4]
   80864:	2200      	movs	r2, #0
   80866:	6102      	str	r2, [r0, #16]
   80868:	681a      	ldr	r2, [r3, #0]
   8086a:	3a01      	subs	r2, #1
   8086c:	601a      	str	r2, [r3, #0]
   8086e:	6818      	ldr	r0, [r3, #0]
   80870:	4770      	bx	lr
	...

00080874 <prvTaskExitError>:
   80874:	b082      	sub	sp, #8
   80876:	2300      	movs	r3, #0
   80878:	9301      	str	r3, [sp, #4]
   8087a:	4b0d      	ldr	r3, [pc, #52]	; (808b0 <prvTaskExitError+0x3c>)
   8087c:	681b      	ldr	r3, [r3, #0]
   8087e:	f1b3 3fff 	cmp.w	r3, #4294967295
   80882:	d008      	beq.n	80896 <prvTaskExitError+0x22>
   80884:	f04f 0340 	mov.w	r3, #64	; 0x40
   80888:	f383 8811 	msr	BASEPRI, r3
   8088c:	f3bf 8f6f 	isb	sy
   80890:	f3bf 8f4f 	dsb	sy
   80894:	e7fe      	b.n	80894 <prvTaskExitError+0x20>
   80896:	f04f 0340 	mov.w	r3, #64	; 0x40
   8089a:	f383 8811 	msr	BASEPRI, r3
   8089e:	f3bf 8f6f 	isb	sy
   808a2:	f3bf 8f4f 	dsb	sy
   808a6:	9b01      	ldr	r3, [sp, #4]
   808a8:	2b00      	cmp	r3, #0
   808aa:	d0fc      	beq.n	808a6 <prvTaskExitError+0x32>
   808ac:	b002      	add	sp, #8
   808ae:	4770      	bx	lr
   808b0:	2007012c 	.word	0x2007012c

000808b4 <prvPortStartFirstTask>:
   808b4:	4806      	ldr	r0, [pc, #24]	; (808d0 <prvPortStartFirstTask+0x1c>)
   808b6:	6800      	ldr	r0, [r0, #0]
   808b8:	6800      	ldr	r0, [r0, #0]
   808ba:	f380 8808 	msr	MSP, r0
   808be:	b662      	cpsie	i
   808c0:	b661      	cpsie	f
   808c2:	f3bf 8f4f 	dsb	sy
   808c6:	f3bf 8f6f 	isb	sy
   808ca:	df00      	svc	0
   808cc:	bf00      	nop
   808ce:	0000      	.short	0x0000
   808d0:	e000ed08 	.word	0xe000ed08

000808d4 <pxPortInitialiseStack>:
   808d4:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
   808d8:	f840 3c04 	str.w	r3, [r0, #-4]
   808dc:	f021 0101 	bic.w	r1, r1, #1
   808e0:	f840 1c08 	str.w	r1, [r0, #-8]
   808e4:	4b03      	ldr	r3, [pc, #12]	; (808f4 <pxPortInitialiseStack+0x20>)
   808e6:	f840 3c0c 	str.w	r3, [r0, #-12]
   808ea:	f840 2c20 	str.w	r2, [r0, #-32]
   808ee:	3840      	subs	r0, #64	; 0x40
   808f0:	4770      	bx	lr
   808f2:	bf00      	nop
   808f4:	00080875 	.word	0x00080875
	...

00080900 <SVC_Handler>:
   80900:	4b07      	ldr	r3, [pc, #28]	; (80920 <pxCurrentTCBConst2>)
   80902:	6819      	ldr	r1, [r3, #0]
   80904:	6808      	ldr	r0, [r1, #0]
   80906:	e8b0 0ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp}
   8090a:	f380 8809 	msr	PSP, r0
   8090e:	f3bf 8f6f 	isb	sy
   80912:	f04f 0000 	mov.w	r0, #0
   80916:	f380 8811 	msr	BASEPRI, r0
   8091a:	f04e 0e0d 	orr.w	lr, lr, #13
   8091e:	4770      	bx	lr

00080920 <pxCurrentTCBConst2>:
   80920:	2007c1b0 	.word	0x2007c1b0
   80924:	4770      	bx	lr
   80926:	bf00      	nop

00080928 <vPortEnterCritical>:
   80928:	f04f 0340 	mov.w	r3, #64	; 0x40
   8092c:	f383 8811 	msr	BASEPRI, r3
   80930:	f3bf 8f6f 	isb	sy
   80934:	f3bf 8f4f 	dsb	sy
   80938:	4a0a      	ldr	r2, [pc, #40]	; (80964 <vPortEnterCritical+0x3c>)
   8093a:	6813      	ldr	r3, [r2, #0]
   8093c:	3301      	adds	r3, #1
   8093e:	6013      	str	r3, [r2, #0]
   80940:	2b01      	cmp	r3, #1
   80942:	d10d      	bne.n	80960 <vPortEnterCritical+0x38>
   80944:	4b08      	ldr	r3, [pc, #32]	; (80968 <vPortEnterCritical+0x40>)
   80946:	681b      	ldr	r3, [r3, #0]
   80948:	f013 0fff 	tst.w	r3, #255	; 0xff
   8094c:	d008      	beq.n	80960 <vPortEnterCritical+0x38>
   8094e:	f04f 0340 	mov.w	r3, #64	; 0x40
   80952:	f383 8811 	msr	BASEPRI, r3
   80956:	f3bf 8f6f 	isb	sy
   8095a:	f3bf 8f4f 	dsb	sy
   8095e:	e7fe      	b.n	8095e <vPortEnterCritical+0x36>
   80960:	4770      	bx	lr
   80962:	bf00      	nop
   80964:	2007012c 	.word	0x2007012c
   80968:	e000ed04 	.word	0xe000ed04

0008096c <vPortExitCritical>:
   8096c:	4b09      	ldr	r3, [pc, #36]	; (80994 <vPortExitCritical+0x28>)
   8096e:	681b      	ldr	r3, [r3, #0]
   80970:	b943      	cbnz	r3, 80984 <vPortExitCritical+0x18>
   80972:	f04f 0340 	mov.w	r3, #64	; 0x40
   80976:	f383 8811 	msr	BASEPRI, r3
   8097a:	f3bf 8f6f 	isb	sy
   8097e:	f3bf 8f4f 	dsb	sy
   80982:	e7fe      	b.n	80982 <vPortExitCritical+0x16>
   80984:	3b01      	subs	r3, #1
   80986:	4a03      	ldr	r2, [pc, #12]	; (80994 <vPortExitCritical+0x28>)
   80988:	6013      	str	r3, [r2, #0]
   8098a:	b90b      	cbnz	r3, 80990 <vPortExitCritical+0x24>
   8098c:	f383 8811 	msr	BASEPRI, r3
   80990:	4770      	bx	lr
   80992:	bf00      	nop
   80994:	2007012c 	.word	0x2007012c
	...

000809a0 <PendSV_Handler>:
   809a0:	f3ef 8009 	mrs	r0, PSP
   809a4:	f3bf 8f6f 	isb	sy
   809a8:	4b0d      	ldr	r3, [pc, #52]	; (809e0 <pxCurrentTCBConst>)
   809aa:	681a      	ldr	r2, [r3, #0]
   809ac:	e920 0ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp}
   809b0:	6010      	str	r0, [r2, #0]
   809b2:	e92d 4008 	stmdb	sp!, {r3, lr}
   809b6:	f04f 0040 	mov.w	r0, #64	; 0x40
   809ba:	f380 8811 	msr	BASEPRI, r0
   809be:	f001 f905 	bl	81bcc <vTaskSwitchContext>
   809c2:	f04f 0000 	mov.w	r0, #0
   809c6:	f380 8811 	msr	BASEPRI, r0
   809ca:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
   809ce:	6819      	ldr	r1, [r3, #0]
   809d0:	6808      	ldr	r0, [r1, #0]
   809d2:	e8b0 0ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp}
   809d6:	f380 8809 	msr	PSP, r0
   809da:	f3bf 8f6f 	isb	sy
   809de:	4770      	bx	lr

000809e0 <pxCurrentTCBConst>:
   809e0:	2007c1b0 	.word	0x2007c1b0
   809e4:	4770      	bx	lr
   809e6:	bf00      	nop

000809e8 <SysTick_Handler>:
   809e8:	b508      	push	{r3, lr}
   809ea:	f04f 0340 	mov.w	r3, #64	; 0x40
   809ee:	f383 8811 	msr	BASEPRI, r3
   809f2:	f3bf 8f6f 	isb	sy
   809f6:	f3bf 8f4f 	dsb	sy
   809fa:	4b05      	ldr	r3, [pc, #20]	; (80a10 <SysTick_Handler+0x28>)
   809fc:	4798      	blx	r3
   809fe:	b118      	cbz	r0, 80a08 <SysTick_Handler+0x20>
   80a00:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
   80a04:	4b03      	ldr	r3, [pc, #12]	; (80a14 <SysTick_Handler+0x2c>)
   80a06:	601a      	str	r2, [r3, #0]
   80a08:	2300      	movs	r3, #0
   80a0a:	f383 8811 	msr	BASEPRI, r3
   80a0e:	bd08      	pop	{r3, pc}
   80a10:	000818d9 	.word	0x000818d9
   80a14:	e000ed04 	.word	0xe000ed04

00080a18 <vPortSetupTimerInterrupt>:
   80a18:	4b05      	ldr	r3, [pc, #20]	; (80a30 <vPortSetupTimerInterrupt+0x18>)
   80a1a:	2200      	movs	r2, #0
   80a1c:	601a      	str	r2, [r3, #0]
   80a1e:	4905      	ldr	r1, [pc, #20]	; (80a34 <vPortSetupTimerInterrupt+0x1c>)
   80a20:	600a      	str	r2, [r1, #0]
   80a22:	4905      	ldr	r1, [pc, #20]	; (80a38 <vPortSetupTimerInterrupt+0x20>)
   80a24:	4a05      	ldr	r2, [pc, #20]	; (80a3c <vPortSetupTimerInterrupt+0x24>)
   80a26:	6011      	str	r1, [r2, #0]
   80a28:	2207      	movs	r2, #7
   80a2a:	601a      	str	r2, [r3, #0]
   80a2c:	4770      	bx	lr
   80a2e:	bf00      	nop
   80a30:	e000e010 	.word	0xe000e010
   80a34:	e000e018 	.word	0xe000e018
   80a38:	0001481f 	.word	0x0001481f
   80a3c:	e000e014 	.word	0xe000e014

00080a40 <xPortStartScheduler>:
   80a40:	b510      	push	{r4, lr}
   80a42:	b082      	sub	sp, #8
   80a44:	4b29      	ldr	r3, [pc, #164]	; (80aec <xPortStartScheduler+0xac>)
   80a46:	781a      	ldrb	r2, [r3, #0]
   80a48:	b2d2      	uxtb	r2, r2
   80a4a:	9201      	str	r2, [sp, #4]
   80a4c:	22ff      	movs	r2, #255	; 0xff
   80a4e:	701a      	strb	r2, [r3, #0]
   80a50:	781b      	ldrb	r3, [r3, #0]
   80a52:	b2db      	uxtb	r3, r3
   80a54:	f88d 3003 	strb.w	r3, [sp, #3]
   80a58:	f89d 3003 	ldrb.w	r3, [sp, #3]
   80a5c:	f003 0340 	and.w	r3, r3, #64	; 0x40
   80a60:	4a23      	ldr	r2, [pc, #140]	; (80af0 <xPortStartScheduler+0xb0>)
   80a62:	7013      	strb	r3, [r2, #0]
   80a64:	2207      	movs	r2, #7
   80a66:	4b23      	ldr	r3, [pc, #140]	; (80af4 <xPortStartScheduler+0xb4>)
   80a68:	601a      	str	r2, [r3, #0]
   80a6a:	f89d 3003 	ldrb.w	r3, [sp, #3]
   80a6e:	f013 0f80 	tst.w	r3, #128	; 0x80
   80a72:	d012      	beq.n	80a9a <xPortStartScheduler+0x5a>
   80a74:	2306      	movs	r3, #6
   80a76:	e000      	b.n	80a7a <xPortStartScheduler+0x3a>
   80a78:	460b      	mov	r3, r1
   80a7a:	f89d 2003 	ldrb.w	r2, [sp, #3]
   80a7e:	0052      	lsls	r2, r2, #1
   80a80:	b2d2      	uxtb	r2, r2
   80a82:	f88d 2003 	strb.w	r2, [sp, #3]
   80a86:	f89d 2003 	ldrb.w	r2, [sp, #3]
   80a8a:	1e59      	subs	r1, r3, #1
   80a8c:	f012 0f80 	tst.w	r2, #128	; 0x80
   80a90:	d1f2      	bne.n	80a78 <xPortStartScheduler+0x38>
   80a92:	4a18      	ldr	r2, [pc, #96]	; (80af4 <xPortStartScheduler+0xb4>)
   80a94:	6013      	str	r3, [r2, #0]
   80a96:	2b03      	cmp	r3, #3
   80a98:	d008      	beq.n	80aac <xPortStartScheduler+0x6c>
   80a9a:	f04f 0340 	mov.w	r3, #64	; 0x40
   80a9e:	f383 8811 	msr	BASEPRI, r3
   80aa2:	f3bf 8f6f 	isb	sy
   80aa6:	f3bf 8f4f 	dsb	sy
   80aaa:	e7fe      	b.n	80aaa <xPortStartScheduler+0x6a>
   80aac:	021b      	lsls	r3, r3, #8
   80aae:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
   80ab2:	4a10      	ldr	r2, [pc, #64]	; (80af4 <xPortStartScheduler+0xb4>)
   80ab4:	6013      	str	r3, [r2, #0]
   80ab6:	9b01      	ldr	r3, [sp, #4]
   80ab8:	b2db      	uxtb	r3, r3
   80aba:	4a0c      	ldr	r2, [pc, #48]	; (80aec <xPortStartScheduler+0xac>)
   80abc:	7013      	strb	r3, [r2, #0]
   80abe:	4b0e      	ldr	r3, [pc, #56]	; (80af8 <xPortStartScheduler+0xb8>)
   80ac0:	681a      	ldr	r2, [r3, #0]
   80ac2:	f442 02e0 	orr.w	r2, r2, #7340032	; 0x700000
   80ac6:	601a      	str	r2, [r3, #0]
   80ac8:	681a      	ldr	r2, [r3, #0]
   80aca:	f042 42e0 	orr.w	r2, r2, #1879048192	; 0x70000000
   80ace:	601a      	str	r2, [r3, #0]
   80ad0:	4b0a      	ldr	r3, [pc, #40]	; (80afc <xPortStartScheduler+0xbc>)
   80ad2:	4798      	blx	r3
   80ad4:	2400      	movs	r4, #0
   80ad6:	4b0a      	ldr	r3, [pc, #40]	; (80b00 <xPortStartScheduler+0xc0>)
   80ad8:	601c      	str	r4, [r3, #0]
   80ada:	4b0a      	ldr	r3, [pc, #40]	; (80b04 <xPortStartScheduler+0xc4>)
   80adc:	4798      	blx	r3
   80ade:	4b0a      	ldr	r3, [pc, #40]	; (80b08 <xPortStartScheduler+0xc8>)
   80ae0:	4798      	blx	r3
   80ae2:	4b0a      	ldr	r3, [pc, #40]	; (80b0c <xPortStartScheduler+0xcc>)
   80ae4:	4798      	blx	r3
   80ae6:	4620      	mov	r0, r4
   80ae8:	b002      	add	sp, #8
   80aea:	bd10      	pop	{r4, pc}
   80aec:	e000e400 	.word	0xe000e400
   80af0:	200709a0 	.word	0x200709a0
   80af4:	200709a4 	.word	0x200709a4
   80af8:	e000ed20 	.word	0xe000ed20
   80afc:	00080a19 	.word	0x00080a19
   80b00:	2007012c 	.word	0x2007012c
   80b04:	000808b5 	.word	0x000808b5
   80b08:	00081bcd 	.word	0x00081bcd
   80b0c:	00080875 	.word	0x00080875

00080b10 <vPortValidateInterruptPriority>:
   80b10:	f3ef 8305 	mrs	r3, IPSR
   80b14:	2b0f      	cmp	r3, #15
   80b16:	d90f      	bls.n	80b38 <vPortValidateInterruptPriority+0x28>
   80b18:	4a10      	ldr	r2, [pc, #64]	; (80b5c <vPortValidateInterruptPriority+0x4c>)
   80b1a:	5c9b      	ldrb	r3, [r3, r2]
   80b1c:	b2db      	uxtb	r3, r3
   80b1e:	4a10      	ldr	r2, [pc, #64]	; (80b60 <vPortValidateInterruptPriority+0x50>)
   80b20:	7812      	ldrb	r2, [r2, #0]
   80b22:	429a      	cmp	r2, r3
   80b24:	d908      	bls.n	80b38 <vPortValidateInterruptPriority+0x28>
   80b26:	f04f 0340 	mov.w	r3, #64	; 0x40
   80b2a:	f383 8811 	msr	BASEPRI, r3
   80b2e:	f3bf 8f6f 	isb	sy
   80b32:	f3bf 8f4f 	dsb	sy
   80b36:	e7fe      	b.n	80b36 <vPortValidateInterruptPriority+0x26>
   80b38:	4b0a      	ldr	r3, [pc, #40]	; (80b64 <vPortValidateInterruptPriority+0x54>)
   80b3a:	681b      	ldr	r3, [r3, #0]
   80b3c:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
   80b40:	4a09      	ldr	r2, [pc, #36]	; (80b68 <vPortValidateInterruptPriority+0x58>)
   80b42:	6812      	ldr	r2, [r2, #0]
   80b44:	4293      	cmp	r3, r2
   80b46:	d908      	bls.n	80b5a <vPortValidateInterruptPriority+0x4a>
   80b48:	f04f 0340 	mov.w	r3, #64	; 0x40
   80b4c:	f383 8811 	msr	BASEPRI, r3
   80b50:	f3bf 8f6f 	isb	sy
   80b54:	f3bf 8f4f 	dsb	sy
   80b58:	e7fe      	b.n	80b58 <vPortValidateInterruptPriority+0x48>
   80b5a:	4770      	bx	lr
   80b5c:	e000e3f0 	.word	0xe000e3f0
   80b60:	200709a0 	.word	0x200709a0
   80b64:	e000ed0c 	.word	0xe000ed0c
   80b68:	200709a4 	.word	0x200709a4

00080b6c <pvPortMalloc>:
   80b6c:	b538      	push	{r3, r4, r5, lr}
   80b6e:	4604      	mov	r4, r0
   80b70:	f010 0f07 	tst.w	r0, #7
   80b74:	bf1c      	itt	ne
   80b76:	f020 0407 	bicne.w	r4, r0, #7
   80b7a:	3408      	addne	r4, #8
   80b7c:	4b10      	ldr	r3, [pc, #64]	; (80bc0 <pvPortMalloc+0x54>)
   80b7e:	4798      	blx	r3
   80b80:	4b10      	ldr	r3, [pc, #64]	; (80bc4 <pvPortMalloc+0x58>)
   80b82:	681b      	ldr	r3, [r3, #0]
   80b84:	b18b      	cbz	r3, 80baa <pvPortMalloc+0x3e>
   80b86:	4b10      	ldr	r3, [pc, #64]	; (80bc8 <pvPortMalloc+0x5c>)
   80b88:	681b      	ldr	r3, [r3, #0]
   80b8a:	441c      	add	r4, r3
   80b8c:	f24b 72f7 	movw	r2, #47095	; 0xb7f7
   80b90:	4294      	cmp	r4, r2
   80b92:	d810      	bhi.n	80bb6 <pvPortMalloc+0x4a>
   80b94:	42a3      	cmp	r3, r4
   80b96:	d210      	bcs.n	80bba <pvPortMalloc+0x4e>
   80b98:	4a0a      	ldr	r2, [pc, #40]	; (80bc4 <pvPortMalloc+0x58>)
   80b9a:	6815      	ldr	r5, [r2, #0]
   80b9c:	441d      	add	r5, r3
   80b9e:	4b0a      	ldr	r3, [pc, #40]	; (80bc8 <pvPortMalloc+0x5c>)
   80ba0:	601c      	str	r4, [r3, #0]
   80ba2:	4b0a      	ldr	r3, [pc, #40]	; (80bcc <pvPortMalloc+0x60>)
   80ba4:	4798      	blx	r3
   80ba6:	4628      	mov	r0, r5
   80ba8:	bd38      	pop	{r3, r4, r5, pc}
   80baa:	4b09      	ldr	r3, [pc, #36]	; (80bd0 <pvPortMalloc+0x64>)
   80bac:	f023 0307 	bic.w	r3, r3, #7
   80bb0:	4a04      	ldr	r2, [pc, #16]	; (80bc4 <pvPortMalloc+0x58>)
   80bb2:	6013      	str	r3, [r2, #0]
   80bb4:	e7e7      	b.n	80b86 <pvPortMalloc+0x1a>
   80bb6:	2500      	movs	r5, #0
   80bb8:	e7f3      	b.n	80ba2 <pvPortMalloc+0x36>
   80bba:	2500      	movs	r5, #0
   80bbc:	e7f1      	b.n	80ba2 <pvPortMalloc+0x36>
   80bbe:	bf00      	nop
   80bc0:	000818bd 	.word	0x000818bd
   80bc4:	200709a8 	.word	0x200709a8
   80bc8:	2007c1ac 	.word	0x2007c1ac
   80bcc:	00081a0d 	.word	0x00081a0d
   80bd0:	200709b4 	.word	0x200709b4

00080bd4 <vPortFree>:
   80bd4:	b140      	cbz	r0, 80be8 <vPortFree+0x14>
   80bd6:	f04f 0340 	mov.w	r3, #64	; 0x40
   80bda:	f383 8811 	msr	BASEPRI, r3
   80bde:	f3bf 8f6f 	isb	sy
   80be2:	f3bf 8f4f 	dsb	sy
   80be6:	e7fe      	b.n	80be6 <vPortFree+0x12>
   80be8:	4770      	bx	lr
	...

00080bec <prvIsQueueEmpty>:
   80bec:	b510      	push	{r4, lr}
   80bee:	4604      	mov	r4, r0
   80bf0:	4b04      	ldr	r3, [pc, #16]	; (80c04 <prvIsQueueEmpty+0x18>)
   80bf2:	4798      	blx	r3
   80bf4:	6ba4      	ldr	r4, [r4, #56]	; 0x38
   80bf6:	4b04      	ldr	r3, [pc, #16]	; (80c08 <prvIsQueueEmpty+0x1c>)
   80bf8:	4798      	blx	r3
   80bfa:	fab4 f084 	clz	r0, r4
   80bfe:	0940      	lsrs	r0, r0, #5
   80c00:	bd10      	pop	{r4, pc}
   80c02:	bf00      	nop
   80c04:	00080929 	.word	0x00080929
   80c08:	0008096d 	.word	0x0008096d

00080c0c <prvCopyDataToQueue>:
   80c0c:	b570      	push	{r4, r5, r6, lr}
   80c0e:	4604      	mov	r4, r0
   80c10:	4616      	mov	r6, r2
   80c12:	6b85      	ldr	r5, [r0, #56]	; 0x38
   80c14:	6c02      	ldr	r2, [r0, #64]	; 0x40
   80c16:	b952      	cbnz	r2, 80c2e <prvCopyDataToQueue+0x22>
   80c18:	6803      	ldr	r3, [r0, #0]
   80c1a:	2b00      	cmp	r3, #0
   80c1c:	d12a      	bne.n	80c74 <prvCopyDataToQueue+0x68>
   80c1e:	6840      	ldr	r0, [r0, #4]
   80c20:	4b18      	ldr	r3, [pc, #96]	; (80c84 <prvCopyDataToQueue+0x78>)
   80c22:	4798      	blx	r3
   80c24:	2300      	movs	r3, #0
   80c26:	6063      	str	r3, [r4, #4]
   80c28:	3501      	adds	r5, #1
   80c2a:	63a5      	str	r5, [r4, #56]	; 0x38
   80c2c:	bd70      	pop	{r4, r5, r6, pc}
   80c2e:	b96e      	cbnz	r6, 80c4c <prvCopyDataToQueue+0x40>
   80c30:	6880      	ldr	r0, [r0, #8]
   80c32:	4b15      	ldr	r3, [pc, #84]	; (80c88 <prvCopyDataToQueue+0x7c>)
   80c34:	4798      	blx	r3
   80c36:	68a3      	ldr	r3, [r4, #8]
   80c38:	6c22      	ldr	r2, [r4, #64]	; 0x40
   80c3a:	4413      	add	r3, r2
   80c3c:	60a3      	str	r3, [r4, #8]
   80c3e:	6862      	ldr	r2, [r4, #4]
   80c40:	4293      	cmp	r3, r2
   80c42:	d319      	bcc.n	80c78 <prvCopyDataToQueue+0x6c>
   80c44:	6823      	ldr	r3, [r4, #0]
   80c46:	60a3      	str	r3, [r4, #8]
   80c48:	2000      	movs	r0, #0
   80c4a:	e7ed      	b.n	80c28 <prvCopyDataToQueue+0x1c>
   80c4c:	68c0      	ldr	r0, [r0, #12]
   80c4e:	4b0e      	ldr	r3, [pc, #56]	; (80c88 <prvCopyDataToQueue+0x7c>)
   80c50:	4798      	blx	r3
   80c52:	6c23      	ldr	r3, [r4, #64]	; 0x40
   80c54:	425b      	negs	r3, r3
   80c56:	68e2      	ldr	r2, [r4, #12]
   80c58:	441a      	add	r2, r3
   80c5a:	60e2      	str	r2, [r4, #12]
   80c5c:	6821      	ldr	r1, [r4, #0]
   80c5e:	428a      	cmp	r2, r1
   80c60:	d202      	bcs.n	80c68 <prvCopyDataToQueue+0x5c>
   80c62:	6862      	ldr	r2, [r4, #4]
   80c64:	4413      	add	r3, r2
   80c66:	60e3      	str	r3, [r4, #12]
   80c68:	2e02      	cmp	r6, #2
   80c6a:	d107      	bne.n	80c7c <prvCopyDataToQueue+0x70>
   80c6c:	b145      	cbz	r5, 80c80 <prvCopyDataToQueue+0x74>
   80c6e:	3d01      	subs	r5, #1
   80c70:	2000      	movs	r0, #0
   80c72:	e7d9      	b.n	80c28 <prvCopyDataToQueue+0x1c>
   80c74:	2000      	movs	r0, #0
   80c76:	e7d7      	b.n	80c28 <prvCopyDataToQueue+0x1c>
   80c78:	2000      	movs	r0, #0
   80c7a:	e7d5      	b.n	80c28 <prvCopyDataToQueue+0x1c>
   80c7c:	2000      	movs	r0, #0
   80c7e:	e7d3      	b.n	80c28 <prvCopyDataToQueue+0x1c>
   80c80:	2000      	movs	r0, #0
   80c82:	e7d1      	b.n	80c28 <prvCopyDataToQueue+0x1c>
   80c84:	00081efd 	.word	0x00081efd
   80c88:	00082be9 	.word	0x00082be9

00080c8c <prvCopyDataFromQueue>:
   80c8c:	6c02      	ldr	r2, [r0, #64]	; 0x40
   80c8e:	b172      	cbz	r2, 80cae <prvCopyDataFromQueue+0x22>
   80c90:	b510      	push	{r4, lr}
   80c92:	4603      	mov	r3, r0
   80c94:	68c4      	ldr	r4, [r0, #12]
   80c96:	4414      	add	r4, r2
   80c98:	60c4      	str	r4, [r0, #12]
   80c9a:	6840      	ldr	r0, [r0, #4]
   80c9c:	4284      	cmp	r4, r0
   80c9e:	bf24      	itt	cs
   80ca0:	6818      	ldrcs	r0, [r3, #0]
   80ca2:	60d8      	strcs	r0, [r3, #12]
   80ca4:	4608      	mov	r0, r1
   80ca6:	68d9      	ldr	r1, [r3, #12]
   80ca8:	4b01      	ldr	r3, [pc, #4]	; (80cb0 <prvCopyDataFromQueue+0x24>)
   80caa:	4798      	blx	r3
   80cac:	bd10      	pop	{r4, pc}
   80cae:	4770      	bx	lr
   80cb0:	00082be9 	.word	0x00082be9

00080cb4 <prvUnlockQueue>:
   80cb4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   80cb8:	4605      	mov	r5, r0
   80cba:	4b20      	ldr	r3, [pc, #128]	; (80d3c <prvUnlockQueue+0x88>)
   80cbc:	4798      	blx	r3
   80cbe:	f895 4045 	ldrb.w	r4, [r5, #69]	; 0x45
   80cc2:	b264      	sxtb	r4, r4
   80cc4:	2c00      	cmp	r4, #0
   80cc6:	dd12      	ble.n	80cee <prvUnlockQueue+0x3a>
   80cc8:	6a6b      	ldr	r3, [r5, #36]	; 0x24
   80cca:	b183      	cbz	r3, 80cee <prvUnlockQueue+0x3a>
   80ccc:	f105 0724 	add.w	r7, r5, #36	; 0x24
   80cd0:	4e1b      	ldr	r6, [pc, #108]	; (80d40 <prvUnlockQueue+0x8c>)
   80cd2:	f8df 8074 	ldr.w	r8, [pc, #116]	; 80d48 <prvUnlockQueue+0x94>
   80cd6:	e004      	b.n	80ce2 <prvUnlockQueue+0x2e>
   80cd8:	3c01      	subs	r4, #1
   80cda:	b264      	sxtb	r4, r4
   80cdc:	b13c      	cbz	r4, 80cee <prvUnlockQueue+0x3a>
   80cde:	6a6b      	ldr	r3, [r5, #36]	; 0x24
   80ce0:	b12b      	cbz	r3, 80cee <prvUnlockQueue+0x3a>
   80ce2:	4638      	mov	r0, r7
   80ce4:	47b0      	blx	r6
   80ce6:	2800      	cmp	r0, #0
   80ce8:	d0f6      	beq.n	80cd8 <prvUnlockQueue+0x24>
   80cea:	47c0      	blx	r8
   80cec:	e7f4      	b.n	80cd8 <prvUnlockQueue+0x24>
   80cee:	23ff      	movs	r3, #255	; 0xff
   80cf0:	f885 3045 	strb.w	r3, [r5, #69]	; 0x45
   80cf4:	4b13      	ldr	r3, [pc, #76]	; (80d44 <prvUnlockQueue+0x90>)
   80cf6:	4798      	blx	r3
   80cf8:	4b10      	ldr	r3, [pc, #64]	; (80d3c <prvUnlockQueue+0x88>)
   80cfa:	4798      	blx	r3
   80cfc:	f895 4044 	ldrb.w	r4, [r5, #68]	; 0x44
   80d00:	b264      	sxtb	r4, r4
   80d02:	2c00      	cmp	r4, #0
   80d04:	dd12      	ble.n	80d2c <prvUnlockQueue+0x78>
   80d06:	692b      	ldr	r3, [r5, #16]
   80d08:	b183      	cbz	r3, 80d2c <prvUnlockQueue+0x78>
   80d0a:	f105 0710 	add.w	r7, r5, #16
   80d0e:	4e0c      	ldr	r6, [pc, #48]	; (80d40 <prvUnlockQueue+0x8c>)
   80d10:	f8df 8034 	ldr.w	r8, [pc, #52]	; 80d48 <prvUnlockQueue+0x94>
   80d14:	e004      	b.n	80d20 <prvUnlockQueue+0x6c>
   80d16:	3c01      	subs	r4, #1
   80d18:	b264      	sxtb	r4, r4
   80d1a:	b13c      	cbz	r4, 80d2c <prvUnlockQueue+0x78>
   80d1c:	692b      	ldr	r3, [r5, #16]
   80d1e:	b12b      	cbz	r3, 80d2c <prvUnlockQueue+0x78>
   80d20:	4638      	mov	r0, r7
   80d22:	47b0      	blx	r6
   80d24:	2800      	cmp	r0, #0
   80d26:	d0f6      	beq.n	80d16 <prvUnlockQueue+0x62>
   80d28:	47c0      	blx	r8
   80d2a:	e7f4      	b.n	80d16 <prvUnlockQueue+0x62>
   80d2c:	23ff      	movs	r3, #255	; 0xff
   80d2e:	f885 3044 	strb.w	r3, [r5, #68]	; 0x44
   80d32:	4b04      	ldr	r3, [pc, #16]	; (80d44 <prvUnlockQueue+0x90>)
   80d34:	4798      	blx	r3
   80d36:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   80d3a:	bf00      	nop
   80d3c:	00080929 	.word	0x00080929
   80d40:	00081cdd 	.word	0x00081cdd
   80d44:	0008096d 	.word	0x0008096d
   80d48:	00081e11 	.word	0x00081e11

00080d4c <xQueueGenericReset>:
   80d4c:	b538      	push	{r3, r4, r5, lr}
   80d4e:	b330      	cbz	r0, 80d9e <xQueueGenericReset+0x52>
   80d50:	4604      	mov	r4, r0
   80d52:	460d      	mov	r5, r1
   80d54:	4b1c      	ldr	r3, [pc, #112]	; (80dc8 <xQueueGenericReset+0x7c>)
   80d56:	4798      	blx	r3
   80d58:	6822      	ldr	r2, [r4, #0]
   80d5a:	6c21      	ldr	r1, [r4, #64]	; 0x40
   80d5c:	6be3      	ldr	r3, [r4, #60]	; 0x3c
   80d5e:	fb03 f301 	mul.w	r3, r3, r1
   80d62:	18d0      	adds	r0, r2, r3
   80d64:	6060      	str	r0, [r4, #4]
   80d66:	2000      	movs	r0, #0
   80d68:	63a0      	str	r0, [r4, #56]	; 0x38
   80d6a:	60a2      	str	r2, [r4, #8]
   80d6c:	1a5b      	subs	r3, r3, r1
   80d6e:	4413      	add	r3, r2
   80d70:	60e3      	str	r3, [r4, #12]
   80d72:	23ff      	movs	r3, #255	; 0xff
   80d74:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
   80d78:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
   80d7c:	b9c5      	cbnz	r5, 80db0 <xQueueGenericReset+0x64>
   80d7e:	6923      	ldr	r3, [r4, #16]
   80d80:	b1eb      	cbz	r3, 80dbe <xQueueGenericReset+0x72>
   80d82:	f104 0010 	add.w	r0, r4, #16
   80d86:	4b11      	ldr	r3, [pc, #68]	; (80dcc <xQueueGenericReset+0x80>)
   80d88:	4798      	blx	r3
   80d8a:	b1c0      	cbz	r0, 80dbe <xQueueGenericReset+0x72>
   80d8c:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
   80d90:	4b0f      	ldr	r3, [pc, #60]	; (80dd0 <xQueueGenericReset+0x84>)
   80d92:	601a      	str	r2, [r3, #0]
   80d94:	f3bf 8f4f 	dsb	sy
   80d98:	f3bf 8f6f 	isb	sy
   80d9c:	e00f      	b.n	80dbe <xQueueGenericReset+0x72>
   80d9e:	f04f 0340 	mov.w	r3, #64	; 0x40
   80da2:	f383 8811 	msr	BASEPRI, r3
   80da6:	f3bf 8f6f 	isb	sy
   80daa:	f3bf 8f4f 	dsb	sy
   80dae:	e7fe      	b.n	80dae <xQueueGenericReset+0x62>
   80db0:	f104 0010 	add.w	r0, r4, #16
   80db4:	4d07      	ldr	r5, [pc, #28]	; (80dd4 <xQueueGenericReset+0x88>)
   80db6:	47a8      	blx	r5
   80db8:	f104 0024 	add.w	r0, r4, #36	; 0x24
   80dbc:	47a8      	blx	r5
   80dbe:	4b06      	ldr	r3, [pc, #24]	; (80dd8 <xQueueGenericReset+0x8c>)
   80dc0:	4798      	blx	r3
   80dc2:	2001      	movs	r0, #1
   80dc4:	bd38      	pop	{r3, r4, r5, pc}
   80dc6:	bf00      	nop
   80dc8:	00080929 	.word	0x00080929
   80dcc:	00081cdd 	.word	0x00081cdd
   80dd0:	e000ed04 	.word	0xe000ed04
   80dd4:	000807e5 	.word	0x000807e5
   80dd8:	0008096d 	.word	0x0008096d

00080ddc <xQueueGenericCreate>:
   80ddc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   80dde:	b940      	cbnz	r0, 80df2 <xQueueGenericCreate+0x16>
   80de0:	f04f 0340 	mov.w	r3, #64	; 0x40
   80de4:	f383 8811 	msr	BASEPRI, r3
   80de8:	f3bf 8f6f 	isb	sy
   80dec:	f3bf 8f4f 	dsb	sy
   80df0:	e7fe      	b.n	80df0 <xQueueGenericCreate+0x14>
   80df2:	4606      	mov	r6, r0
   80df4:	4617      	mov	r7, r2
   80df6:	460d      	mov	r5, r1
   80df8:	fb01 f000 	mul.w	r0, r1, r0
   80dfc:	3050      	adds	r0, #80	; 0x50
   80dfe:	4b0a      	ldr	r3, [pc, #40]	; (80e28 <xQueueGenericCreate+0x4c>)
   80e00:	4798      	blx	r3
   80e02:	4604      	mov	r4, r0
   80e04:	b168      	cbz	r0, 80e22 <xQueueGenericCreate+0x46>
   80e06:	b11d      	cbz	r5, 80e10 <xQueueGenericCreate+0x34>
   80e08:	f100 0350 	add.w	r3, r0, #80	; 0x50
   80e0c:	6003      	str	r3, [r0, #0]
   80e0e:	e000      	b.n	80e12 <xQueueGenericCreate+0x36>
   80e10:	6020      	str	r0, [r4, #0]
   80e12:	63e6      	str	r6, [r4, #60]	; 0x3c
   80e14:	6425      	str	r5, [r4, #64]	; 0x40
   80e16:	2101      	movs	r1, #1
   80e18:	4620      	mov	r0, r4
   80e1a:	4b04      	ldr	r3, [pc, #16]	; (80e2c <xQueueGenericCreate+0x50>)
   80e1c:	4798      	blx	r3
   80e1e:	f884 704c 	strb.w	r7, [r4, #76]	; 0x4c
   80e22:	4620      	mov	r0, r4
   80e24:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   80e26:	bf00      	nop
   80e28:	00080b6d 	.word	0x00080b6d
   80e2c:	00080d4d 	.word	0x00080d4d

00080e30 <xQueueGenericSend>:
   80e30:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   80e34:	b085      	sub	sp, #20
   80e36:	9201      	str	r2, [sp, #4]
   80e38:	b198      	cbz	r0, 80e62 <xQueueGenericSend+0x32>
   80e3a:	4604      	mov	r4, r0
   80e3c:	b1d1      	cbz	r1, 80e74 <xQueueGenericSend+0x44>
   80e3e:	2b02      	cmp	r3, #2
   80e40:	d024      	beq.n	80e8c <xQueueGenericSend+0x5c>
   80e42:	461e      	mov	r6, r3
   80e44:	460f      	mov	r7, r1
   80e46:	4b5b      	ldr	r3, [pc, #364]	; (80fb4 <xQueueGenericSend+0x184>)
   80e48:	4798      	blx	r3
   80e4a:	bb58      	cbnz	r0, 80ea4 <xQueueGenericSend+0x74>
   80e4c:	9b01      	ldr	r3, [sp, #4]
   80e4e:	b38b      	cbz	r3, 80eb4 <xQueueGenericSend+0x84>
   80e50:	f04f 0340 	mov.w	r3, #64	; 0x40
   80e54:	f383 8811 	msr	BASEPRI, r3
   80e58:	f3bf 8f6f 	isb	sy
   80e5c:	f3bf 8f4f 	dsb	sy
   80e60:	e7fe      	b.n	80e60 <xQueueGenericSend+0x30>
   80e62:	f04f 0340 	mov.w	r3, #64	; 0x40
   80e66:	f383 8811 	msr	BASEPRI, r3
   80e6a:	f3bf 8f6f 	isb	sy
   80e6e:	f3bf 8f4f 	dsb	sy
   80e72:	e7fe      	b.n	80e72 <xQueueGenericSend+0x42>
   80e74:	6c02      	ldr	r2, [r0, #64]	; 0x40
   80e76:	2a00      	cmp	r2, #0
   80e78:	d0e1      	beq.n	80e3e <xQueueGenericSend+0xe>
   80e7a:	f04f 0340 	mov.w	r3, #64	; 0x40
   80e7e:	f383 8811 	msr	BASEPRI, r3
   80e82:	f3bf 8f6f 	isb	sy
   80e86:	f3bf 8f4f 	dsb	sy
   80e8a:	e7fe      	b.n	80e8a <xQueueGenericSend+0x5a>
   80e8c:	6be2      	ldr	r2, [r4, #60]	; 0x3c
   80e8e:	2a01      	cmp	r2, #1
   80e90:	d0d7      	beq.n	80e42 <xQueueGenericSend+0x12>
   80e92:	f04f 0340 	mov.w	r3, #64	; 0x40
   80e96:	f383 8811 	msr	BASEPRI, r3
   80e9a:	f3bf 8f6f 	isb	sy
   80e9e:	f3bf 8f4f 	dsb	sy
   80ea2:	e7fe      	b.n	80ea2 <xQueueGenericSend+0x72>
   80ea4:	2500      	movs	r5, #0
   80ea6:	f8df 8134 	ldr.w	r8, [pc, #308]	; 80fdc <xQueueGenericSend+0x1ac>
   80eaa:	f8df a134 	ldr.w	sl, [pc, #308]	; 80fe0 <xQueueGenericSend+0x1b0>
   80eae:	f8df 9110 	ldr.w	r9, [pc, #272]	; 80fc0 <xQueueGenericSend+0x190>
   80eb2:	e030      	b.n	80f16 <xQueueGenericSend+0xe6>
   80eb4:	2500      	movs	r5, #0
   80eb6:	e7f6      	b.n	80ea6 <xQueueGenericSend+0x76>
   80eb8:	4632      	mov	r2, r6
   80eba:	4639      	mov	r1, r7
   80ebc:	4620      	mov	r0, r4
   80ebe:	4b3e      	ldr	r3, [pc, #248]	; (80fb8 <xQueueGenericSend+0x188>)
   80ec0:	4798      	blx	r3
   80ec2:	6a63      	ldr	r3, [r4, #36]	; 0x24
   80ec4:	b193      	cbz	r3, 80eec <xQueueGenericSend+0xbc>
   80ec6:	f104 0024 	add.w	r0, r4, #36	; 0x24
   80eca:	4b3c      	ldr	r3, [pc, #240]	; (80fbc <xQueueGenericSend+0x18c>)
   80ecc:	4798      	blx	r3
   80ece:	b138      	cbz	r0, 80ee0 <xQueueGenericSend+0xb0>
   80ed0:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
   80ed4:	4b3a      	ldr	r3, [pc, #232]	; (80fc0 <xQueueGenericSend+0x190>)
   80ed6:	601a      	str	r2, [r3, #0]
   80ed8:	f3bf 8f4f 	dsb	sy
   80edc:	f3bf 8f6f 	isb	sy
   80ee0:	4b38      	ldr	r3, [pc, #224]	; (80fc4 <xQueueGenericSend+0x194>)
   80ee2:	4798      	blx	r3
   80ee4:	2001      	movs	r0, #1
   80ee6:	b005      	add	sp, #20
   80ee8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   80eec:	2800      	cmp	r0, #0
   80eee:	d0f7      	beq.n	80ee0 <xQueueGenericSend+0xb0>
   80ef0:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
   80ef4:	4b32      	ldr	r3, [pc, #200]	; (80fc0 <xQueueGenericSend+0x190>)
   80ef6:	601a      	str	r2, [r3, #0]
   80ef8:	f3bf 8f4f 	dsb	sy
   80efc:	f3bf 8f6f 	isb	sy
   80f00:	e7ee      	b.n	80ee0 <xQueueGenericSend+0xb0>
   80f02:	4b30      	ldr	r3, [pc, #192]	; (80fc4 <xQueueGenericSend+0x194>)
   80f04:	4798      	blx	r3
   80f06:	2000      	movs	r0, #0
   80f08:	e7ed      	b.n	80ee6 <xQueueGenericSend+0xb6>
   80f0a:	4620      	mov	r0, r4
   80f0c:	4b2e      	ldr	r3, [pc, #184]	; (80fc8 <xQueueGenericSend+0x198>)
   80f0e:	4798      	blx	r3
   80f10:	4b2e      	ldr	r3, [pc, #184]	; (80fcc <xQueueGenericSend+0x19c>)
   80f12:	4798      	blx	r3
   80f14:	2501      	movs	r5, #1
   80f16:	47c0      	blx	r8
   80f18:	6ba2      	ldr	r2, [r4, #56]	; 0x38
   80f1a:	6be3      	ldr	r3, [r4, #60]	; 0x3c
   80f1c:	429a      	cmp	r2, r3
   80f1e:	d3cb      	bcc.n	80eb8 <xQueueGenericSend+0x88>
   80f20:	2e02      	cmp	r6, #2
   80f22:	d0c9      	beq.n	80eb8 <xQueueGenericSend+0x88>
   80f24:	9b01      	ldr	r3, [sp, #4]
   80f26:	2b00      	cmp	r3, #0
   80f28:	d0eb      	beq.n	80f02 <xQueueGenericSend+0xd2>
   80f2a:	b90d      	cbnz	r5, 80f30 <xQueueGenericSend+0x100>
   80f2c:	a802      	add	r0, sp, #8
   80f2e:	47d0      	blx	sl
   80f30:	4b24      	ldr	r3, [pc, #144]	; (80fc4 <xQueueGenericSend+0x194>)
   80f32:	4798      	blx	r3
   80f34:	4b26      	ldr	r3, [pc, #152]	; (80fd0 <xQueueGenericSend+0x1a0>)
   80f36:	4798      	blx	r3
   80f38:	47c0      	blx	r8
   80f3a:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
   80f3e:	b25b      	sxtb	r3, r3
   80f40:	f1b3 3fff 	cmp.w	r3, #4294967295
   80f44:	bf04      	itt	eq
   80f46:	2300      	moveq	r3, #0
   80f48:	f884 3044 	strbeq.w	r3, [r4, #68]	; 0x44
   80f4c:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
   80f50:	b25b      	sxtb	r3, r3
   80f52:	f1b3 3fff 	cmp.w	r3, #4294967295
   80f56:	bf04      	itt	eq
   80f58:	2300      	moveq	r3, #0
   80f5a:	f884 3045 	strbeq.w	r3, [r4, #69]	; 0x45
   80f5e:	4b19      	ldr	r3, [pc, #100]	; (80fc4 <xQueueGenericSend+0x194>)
   80f60:	4798      	blx	r3
   80f62:	a901      	add	r1, sp, #4
   80f64:	a802      	add	r0, sp, #8
   80f66:	4b1b      	ldr	r3, [pc, #108]	; (80fd4 <xQueueGenericSend+0x1a4>)
   80f68:	4798      	blx	r3
   80f6a:	b9e0      	cbnz	r0, 80fa6 <xQueueGenericSend+0x176>
   80f6c:	47c0      	blx	r8
   80f6e:	f8d4 b038 	ldr.w	fp, [r4, #56]	; 0x38
   80f72:	6be5      	ldr	r5, [r4, #60]	; 0x3c
   80f74:	4b13      	ldr	r3, [pc, #76]	; (80fc4 <xQueueGenericSend+0x194>)
   80f76:	4798      	blx	r3
   80f78:	45ab      	cmp	fp, r5
   80f7a:	d1c6      	bne.n	80f0a <xQueueGenericSend+0xda>
   80f7c:	9901      	ldr	r1, [sp, #4]
   80f7e:	f104 0010 	add.w	r0, r4, #16
   80f82:	4b15      	ldr	r3, [pc, #84]	; (80fd8 <xQueueGenericSend+0x1a8>)
   80f84:	4798      	blx	r3
   80f86:	4620      	mov	r0, r4
   80f88:	4b0f      	ldr	r3, [pc, #60]	; (80fc8 <xQueueGenericSend+0x198>)
   80f8a:	4798      	blx	r3
   80f8c:	4b0f      	ldr	r3, [pc, #60]	; (80fcc <xQueueGenericSend+0x19c>)
   80f8e:	4798      	blx	r3
   80f90:	2800      	cmp	r0, #0
   80f92:	d1bf      	bne.n	80f14 <xQueueGenericSend+0xe4>
   80f94:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
   80f98:	f8c9 3000 	str.w	r3, [r9]
   80f9c:	f3bf 8f4f 	dsb	sy
   80fa0:	f3bf 8f6f 	isb	sy
   80fa4:	e7b6      	b.n	80f14 <xQueueGenericSend+0xe4>
   80fa6:	4620      	mov	r0, r4
   80fa8:	4b07      	ldr	r3, [pc, #28]	; (80fc8 <xQueueGenericSend+0x198>)
   80faa:	4798      	blx	r3
   80fac:	4b07      	ldr	r3, [pc, #28]	; (80fcc <xQueueGenericSend+0x19c>)
   80fae:	4798      	blx	r3
   80fb0:	2000      	movs	r0, #0
   80fb2:	e798      	b.n	80ee6 <xQueueGenericSend+0xb6>
   80fb4:	00081e1d 	.word	0x00081e1d
   80fb8:	00080c0d 	.word	0x00080c0d
   80fbc:	00081cdd 	.word	0x00081cdd
   80fc0:	e000ed04 	.word	0xe000ed04
   80fc4:	0008096d 	.word	0x0008096d
   80fc8:	00080cb5 	.word	0x00080cb5
   80fcc:	00081a0d 	.word	0x00081a0d
   80fd0:	000818bd 	.word	0x000818bd
   80fd4:	00081d85 	.word	0x00081d85
   80fd8:	00081c61 	.word	0x00081c61
   80fdc:	00080929 	.word	0x00080929
   80fe0:	00081d6d 	.word	0x00081d6d

00080fe4 <xQueueCreateMutex>:
   80fe4:	b538      	push	{r3, r4, r5, lr}
   80fe6:	4602      	mov	r2, r0
   80fe8:	2100      	movs	r1, #0
   80fea:	2001      	movs	r0, #1
   80fec:	4b06      	ldr	r3, [pc, #24]	; (81008 <xQueueCreateMutex+0x24>)
   80fee:	4798      	blx	r3
   80ff0:	4604      	mov	r4, r0
   80ff2:	b138      	cbz	r0, 81004 <xQueueCreateMutex+0x20>
   80ff4:	2100      	movs	r1, #0
   80ff6:	6041      	str	r1, [r0, #4]
   80ff8:	6001      	str	r1, [r0, #0]
   80ffa:	60c1      	str	r1, [r0, #12]
   80ffc:	460b      	mov	r3, r1
   80ffe:	460a      	mov	r2, r1
   81000:	4d02      	ldr	r5, [pc, #8]	; (8100c <xQueueCreateMutex+0x28>)
   81002:	47a8      	blx	r5
   81004:	4620      	mov	r0, r4
   81006:	bd38      	pop	{r3, r4, r5, pc}
   81008:	00080ddd 	.word	0x00080ddd
   8100c:	00080e31 	.word	0x00080e31

00081010 <xQueueGenericSendFromISR>:
   81010:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   81014:	2800      	cmp	r0, #0
   81016:	d037      	beq.n	81088 <xQueueGenericSendFromISR+0x78>
   81018:	4604      	mov	r4, r0
   8101a:	2900      	cmp	r1, #0
   8101c:	d03d      	beq.n	8109a <xQueueGenericSendFromISR+0x8a>
   8101e:	2b02      	cmp	r3, #2
   81020:	d047      	beq.n	810b2 <xQueueGenericSendFromISR+0xa2>
   81022:	461f      	mov	r7, r3
   81024:	4690      	mov	r8, r2
   81026:	4689      	mov	r9, r1
   81028:	4b2f      	ldr	r3, [pc, #188]	; (810e8 <xQueueGenericSendFromISR+0xd8>)
   8102a:	4798      	blx	r3
   8102c:	f3ef 8611 	mrs	r6, BASEPRI
   81030:	f04f 0340 	mov.w	r3, #64	; 0x40
   81034:	f383 8811 	msr	BASEPRI, r3
   81038:	f3bf 8f6f 	isb	sy
   8103c:	f3bf 8f4f 	dsb	sy
   81040:	6ba2      	ldr	r2, [r4, #56]	; 0x38
   81042:	6be3      	ldr	r3, [r4, #60]	; 0x3c
   81044:	429a      	cmp	r2, r3
   81046:	d301      	bcc.n	8104c <xQueueGenericSendFromISR+0x3c>
   81048:	2f02      	cmp	r7, #2
   8104a:	d144      	bne.n	810d6 <xQueueGenericSendFromISR+0xc6>
   8104c:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
   81050:	b26d      	sxtb	r5, r5
   81052:	463a      	mov	r2, r7
   81054:	4649      	mov	r1, r9
   81056:	4620      	mov	r0, r4
   81058:	4b24      	ldr	r3, [pc, #144]	; (810ec <xQueueGenericSendFromISR+0xdc>)
   8105a:	4798      	blx	r3
   8105c:	f1b5 3fff 	cmp.w	r5, #4294967295
   81060:	d133      	bne.n	810ca <xQueueGenericSendFromISR+0xba>
   81062:	6a63      	ldr	r3, [r4, #36]	; 0x24
   81064:	2b00      	cmp	r3, #0
   81066:	d038      	beq.n	810da <xQueueGenericSendFromISR+0xca>
   81068:	f104 0024 	add.w	r0, r4, #36	; 0x24
   8106c:	4b20      	ldr	r3, [pc, #128]	; (810f0 <xQueueGenericSendFromISR+0xe0>)
   8106e:	4798      	blx	r3
   81070:	2800      	cmp	r0, #0
   81072:	d034      	beq.n	810de <xQueueGenericSendFromISR+0xce>
   81074:	f1b8 0f00 	cmp.w	r8, #0
   81078:	d033      	beq.n	810e2 <xQueueGenericSendFromISR+0xd2>
   8107a:	2001      	movs	r0, #1
   8107c:	f8c8 0000 	str.w	r0, [r8]
   81080:	f386 8811 	msr	BASEPRI, r6
   81084:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   81088:	f04f 0340 	mov.w	r3, #64	; 0x40
   8108c:	f383 8811 	msr	BASEPRI, r3
   81090:	f3bf 8f6f 	isb	sy
   81094:	f3bf 8f4f 	dsb	sy
   81098:	e7fe      	b.n	81098 <xQueueGenericSendFromISR+0x88>
   8109a:	6c00      	ldr	r0, [r0, #64]	; 0x40
   8109c:	2800      	cmp	r0, #0
   8109e:	d0be      	beq.n	8101e <xQueueGenericSendFromISR+0xe>
   810a0:	f04f 0340 	mov.w	r3, #64	; 0x40
   810a4:	f383 8811 	msr	BASEPRI, r3
   810a8:	f3bf 8f6f 	isb	sy
   810ac:	f3bf 8f4f 	dsb	sy
   810b0:	e7fe      	b.n	810b0 <xQueueGenericSendFromISR+0xa0>
   810b2:	6be0      	ldr	r0, [r4, #60]	; 0x3c
   810b4:	2801      	cmp	r0, #1
   810b6:	d0b4      	beq.n	81022 <xQueueGenericSendFromISR+0x12>
   810b8:	f04f 0340 	mov.w	r3, #64	; 0x40
   810bc:	f383 8811 	msr	BASEPRI, r3
   810c0:	f3bf 8f6f 	isb	sy
   810c4:	f3bf 8f4f 	dsb	sy
   810c8:	e7fe      	b.n	810c8 <xQueueGenericSendFromISR+0xb8>
   810ca:	1c6b      	adds	r3, r5, #1
   810cc:	b25b      	sxtb	r3, r3
   810ce:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
   810d2:	2001      	movs	r0, #1
   810d4:	e7d4      	b.n	81080 <xQueueGenericSendFromISR+0x70>
   810d6:	2000      	movs	r0, #0
   810d8:	e7d2      	b.n	81080 <xQueueGenericSendFromISR+0x70>
   810da:	2001      	movs	r0, #1
   810dc:	e7d0      	b.n	81080 <xQueueGenericSendFromISR+0x70>
   810de:	2001      	movs	r0, #1
   810e0:	e7ce      	b.n	81080 <xQueueGenericSendFromISR+0x70>
   810e2:	2001      	movs	r0, #1
   810e4:	e7cc      	b.n	81080 <xQueueGenericSendFromISR+0x70>
   810e6:	bf00      	nop
   810e8:	00080b11 	.word	0x00080b11
   810ec:	00080c0d 	.word	0x00080c0d
   810f0:	00081cdd 	.word	0x00081cdd

000810f4 <xQueueReceive>:
   810f4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   810f8:	b084      	sub	sp, #16
   810fa:	9201      	str	r2, [sp, #4]
   810fc:	b180      	cbz	r0, 81120 <xQueueReceive+0x2c>
   810fe:	4604      	mov	r4, r0
   81100:	b1b9      	cbz	r1, 81132 <xQueueReceive+0x3e>
   81102:	460e      	mov	r6, r1
   81104:	4b50      	ldr	r3, [pc, #320]	; (81248 <xQueueReceive+0x154>)
   81106:	4798      	blx	r3
   81108:	b9f8      	cbnz	r0, 8114a <xQueueReceive+0x56>
   8110a:	9b01      	ldr	r3, [sp, #4]
   8110c:	b32b      	cbz	r3, 8115a <xQueueReceive+0x66>
   8110e:	f04f 0340 	mov.w	r3, #64	; 0x40
   81112:	f383 8811 	msr	BASEPRI, r3
   81116:	f3bf 8f6f 	isb	sy
   8111a:	f3bf 8f4f 	dsb	sy
   8111e:	e7fe      	b.n	8111e <xQueueReceive+0x2a>
   81120:	f04f 0340 	mov.w	r3, #64	; 0x40
   81124:	f383 8811 	msr	BASEPRI, r3
   81128:	f3bf 8f6f 	isb	sy
   8112c:	f3bf 8f4f 	dsb	sy
   81130:	e7fe      	b.n	81130 <xQueueReceive+0x3c>
   81132:	6c03      	ldr	r3, [r0, #64]	; 0x40
   81134:	2b00      	cmp	r3, #0
   81136:	d0e4      	beq.n	81102 <xQueueReceive+0xe>
   81138:	f04f 0340 	mov.w	r3, #64	; 0x40
   8113c:	f383 8811 	msr	BASEPRI, r3
   81140:	f3bf 8f6f 	isb	sy
   81144:	f3bf 8f4f 	dsb	sy
   81148:	e7fe      	b.n	81148 <xQueueReceive+0x54>
   8114a:	2700      	movs	r7, #0
   8114c:	f8df 8124 	ldr.w	r8, [pc, #292]	; 81274 <xQueueReceive+0x180>
   81150:	f8df a124 	ldr.w	sl, [pc, #292]	; 81278 <xQueueReceive+0x184>
   81154:	f8df 90fc 	ldr.w	r9, [pc, #252]	; 81254 <xQueueReceive+0x160>
   81158:	e029      	b.n	811ae <xQueueReceive+0xba>
   8115a:	2700      	movs	r7, #0
   8115c:	e7f6      	b.n	8114c <xQueueReceive+0x58>
   8115e:	4631      	mov	r1, r6
   81160:	4620      	mov	r0, r4
   81162:	4b3a      	ldr	r3, [pc, #232]	; (8124c <xQueueReceive+0x158>)
   81164:	4798      	blx	r3
   81166:	3d01      	subs	r5, #1
   81168:	63a5      	str	r5, [r4, #56]	; 0x38
   8116a:	6923      	ldr	r3, [r4, #16]
   8116c:	b163      	cbz	r3, 81188 <xQueueReceive+0x94>
   8116e:	f104 0010 	add.w	r0, r4, #16
   81172:	4b37      	ldr	r3, [pc, #220]	; (81250 <xQueueReceive+0x15c>)
   81174:	4798      	blx	r3
   81176:	b138      	cbz	r0, 81188 <xQueueReceive+0x94>
   81178:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
   8117c:	4b35      	ldr	r3, [pc, #212]	; (81254 <xQueueReceive+0x160>)
   8117e:	601a      	str	r2, [r3, #0]
   81180:	f3bf 8f4f 	dsb	sy
   81184:	f3bf 8f6f 	isb	sy
   81188:	4b33      	ldr	r3, [pc, #204]	; (81258 <xQueueReceive+0x164>)
   8118a:	4798      	blx	r3
   8118c:	2001      	movs	r0, #1
   8118e:	b004      	add	sp, #16
   81190:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   81194:	4b30      	ldr	r3, [pc, #192]	; (81258 <xQueueReceive+0x164>)
   81196:	4798      	blx	r3
   81198:	2000      	movs	r0, #0
   8119a:	e7f8      	b.n	8118e <xQueueReceive+0x9a>
   8119c:	a802      	add	r0, sp, #8
   8119e:	47d0      	blx	sl
   811a0:	e00e      	b.n	811c0 <xQueueReceive+0xcc>
   811a2:	4620      	mov	r0, r4
   811a4:	4b2d      	ldr	r3, [pc, #180]	; (8125c <xQueueReceive+0x168>)
   811a6:	4798      	blx	r3
   811a8:	4b2d      	ldr	r3, [pc, #180]	; (81260 <xQueueReceive+0x16c>)
   811aa:	4798      	blx	r3
   811ac:	2701      	movs	r7, #1
   811ae:	47c0      	blx	r8
   811b0:	6ba5      	ldr	r5, [r4, #56]	; 0x38
   811b2:	2d00      	cmp	r5, #0
   811b4:	d1d3      	bne.n	8115e <xQueueReceive+0x6a>
   811b6:	9b01      	ldr	r3, [sp, #4]
   811b8:	2b00      	cmp	r3, #0
   811ba:	d0eb      	beq.n	81194 <xQueueReceive+0xa0>
   811bc:	2f00      	cmp	r7, #0
   811be:	d0ed      	beq.n	8119c <xQueueReceive+0xa8>
   811c0:	4b25      	ldr	r3, [pc, #148]	; (81258 <xQueueReceive+0x164>)
   811c2:	4798      	blx	r3
   811c4:	4b27      	ldr	r3, [pc, #156]	; (81264 <xQueueReceive+0x170>)
   811c6:	4798      	blx	r3
   811c8:	47c0      	blx	r8
   811ca:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
   811ce:	b25b      	sxtb	r3, r3
   811d0:	f1b3 3fff 	cmp.w	r3, #4294967295
   811d4:	bf04      	itt	eq
   811d6:	2300      	moveq	r3, #0
   811d8:	f884 3044 	strbeq.w	r3, [r4, #68]	; 0x44
   811dc:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
   811e0:	b25b      	sxtb	r3, r3
   811e2:	f1b3 3fff 	cmp.w	r3, #4294967295
   811e6:	bf04      	itt	eq
   811e8:	2300      	moveq	r3, #0
   811ea:	f884 3045 	strbeq.w	r3, [r4, #69]	; 0x45
   811ee:	4b1a      	ldr	r3, [pc, #104]	; (81258 <xQueueReceive+0x164>)
   811f0:	4798      	blx	r3
   811f2:	a901      	add	r1, sp, #4
   811f4:	a802      	add	r0, sp, #8
   811f6:	4b1c      	ldr	r3, [pc, #112]	; (81268 <xQueueReceive+0x174>)
   811f8:	4798      	blx	r3
   811fa:	b9c8      	cbnz	r0, 81230 <xQueueReceive+0x13c>
   811fc:	4620      	mov	r0, r4
   811fe:	4b1b      	ldr	r3, [pc, #108]	; (8126c <xQueueReceive+0x178>)
   81200:	4798      	blx	r3
   81202:	2800      	cmp	r0, #0
   81204:	d0cd      	beq.n	811a2 <xQueueReceive+0xae>
   81206:	9901      	ldr	r1, [sp, #4]
   81208:	f104 0024 	add.w	r0, r4, #36	; 0x24
   8120c:	4b18      	ldr	r3, [pc, #96]	; (81270 <xQueueReceive+0x17c>)
   8120e:	4798      	blx	r3
   81210:	4620      	mov	r0, r4
   81212:	4b12      	ldr	r3, [pc, #72]	; (8125c <xQueueReceive+0x168>)
   81214:	4798      	blx	r3
   81216:	4b12      	ldr	r3, [pc, #72]	; (81260 <xQueueReceive+0x16c>)
   81218:	4798      	blx	r3
   8121a:	2800      	cmp	r0, #0
   8121c:	d1c6      	bne.n	811ac <xQueueReceive+0xb8>
   8121e:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
   81222:	f8c9 3000 	str.w	r3, [r9]
   81226:	f3bf 8f4f 	dsb	sy
   8122a:	f3bf 8f6f 	isb	sy
   8122e:	e7bd      	b.n	811ac <xQueueReceive+0xb8>
   81230:	4620      	mov	r0, r4
   81232:	4b0a      	ldr	r3, [pc, #40]	; (8125c <xQueueReceive+0x168>)
   81234:	4798      	blx	r3
   81236:	4b0a      	ldr	r3, [pc, #40]	; (81260 <xQueueReceive+0x16c>)
   81238:	4798      	blx	r3
   8123a:	4620      	mov	r0, r4
   8123c:	4b0b      	ldr	r3, [pc, #44]	; (8126c <xQueueReceive+0x178>)
   8123e:	4798      	blx	r3
   81240:	2800      	cmp	r0, #0
   81242:	d0b3      	beq.n	811ac <xQueueReceive+0xb8>
   81244:	2000      	movs	r0, #0
   81246:	e7a2      	b.n	8118e <xQueueReceive+0x9a>
   81248:	00081e1d 	.word	0x00081e1d
   8124c:	00080c8d 	.word	0x00080c8d
   81250:	00081cdd 	.word	0x00081cdd
   81254:	e000ed04 	.word	0xe000ed04
   81258:	0008096d 	.word	0x0008096d
   8125c:	00080cb5 	.word	0x00080cb5
   81260:	00081a0d 	.word	0x00081a0d
   81264:	000818bd 	.word	0x000818bd
   81268:	00081d85 	.word	0x00081d85
   8126c:	00080bed 	.word	0x00080bed
   81270:	00081c61 	.word	0x00081c61
   81274:	00080929 	.word	0x00080929
   81278:	00081d6d 	.word	0x00081d6d

0008127c <xQueueSemaphoreTake>:
   8127c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   81280:	b085      	sub	sp, #20
   81282:	9101      	str	r1, [sp, #4]
   81284:	b158      	cbz	r0, 8129e <xQueueSemaphoreTake+0x22>
   81286:	4604      	mov	r4, r0
   81288:	6c03      	ldr	r3, [r0, #64]	; 0x40
   8128a:	b18b      	cbz	r3, 812b0 <xQueueSemaphoreTake+0x34>
   8128c:	f04f 0340 	mov.w	r3, #64	; 0x40
   81290:	f383 8811 	msr	BASEPRI, r3
   81294:	f3bf 8f6f 	isb	sy
   81298:	f3bf 8f4f 	dsb	sy
   8129c:	e7fe      	b.n	8129c <xQueueSemaphoreTake+0x20>
   8129e:	f04f 0340 	mov.w	r3, #64	; 0x40
   812a2:	f383 8811 	msr	BASEPRI, r3
   812a6:	f3bf 8f6f 	isb	sy
   812aa:	f3bf 8f4f 	dsb	sy
   812ae:	e7fe      	b.n	812ae <xQueueSemaphoreTake+0x32>
   812b0:	4b5b      	ldr	r3, [pc, #364]	; (81420 <xQueueSemaphoreTake+0x1a4>)
   812b2:	4798      	blx	r3
   812b4:	b950      	cbnz	r0, 812cc <xQueueSemaphoreTake+0x50>
   812b6:	9b01      	ldr	r3, [sp, #4]
   812b8:	b183      	cbz	r3, 812dc <xQueueSemaphoreTake+0x60>
   812ba:	f04f 0340 	mov.w	r3, #64	; 0x40
   812be:	f383 8811 	msr	BASEPRI, r3
   812c2:	f3bf 8f6f 	isb	sy
   812c6:	f3bf 8f4f 	dsb	sy
   812ca:	e7fe      	b.n	812ca <xQueueSemaphoreTake+0x4e>
   812cc:	2500      	movs	r5, #0
   812ce:	462f      	mov	r7, r5
   812d0:	4e54      	ldr	r6, [pc, #336]	; (81424 <xQueueSemaphoreTake+0x1a8>)
   812d2:	f8df 9184 	ldr.w	r9, [pc, #388]	; 81458 <xQueueSemaphoreTake+0x1dc>
   812d6:	f8df 8158 	ldr.w	r8, [pc, #344]	; 81430 <xQueueSemaphoreTake+0x1b4>
   812da:	e048      	b.n	8136e <xQueueSemaphoreTake+0xf2>
   812dc:	2500      	movs	r5, #0
   812de:	462f      	mov	r7, r5
   812e0:	e7f6      	b.n	812d0 <xQueueSemaphoreTake+0x54>
   812e2:	3b01      	subs	r3, #1
   812e4:	63a3      	str	r3, [r4, #56]	; 0x38
   812e6:	6823      	ldr	r3, [r4, #0]
   812e8:	b913      	cbnz	r3, 812f0 <xQueueSemaphoreTake+0x74>
   812ea:	4b4f      	ldr	r3, [pc, #316]	; (81428 <xQueueSemaphoreTake+0x1ac>)
   812ec:	4798      	blx	r3
   812ee:	6060      	str	r0, [r4, #4]
   812f0:	6923      	ldr	r3, [r4, #16]
   812f2:	b163      	cbz	r3, 8130e <xQueueSemaphoreTake+0x92>
   812f4:	f104 0010 	add.w	r0, r4, #16
   812f8:	4b4c      	ldr	r3, [pc, #304]	; (8142c <xQueueSemaphoreTake+0x1b0>)
   812fa:	4798      	blx	r3
   812fc:	b138      	cbz	r0, 8130e <xQueueSemaphoreTake+0x92>
   812fe:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
   81302:	4b4b      	ldr	r3, [pc, #300]	; (81430 <xQueueSemaphoreTake+0x1b4>)
   81304:	601a      	str	r2, [r3, #0]
   81306:	f3bf 8f4f 	dsb	sy
   8130a:	f3bf 8f6f 	isb	sy
   8130e:	4b49      	ldr	r3, [pc, #292]	; (81434 <xQueueSemaphoreTake+0x1b8>)
   81310:	4798      	blx	r3
   81312:	2501      	movs	r5, #1
   81314:	4628      	mov	r0, r5
   81316:	b005      	add	sp, #20
   81318:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   8131c:	b145      	cbz	r5, 81330 <xQueueSemaphoreTake+0xb4>
   8131e:	f04f 0340 	mov.w	r3, #64	; 0x40
   81322:	f383 8811 	msr	BASEPRI, r3
   81326:	f3bf 8f6f 	isb	sy
   8132a:	f3bf 8f4f 	dsb	sy
   8132e:	e7fe      	b.n	8132e <xQueueSemaphoreTake+0xb2>
   81330:	4b40      	ldr	r3, [pc, #256]	; (81434 <xQueueSemaphoreTake+0x1b8>)
   81332:	4798      	blx	r3
   81334:	e7ee      	b.n	81314 <xQueueSemaphoreTake+0x98>
   81336:	a802      	add	r0, sp, #8
   81338:	47c8      	blx	r9
   8133a:	e021      	b.n	81380 <xQueueSemaphoreTake+0x104>
   8133c:	47b0      	blx	r6
   8133e:	6860      	ldr	r0, [r4, #4]
   81340:	4b3d      	ldr	r3, [pc, #244]	; (81438 <xQueueSemaphoreTake+0x1bc>)
   81342:	4798      	blx	r3
   81344:	4605      	mov	r5, r0
   81346:	4b3b      	ldr	r3, [pc, #236]	; (81434 <xQueueSemaphoreTake+0x1b8>)
   81348:	4798      	blx	r3
   8134a:	e040      	b.n	813ce <xQueueSemaphoreTake+0x152>
   8134c:	4620      	mov	r0, r4
   8134e:	4b3b      	ldr	r3, [pc, #236]	; (8143c <xQueueSemaphoreTake+0x1c0>)
   81350:	4798      	blx	r3
   81352:	4b3b      	ldr	r3, [pc, #236]	; (81440 <xQueueSemaphoreTake+0x1c4>)
   81354:	4798      	blx	r3
   81356:	e009      	b.n	8136c <xQueueSemaphoreTake+0xf0>
   81358:	4620      	mov	r0, r4
   8135a:	4b38      	ldr	r3, [pc, #224]	; (8143c <xQueueSemaphoreTake+0x1c0>)
   8135c:	4798      	blx	r3
   8135e:	4b38      	ldr	r3, [pc, #224]	; (81440 <xQueueSemaphoreTake+0x1c4>)
   81360:	4798      	blx	r3
   81362:	4620      	mov	r0, r4
   81364:	4b37      	ldr	r3, [pc, #220]	; (81444 <xQueueSemaphoreTake+0x1c8>)
   81366:	4798      	blx	r3
   81368:	2800      	cmp	r0, #0
   8136a:	d145      	bne.n	813f8 <xQueueSemaphoreTake+0x17c>
   8136c:	2701      	movs	r7, #1
   8136e:	47b0      	blx	r6
   81370:	6ba3      	ldr	r3, [r4, #56]	; 0x38
   81372:	2b00      	cmp	r3, #0
   81374:	d1b5      	bne.n	812e2 <xQueueSemaphoreTake+0x66>
   81376:	9b01      	ldr	r3, [sp, #4]
   81378:	2b00      	cmp	r3, #0
   8137a:	d0cf      	beq.n	8131c <xQueueSemaphoreTake+0xa0>
   8137c:	2f00      	cmp	r7, #0
   8137e:	d0da      	beq.n	81336 <xQueueSemaphoreTake+0xba>
   81380:	4b2c      	ldr	r3, [pc, #176]	; (81434 <xQueueSemaphoreTake+0x1b8>)
   81382:	4798      	blx	r3
   81384:	4b30      	ldr	r3, [pc, #192]	; (81448 <xQueueSemaphoreTake+0x1cc>)
   81386:	4798      	blx	r3
   81388:	47b0      	blx	r6
   8138a:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
   8138e:	b25b      	sxtb	r3, r3
   81390:	f1b3 3fff 	cmp.w	r3, #4294967295
   81394:	bf04      	itt	eq
   81396:	2300      	moveq	r3, #0
   81398:	f884 3044 	strbeq.w	r3, [r4, #68]	; 0x44
   8139c:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
   813a0:	b25b      	sxtb	r3, r3
   813a2:	f1b3 3fff 	cmp.w	r3, #4294967295
   813a6:	bf04      	itt	eq
   813a8:	2300      	moveq	r3, #0
   813aa:	f884 3045 	strbeq.w	r3, [r4, #69]	; 0x45
   813ae:	4b21      	ldr	r3, [pc, #132]	; (81434 <xQueueSemaphoreTake+0x1b8>)
   813b0:	4798      	blx	r3
   813b2:	a901      	add	r1, sp, #4
   813b4:	a802      	add	r0, sp, #8
   813b6:	4b25      	ldr	r3, [pc, #148]	; (8144c <xQueueSemaphoreTake+0x1d0>)
   813b8:	4798      	blx	r3
   813ba:	2800      	cmp	r0, #0
   813bc:	d1cc      	bne.n	81358 <xQueueSemaphoreTake+0xdc>
   813be:	4620      	mov	r0, r4
   813c0:	4b20      	ldr	r3, [pc, #128]	; (81444 <xQueueSemaphoreTake+0x1c8>)
   813c2:	4798      	blx	r3
   813c4:	2800      	cmp	r0, #0
   813c6:	d0c1      	beq.n	8134c <xQueueSemaphoreTake+0xd0>
   813c8:	6823      	ldr	r3, [r4, #0]
   813ca:	2b00      	cmp	r3, #0
   813cc:	d0b6      	beq.n	8133c <xQueueSemaphoreTake+0xc0>
   813ce:	9901      	ldr	r1, [sp, #4]
   813d0:	f104 0024 	add.w	r0, r4, #36	; 0x24
   813d4:	4b1e      	ldr	r3, [pc, #120]	; (81450 <xQueueSemaphoreTake+0x1d4>)
   813d6:	4798      	blx	r3
   813d8:	4620      	mov	r0, r4
   813da:	4b18      	ldr	r3, [pc, #96]	; (8143c <xQueueSemaphoreTake+0x1c0>)
   813dc:	4798      	blx	r3
   813de:	4b18      	ldr	r3, [pc, #96]	; (81440 <xQueueSemaphoreTake+0x1c4>)
   813e0:	4798      	blx	r3
   813e2:	2800      	cmp	r0, #0
   813e4:	d1c2      	bne.n	8136c <xQueueSemaphoreTake+0xf0>
   813e6:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
   813ea:	f8c8 3000 	str.w	r3, [r8]
   813ee:	f3bf 8f4f 	dsb	sy
   813f2:	f3bf 8f6f 	isb	sy
   813f6:	e7b9      	b.n	8136c <xQueueSemaphoreTake+0xf0>
   813f8:	2d00      	cmp	r5, #0
   813fa:	d08b      	beq.n	81314 <xQueueSemaphoreTake+0x98>
   813fc:	4b09      	ldr	r3, [pc, #36]	; (81424 <xQueueSemaphoreTake+0x1a8>)
   813fe:	4798      	blx	r3
   81400:	6a63      	ldr	r3, [r4, #36]	; 0x24
   81402:	b153      	cbz	r3, 8141a <xQueueSemaphoreTake+0x19e>
   81404:	6b23      	ldr	r3, [r4, #48]	; 0x30
   81406:	6819      	ldr	r1, [r3, #0]
   81408:	f1c1 0105 	rsb	r1, r1, #5
   8140c:	6860      	ldr	r0, [r4, #4]
   8140e:	4b11      	ldr	r3, [pc, #68]	; (81454 <xQueueSemaphoreTake+0x1d8>)
   81410:	4798      	blx	r3
   81412:	4b08      	ldr	r3, [pc, #32]	; (81434 <xQueueSemaphoreTake+0x1b8>)
   81414:	4798      	blx	r3
   81416:	2500      	movs	r5, #0
   81418:	e77c      	b.n	81314 <xQueueSemaphoreTake+0x98>
   8141a:	2100      	movs	r1, #0
   8141c:	e7f6      	b.n	8140c <xQueueSemaphoreTake+0x190>
   8141e:	bf00      	nop
   81420:	00081e1d 	.word	0x00081e1d
   81424:	00080929 	.word	0x00080929
   81428:	00082081 	.word	0x00082081
   8142c:	00081cdd 	.word	0x00081cdd
   81430:	e000ed04 	.word	0xe000ed04
   81434:	0008096d 	.word	0x0008096d
   81438:	00081e3d 	.word	0x00081e3d
   8143c:	00080cb5 	.word	0x00080cb5
   81440:	00081a0d 	.word	0x00081a0d
   81444:	00080bed 	.word	0x00080bed
   81448:	000818bd 	.word	0x000818bd
   8144c:	00081d85 	.word	0x00081d85
   81450:	00081c61 	.word	0x00081c61
   81454:	00081fb9 	.word	0x00081fb9
   81458:	00081d6d 	.word	0x00081d6d

0008145c <vQueueAddToRegistry>:
   8145c:	b410      	push	{r4}
   8145e:	4b0a      	ldr	r3, [pc, #40]	; (81488 <vQueueAddToRegistry+0x2c>)
   81460:	681b      	ldr	r3, [r3, #0]
   81462:	b14b      	cbz	r3, 81478 <vQueueAddToRegistry+0x1c>
   81464:	2301      	movs	r3, #1
   81466:	4c08      	ldr	r4, [pc, #32]	; (81488 <vQueueAddToRegistry+0x2c>)
   81468:	f854 2033 	ldr.w	r2, [r4, r3, lsl #3]
   8146c:	b12a      	cbz	r2, 8147a <vQueueAddToRegistry+0x1e>
   8146e:	3301      	adds	r3, #1
   81470:	2b08      	cmp	r3, #8
   81472:	d1f9      	bne.n	81468 <vQueueAddToRegistry+0xc>
   81474:	bc10      	pop	{r4}
   81476:	4770      	bx	lr
   81478:	2300      	movs	r3, #0
   8147a:	4a03      	ldr	r2, [pc, #12]	; (81488 <vQueueAddToRegistry+0x2c>)
   8147c:	f842 1033 	str.w	r1, [r2, r3, lsl #3]
   81480:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
   81484:	6058      	str	r0, [r3, #4]
   81486:	e7f5      	b.n	81474 <vQueueAddToRegistry+0x18>
   81488:	2007c3a8 	.word	0x2007c3a8

0008148c <vQueueWaitForMessageRestricted>:
   8148c:	b570      	push	{r4, r5, r6, lr}
   8148e:	4604      	mov	r4, r0
   81490:	460d      	mov	r5, r1
   81492:	4616      	mov	r6, r2
   81494:	4b11      	ldr	r3, [pc, #68]	; (814dc <vQueueWaitForMessageRestricted+0x50>)
   81496:	4798      	blx	r3
   81498:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
   8149c:	b25b      	sxtb	r3, r3
   8149e:	f1b3 3fff 	cmp.w	r3, #4294967295
   814a2:	bf04      	itt	eq
   814a4:	2300      	moveq	r3, #0
   814a6:	f884 3044 	strbeq.w	r3, [r4, #68]	; 0x44
   814aa:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
   814ae:	b25b      	sxtb	r3, r3
   814b0:	f1b3 3fff 	cmp.w	r3, #4294967295
   814b4:	bf04      	itt	eq
   814b6:	2300      	moveq	r3, #0
   814b8:	f884 3045 	strbeq.w	r3, [r4, #69]	; 0x45
   814bc:	4b08      	ldr	r3, [pc, #32]	; (814e0 <vQueueWaitForMessageRestricted+0x54>)
   814be:	4798      	blx	r3
   814c0:	6ba3      	ldr	r3, [r4, #56]	; 0x38
   814c2:	b11b      	cbz	r3, 814cc <vQueueWaitForMessageRestricted+0x40>
   814c4:	4620      	mov	r0, r4
   814c6:	4b07      	ldr	r3, [pc, #28]	; (814e4 <vQueueWaitForMessageRestricted+0x58>)
   814c8:	4798      	blx	r3
   814ca:	bd70      	pop	{r4, r5, r6, pc}
   814cc:	4632      	mov	r2, r6
   814ce:	4629      	mov	r1, r5
   814d0:	f104 0024 	add.w	r0, r4, #36	; 0x24
   814d4:	4b04      	ldr	r3, [pc, #16]	; (814e8 <vQueueWaitForMessageRestricted+0x5c>)
   814d6:	4798      	blx	r3
   814d8:	e7f4      	b.n	814c4 <vQueueWaitForMessageRestricted+0x38>
   814da:	bf00      	nop
   814dc:	00080929 	.word	0x00080929
   814e0:	0008096d 	.word	0x0008096d
   814e4:	00080cb5 	.word	0x00080cb5
   814e8:	00081c99 	.word	0x00081c99

000814ec <prvResetNextTaskUnblockTime>:
   814ec:	4b08      	ldr	r3, [pc, #32]	; (81510 <prvResetNextTaskUnblockTime+0x24>)
   814ee:	681b      	ldr	r3, [r3, #0]
   814f0:	681b      	ldr	r3, [r3, #0]
   814f2:	b13b      	cbz	r3, 81504 <prvResetNextTaskUnblockTime+0x18>
   814f4:	4b06      	ldr	r3, [pc, #24]	; (81510 <prvResetNextTaskUnblockTime+0x24>)
   814f6:	681b      	ldr	r3, [r3, #0]
   814f8:	68db      	ldr	r3, [r3, #12]
   814fa:	68db      	ldr	r3, [r3, #12]
   814fc:	685a      	ldr	r2, [r3, #4]
   814fe:	4b05      	ldr	r3, [pc, #20]	; (81514 <prvResetNextTaskUnblockTime+0x28>)
   81500:	601a      	str	r2, [r3, #0]
   81502:	4770      	bx	lr
   81504:	f04f 32ff 	mov.w	r2, #4294967295
   81508:	4b02      	ldr	r3, [pc, #8]	; (81514 <prvResetNextTaskUnblockTime+0x28>)
   8150a:	601a      	str	r2, [r3, #0]
   8150c:	4770      	bx	lr
   8150e:	bf00      	nop
   81510:	2007c1b4 	.word	0x2007c1b4
   81514:	2007c264 	.word	0x2007c264

00081518 <prvIdleTask>:
   81518:	b580      	push	{r7, lr}
   8151a:	4d16      	ldr	r5, [pc, #88]	; (81574 <prvIdleTask+0x5c>)
   8151c:	f8df 806c 	ldr.w	r8, [pc, #108]	; 8158c <prvIdleTask+0x74>
   81520:	4f15      	ldr	r7, [pc, #84]	; (81578 <prvIdleTask+0x60>)
   81522:	f8df 906c 	ldr.w	r9, [pc, #108]	; 81590 <prvIdleTask+0x78>
   81526:	682b      	ldr	r3, [r5, #0]
   81528:	b1bb      	cbz	r3, 8155a <prvIdleTask+0x42>
   8152a:	4e14      	ldr	r6, [pc, #80]	; (8157c <prvIdleTask+0x64>)
   8152c:	47c0      	blx	r8
   8152e:	68fb      	ldr	r3, [r7, #12]
   81530:	68dc      	ldr	r4, [r3, #12]
   81532:	1d20      	adds	r0, r4, #4
   81534:	47b0      	blx	r6
   81536:	4a12      	ldr	r2, [pc, #72]	; (81580 <prvIdleTask+0x68>)
   81538:	6813      	ldr	r3, [r2, #0]
   8153a:	3b01      	subs	r3, #1
   8153c:	6013      	str	r3, [r2, #0]
   8153e:	682b      	ldr	r3, [r5, #0]
   81540:	3b01      	subs	r3, #1
   81542:	602b      	str	r3, [r5, #0]
   81544:	4b0f      	ldr	r3, [pc, #60]	; (81584 <prvIdleTask+0x6c>)
   81546:	4798      	blx	r3
   81548:	6b20      	ldr	r0, [r4, #48]	; 0x30
   8154a:	f8df a048 	ldr.w	sl, [pc, #72]	; 81594 <prvIdleTask+0x7c>
   8154e:	47d0      	blx	sl
   81550:	4620      	mov	r0, r4
   81552:	47d0      	blx	sl
   81554:	682b      	ldr	r3, [r5, #0]
   81556:	2b00      	cmp	r3, #0
   81558:	d1e8      	bne.n	8152c <prvIdleTask+0x14>
   8155a:	4b0b      	ldr	r3, [pc, #44]	; (81588 <prvIdleTask+0x70>)
   8155c:	681b      	ldr	r3, [r3, #0]
   8155e:	2b01      	cmp	r3, #1
   81560:	d9e1      	bls.n	81526 <prvIdleTask+0xe>
   81562:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
   81566:	f8c9 3000 	str.w	r3, [r9]
   8156a:	f3bf 8f4f 	dsb	sy
   8156e:	f3bf 8f6f 	isb	sy
   81572:	e7d8      	b.n	81526 <prvIdleTask+0xe>
   81574:	2007c224 	.word	0x2007c224
   81578:	2007c298 	.word	0x2007c298
   8157c:	0008084d 	.word	0x0008084d
   81580:	2007c220 	.word	0x2007c220
   81584:	0008096d 	.word	0x0008096d
   81588:	2007c1bc 	.word	0x2007c1bc
   8158c:	00080929 	.word	0x00080929
   81590:	e000ed04 	.word	0xe000ed04
   81594:	00080bd5 	.word	0x00080bd5

00081598 <prvAddCurrentTaskToDelayedList>:
   81598:	b570      	push	{r4, r5, r6, lr}
   8159a:	4604      	mov	r4, r0
   8159c:	460e      	mov	r6, r1
   8159e:	4b1d      	ldr	r3, [pc, #116]	; (81614 <prvAddCurrentTaskToDelayedList+0x7c>)
   815a0:	681d      	ldr	r5, [r3, #0]
   815a2:	4b1d      	ldr	r3, [pc, #116]	; (81618 <prvAddCurrentTaskToDelayedList+0x80>)
   815a4:	6818      	ldr	r0, [r3, #0]
   815a6:	3004      	adds	r0, #4
   815a8:	4b1c      	ldr	r3, [pc, #112]	; (8161c <prvAddCurrentTaskToDelayedList+0x84>)
   815aa:	4798      	blx	r3
   815ac:	b948      	cbnz	r0, 815c2 <prvAddCurrentTaskToDelayedList+0x2a>
   815ae:	4b1a      	ldr	r3, [pc, #104]	; (81618 <prvAddCurrentTaskToDelayedList+0x80>)
   815b0:	681a      	ldr	r2, [r3, #0]
   815b2:	491b      	ldr	r1, [pc, #108]	; (81620 <prvAddCurrentTaskToDelayedList+0x88>)
   815b4:	680b      	ldr	r3, [r1, #0]
   815b6:	6ad0      	ldr	r0, [r2, #44]	; 0x2c
   815b8:	2201      	movs	r2, #1
   815ba:	4082      	lsls	r2, r0
   815bc:	ea23 0302 	bic.w	r3, r3, r2
   815c0:	600b      	str	r3, [r1, #0]
   815c2:	f1b4 3fff 	cmp.w	r4, #4294967295
   815c6:	d013      	beq.n	815f0 <prvAddCurrentTaskToDelayedList+0x58>
   815c8:	442c      	add	r4, r5
   815ca:	4b13      	ldr	r3, [pc, #76]	; (81618 <prvAddCurrentTaskToDelayedList+0x80>)
   815cc:	681b      	ldr	r3, [r3, #0]
   815ce:	605c      	str	r4, [r3, #4]
   815d0:	42a5      	cmp	r5, r4
   815d2:	d816      	bhi.n	81602 <prvAddCurrentTaskToDelayedList+0x6a>
   815d4:	4b13      	ldr	r3, [pc, #76]	; (81624 <prvAddCurrentTaskToDelayedList+0x8c>)
   815d6:	6818      	ldr	r0, [r3, #0]
   815d8:	4b0f      	ldr	r3, [pc, #60]	; (81618 <prvAddCurrentTaskToDelayedList+0x80>)
   815da:	6819      	ldr	r1, [r3, #0]
   815dc:	3104      	adds	r1, #4
   815de:	4b12      	ldr	r3, [pc, #72]	; (81628 <prvAddCurrentTaskToDelayedList+0x90>)
   815e0:	4798      	blx	r3
   815e2:	4b12      	ldr	r3, [pc, #72]	; (8162c <prvAddCurrentTaskToDelayedList+0x94>)
   815e4:	681b      	ldr	r3, [r3, #0]
   815e6:	429c      	cmp	r4, r3
   815e8:	bf3c      	itt	cc
   815ea:	4b10      	ldrcc	r3, [pc, #64]	; (8162c <prvAddCurrentTaskToDelayedList+0x94>)
   815ec:	601c      	strcc	r4, [r3, #0]
   815ee:	bd70      	pop	{r4, r5, r6, pc}
   815f0:	2e00      	cmp	r6, #0
   815f2:	d0e9      	beq.n	815c8 <prvAddCurrentTaskToDelayedList+0x30>
   815f4:	4b08      	ldr	r3, [pc, #32]	; (81618 <prvAddCurrentTaskToDelayedList+0x80>)
   815f6:	6819      	ldr	r1, [r3, #0]
   815f8:	3104      	adds	r1, #4
   815fa:	480d      	ldr	r0, [pc, #52]	; (81630 <prvAddCurrentTaskToDelayedList+0x98>)
   815fc:	4b0d      	ldr	r3, [pc, #52]	; (81634 <prvAddCurrentTaskToDelayedList+0x9c>)
   815fe:	4798      	blx	r3
   81600:	bd70      	pop	{r4, r5, r6, pc}
   81602:	4b0d      	ldr	r3, [pc, #52]	; (81638 <prvAddCurrentTaskToDelayedList+0xa0>)
   81604:	6818      	ldr	r0, [r3, #0]
   81606:	4b04      	ldr	r3, [pc, #16]	; (81618 <prvAddCurrentTaskToDelayedList+0x80>)
   81608:	6819      	ldr	r1, [r3, #0]
   8160a:	3104      	adds	r1, #4
   8160c:	4b06      	ldr	r3, [pc, #24]	; (81628 <prvAddCurrentTaskToDelayedList+0x90>)
   8160e:	4798      	blx	r3
   81610:	bd70      	pop	{r4, r5, r6, pc}
   81612:	bf00      	nop
   81614:	2007c2ac 	.word	0x2007c2ac
   81618:	2007c1b0 	.word	0x2007c1b0
   8161c:	0008084d 	.word	0x0008084d
   81620:	2007c234 	.word	0x2007c234
   81624:	2007c1b4 	.word	0x2007c1b4
   81628:	00080819 	.word	0x00080819
   8162c:	2007c264 	.word	0x2007c264
   81630:	2007c284 	.word	0x2007c284
   81634:	00080801 	.word	0x00080801
   81638:	2007c1b8 	.word	0x2007c1b8

0008163c <xTaskCreate>:
   8163c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   81640:	b083      	sub	sp, #12
   81642:	4683      	mov	fp, r0
   81644:	460d      	mov	r5, r1
   81646:	9301      	str	r3, [sp, #4]
   81648:	f8dd a034 	ldr.w	sl, [sp, #52]	; 0x34
   8164c:	0096      	lsls	r6, r2, #2
   8164e:	4630      	mov	r0, r6
   81650:	4b60      	ldr	r3, [pc, #384]	; (817d4 <xTaskCreate+0x198>)
   81652:	4798      	blx	r3
   81654:	2800      	cmp	r0, #0
   81656:	f000 808d 	beq.w	81774 <xTaskCreate+0x138>
   8165a:	4607      	mov	r7, r0
   8165c:	2060      	movs	r0, #96	; 0x60
   8165e:	4b5d      	ldr	r3, [pc, #372]	; (817d4 <xTaskCreate+0x198>)
   81660:	4798      	blx	r3
   81662:	4604      	mov	r4, r0
   81664:	2800      	cmp	r0, #0
   81666:	f000 8082 	beq.w	8176e <xTaskCreate+0x132>
   8166a:	6307      	str	r7, [r0, #48]	; 0x30
   8166c:	4632      	mov	r2, r6
   8166e:	21a5      	movs	r1, #165	; 0xa5
   81670:	4638      	mov	r0, r7
   81672:	4b59      	ldr	r3, [pc, #356]	; (817d8 <xTaskCreate+0x19c>)
   81674:	4798      	blx	r3
   81676:	3e04      	subs	r6, #4
   81678:	6b23      	ldr	r3, [r4, #48]	; 0x30
   8167a:	441e      	add	r6, r3
   8167c:	f026 0607 	bic.w	r6, r6, #7
   81680:	782b      	ldrb	r3, [r5, #0]
   81682:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
   81686:	782b      	ldrb	r3, [r5, #0]
   81688:	b163      	cbz	r3, 816a4 <xTaskCreate+0x68>
   8168a:	462b      	mov	r3, r5
   8168c:	f104 0234 	add.w	r2, r4, #52	; 0x34
   81690:	f105 0113 	add.w	r1, r5, #19
   81694:	7858      	ldrb	r0, [r3, #1]
   81696:	f802 0f01 	strb.w	r0, [r2, #1]!
   8169a:	f813 0f01 	ldrb.w	r0, [r3, #1]!
   8169e:	b108      	cbz	r0, 816a4 <xTaskCreate+0x68>
   816a0:	428b      	cmp	r3, r1
   816a2:	d1f7      	bne.n	81694 <xTaskCreate+0x58>
   816a4:	2700      	movs	r7, #0
   816a6:	f884 7047 	strb.w	r7, [r4, #71]	; 0x47
   816aa:	9d0c      	ldr	r5, [sp, #48]	; 0x30
   816ac:	2d04      	cmp	r5, #4
   816ae:	bf28      	it	cs
   816b0:	2504      	movcs	r5, #4
   816b2:	62e5      	str	r5, [r4, #44]	; 0x2c
   816b4:	6525      	str	r5, [r4, #80]	; 0x50
   816b6:	6567      	str	r7, [r4, #84]	; 0x54
   816b8:	f104 0804 	add.w	r8, r4, #4
   816bc:	4640      	mov	r0, r8
   816be:	f8df 916c 	ldr.w	r9, [pc, #364]	; 8182c <xTaskCreate+0x1f0>
   816c2:	47c8      	blx	r9
   816c4:	f104 0018 	add.w	r0, r4, #24
   816c8:	47c8      	blx	r9
   816ca:	6124      	str	r4, [r4, #16]
   816cc:	f1c5 0505 	rsb	r5, r5, #5
   816d0:	61a5      	str	r5, [r4, #24]
   816d2:	6264      	str	r4, [r4, #36]	; 0x24
   816d4:	65a7      	str	r7, [r4, #88]	; 0x58
   816d6:	f884 705c 	strb.w	r7, [r4, #92]	; 0x5c
   816da:	9a01      	ldr	r2, [sp, #4]
   816dc:	4659      	mov	r1, fp
   816de:	4630      	mov	r0, r6
   816e0:	4b3e      	ldr	r3, [pc, #248]	; (817dc <xTaskCreate+0x1a0>)
   816e2:	4798      	blx	r3
   816e4:	6020      	str	r0, [r4, #0]
   816e6:	f1ba 0f00 	cmp.w	sl, #0
   816ea:	d001      	beq.n	816f0 <xTaskCreate+0xb4>
   816ec:	f8ca 4000 	str.w	r4, [sl]
   816f0:	4b3b      	ldr	r3, [pc, #236]	; (817e0 <xTaskCreate+0x1a4>)
   816f2:	4798      	blx	r3
   816f4:	4a3b      	ldr	r2, [pc, #236]	; (817e4 <xTaskCreate+0x1a8>)
   816f6:	6813      	ldr	r3, [r2, #0]
   816f8:	3301      	adds	r3, #1
   816fa:	6013      	str	r3, [r2, #0]
   816fc:	4b3a      	ldr	r3, [pc, #232]	; (817e8 <xTaskCreate+0x1ac>)
   816fe:	681b      	ldr	r3, [r3, #0]
   81700:	2b00      	cmp	r3, #0
   81702:	d03a      	beq.n	8177a <xTaskCreate+0x13e>
   81704:	4b39      	ldr	r3, [pc, #228]	; (817ec <xTaskCreate+0x1b0>)
   81706:	681b      	ldr	r3, [r3, #0]
   81708:	b93b      	cbnz	r3, 8171a <xTaskCreate+0xde>
   8170a:	4b37      	ldr	r3, [pc, #220]	; (817e8 <xTaskCreate+0x1ac>)
   8170c:	681b      	ldr	r3, [r3, #0]
   8170e:	6ada      	ldr	r2, [r3, #44]	; 0x2c
   81710:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
   81712:	429a      	cmp	r2, r3
   81714:	bf9c      	itt	ls
   81716:	4b34      	ldrls	r3, [pc, #208]	; (817e8 <xTaskCreate+0x1ac>)
   81718:	601c      	strls	r4, [r3, #0]
   8171a:	4a35      	ldr	r2, [pc, #212]	; (817f0 <xTaskCreate+0x1b4>)
   8171c:	6813      	ldr	r3, [r2, #0]
   8171e:	3301      	adds	r3, #1
   81720:	6013      	str	r3, [r2, #0]
   81722:	64a3      	str	r3, [r4, #72]	; 0x48
   81724:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
   81726:	4a33      	ldr	r2, [pc, #204]	; (817f4 <xTaskCreate+0x1b8>)
   81728:	6811      	ldr	r1, [r2, #0]
   8172a:	2301      	movs	r3, #1
   8172c:	4083      	lsls	r3, r0
   8172e:	430b      	orrs	r3, r1
   81730:	6013      	str	r3, [r2, #0]
   81732:	eb00 0080 	add.w	r0, r0, r0, lsl #2
   81736:	4641      	mov	r1, r8
   81738:	4b2f      	ldr	r3, [pc, #188]	; (817f8 <xTaskCreate+0x1bc>)
   8173a:	eb03 0080 	add.w	r0, r3, r0, lsl #2
   8173e:	4b2f      	ldr	r3, [pc, #188]	; (817fc <xTaskCreate+0x1c0>)
   81740:	4798      	blx	r3
   81742:	4b2f      	ldr	r3, [pc, #188]	; (81800 <xTaskCreate+0x1c4>)
   81744:	4798      	blx	r3
   81746:	4b29      	ldr	r3, [pc, #164]	; (817ec <xTaskCreate+0x1b0>)
   81748:	681b      	ldr	r3, [r3, #0]
   8174a:	2b00      	cmp	r3, #0
   8174c:	d03b      	beq.n	817c6 <xTaskCreate+0x18a>
   8174e:	4b26      	ldr	r3, [pc, #152]	; (817e8 <xTaskCreate+0x1ac>)
   81750:	681b      	ldr	r3, [r3, #0]
   81752:	6ada      	ldr	r2, [r3, #44]	; 0x2c
   81754:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
   81756:	429a      	cmp	r2, r3
   81758:	d239      	bcs.n	817ce <xTaskCreate+0x192>
   8175a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
   8175e:	4b29      	ldr	r3, [pc, #164]	; (81804 <xTaskCreate+0x1c8>)
   81760:	601a      	str	r2, [r3, #0]
   81762:	f3bf 8f4f 	dsb	sy
   81766:	f3bf 8f6f 	isb	sy
   8176a:	2001      	movs	r0, #1
   8176c:	e02c      	b.n	817c8 <xTaskCreate+0x18c>
   8176e:	4638      	mov	r0, r7
   81770:	4b25      	ldr	r3, [pc, #148]	; (81808 <xTaskCreate+0x1cc>)
   81772:	4798      	blx	r3
   81774:	f04f 30ff 	mov.w	r0, #4294967295
   81778:	e026      	b.n	817c8 <xTaskCreate+0x18c>
   8177a:	4b1b      	ldr	r3, [pc, #108]	; (817e8 <xTaskCreate+0x1ac>)
   8177c:	601c      	str	r4, [r3, #0]
   8177e:	6813      	ldr	r3, [r2, #0]
   81780:	2b01      	cmp	r3, #1
   81782:	d1ca      	bne.n	8171a <xTaskCreate+0xde>
   81784:	4e1c      	ldr	r6, [pc, #112]	; (817f8 <xTaskCreate+0x1bc>)
   81786:	4630      	mov	r0, r6
   81788:	4d20      	ldr	r5, [pc, #128]	; (8180c <xTaskCreate+0x1d0>)
   8178a:	47a8      	blx	r5
   8178c:	f106 0014 	add.w	r0, r6, #20
   81790:	47a8      	blx	r5
   81792:	f106 0028 	add.w	r0, r6, #40	; 0x28
   81796:	47a8      	blx	r5
   81798:	f106 003c 	add.w	r0, r6, #60	; 0x3c
   8179c:	47a8      	blx	r5
   8179e:	f106 0050 	add.w	r0, r6, #80	; 0x50
   817a2:	47a8      	blx	r5
   817a4:	4f1a      	ldr	r7, [pc, #104]	; (81810 <xTaskCreate+0x1d4>)
   817a6:	4638      	mov	r0, r7
   817a8:	47a8      	blx	r5
   817aa:	4e1a      	ldr	r6, [pc, #104]	; (81814 <xTaskCreate+0x1d8>)
   817ac:	4630      	mov	r0, r6
   817ae:	47a8      	blx	r5
   817b0:	4819      	ldr	r0, [pc, #100]	; (81818 <xTaskCreate+0x1dc>)
   817b2:	47a8      	blx	r5
   817b4:	4819      	ldr	r0, [pc, #100]	; (8181c <xTaskCreate+0x1e0>)
   817b6:	47a8      	blx	r5
   817b8:	4819      	ldr	r0, [pc, #100]	; (81820 <xTaskCreate+0x1e4>)
   817ba:	47a8      	blx	r5
   817bc:	4b19      	ldr	r3, [pc, #100]	; (81824 <xTaskCreate+0x1e8>)
   817be:	601f      	str	r7, [r3, #0]
   817c0:	4b19      	ldr	r3, [pc, #100]	; (81828 <xTaskCreate+0x1ec>)
   817c2:	601e      	str	r6, [r3, #0]
   817c4:	e7a9      	b.n	8171a <xTaskCreate+0xde>
   817c6:	2001      	movs	r0, #1
   817c8:	b003      	add	sp, #12
   817ca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   817ce:	2001      	movs	r0, #1
   817d0:	e7fa      	b.n	817c8 <xTaskCreate+0x18c>
   817d2:	bf00      	nop
   817d4:	00080b6d 	.word	0x00080b6d
   817d8:	00082cd5 	.word	0x00082cd5
   817dc:	000808d5 	.word	0x000808d5
   817e0:	00080929 	.word	0x00080929
   817e4:	2007c220 	.word	0x2007c220
   817e8:	2007c1b0 	.word	0x2007c1b0
   817ec:	2007c280 	.word	0x2007c280
   817f0:	2007c230 	.word	0x2007c230
   817f4:	2007c234 	.word	0x2007c234
   817f8:	2007c1bc 	.word	0x2007c1bc
   817fc:	00080801 	.word	0x00080801
   81800:	0008096d 	.word	0x0008096d
   81804:	e000ed04 	.word	0xe000ed04
   81808:	00080bd5 	.word	0x00080bd5
   8180c:	000807e5 	.word	0x000807e5
   81810:	2007c238 	.word	0x2007c238
   81814:	2007c24c 	.word	0x2007c24c
   81818:	2007c26c 	.word	0x2007c26c
   8181c:	2007c298 	.word	0x2007c298
   81820:	2007c284 	.word	0x2007c284
   81824:	2007c1b4 	.word	0x2007c1b4
   81828:	2007c1b8 	.word	0x2007c1b8
   8182c:	000807fb 	.word	0x000807fb

00081830 <vTaskStartScheduler>:
   81830:	b510      	push	{r4, lr}
   81832:	b082      	sub	sp, #8
   81834:	4b18      	ldr	r3, [pc, #96]	; (81898 <vTaskStartScheduler+0x68>)
   81836:	9301      	str	r3, [sp, #4]
   81838:	2300      	movs	r3, #0
   8183a:	9300      	str	r3, [sp, #0]
   8183c:	2282      	movs	r2, #130	; 0x82
   8183e:	4917      	ldr	r1, [pc, #92]	; (8189c <vTaskStartScheduler+0x6c>)
   81840:	4817      	ldr	r0, [pc, #92]	; (818a0 <vTaskStartScheduler+0x70>)
   81842:	4c18      	ldr	r4, [pc, #96]	; (818a4 <vTaskStartScheduler+0x74>)
   81844:	47a0      	blx	r4
   81846:	2801      	cmp	r0, #1
   81848:	d004      	beq.n	81854 <vTaskStartScheduler+0x24>
   8184a:	f1b0 3fff 	cmp.w	r0, #4294967295
   8184e:	d01a      	beq.n	81886 <vTaskStartScheduler+0x56>
   81850:	b002      	add	sp, #8
   81852:	bd10      	pop	{r4, pc}
   81854:	4b14      	ldr	r3, [pc, #80]	; (818a8 <vTaskStartScheduler+0x78>)
   81856:	4798      	blx	r3
   81858:	2801      	cmp	r0, #1
   8185a:	d1f6      	bne.n	8184a <vTaskStartScheduler+0x1a>
   8185c:	f04f 0340 	mov.w	r3, #64	; 0x40
   81860:	f383 8811 	msr	BASEPRI, r3
   81864:	f3bf 8f6f 	isb	sy
   81868:	f3bf 8f4f 	dsb	sy
   8186c:	f04f 32ff 	mov.w	r2, #4294967295
   81870:	4b0e      	ldr	r3, [pc, #56]	; (818ac <vTaskStartScheduler+0x7c>)
   81872:	601a      	str	r2, [r3, #0]
   81874:	2201      	movs	r2, #1
   81876:	4b0e      	ldr	r3, [pc, #56]	; (818b0 <vTaskStartScheduler+0x80>)
   81878:	601a      	str	r2, [r3, #0]
   8187a:	2200      	movs	r2, #0
   8187c:	4b0d      	ldr	r3, [pc, #52]	; (818b4 <vTaskStartScheduler+0x84>)
   8187e:	601a      	str	r2, [r3, #0]
   81880:	4b0d      	ldr	r3, [pc, #52]	; (818b8 <vTaskStartScheduler+0x88>)
   81882:	4798      	blx	r3
   81884:	e7e4      	b.n	81850 <vTaskStartScheduler+0x20>
   81886:	f04f 0340 	mov.w	r3, #64	; 0x40
   8188a:	f383 8811 	msr	BASEPRI, r3
   8188e:	f3bf 8f6f 	isb	sy
   81892:	f3bf 8f4f 	dsb	sy
   81896:	e7fe      	b.n	81896 <vTaskStartScheduler+0x66>
   81898:	2007c260 	.word	0x2007c260
   8189c:	00083d68 	.word	0x00083d68
   818a0:	00081519 	.word	0x00081519
   818a4:	0008163d 	.word	0x0008163d
   818a8:	00082159 	.word	0x00082159
   818ac:	2007c264 	.word	0x2007c264
   818b0:	2007c280 	.word	0x2007c280
   818b4:	2007c2ac 	.word	0x2007c2ac
   818b8:	00080a41 	.word	0x00080a41

000818bc <vTaskSuspendAll>:
   818bc:	4a02      	ldr	r2, [pc, #8]	; (818c8 <vTaskSuspendAll+0xc>)
   818be:	6813      	ldr	r3, [r2, #0]
   818c0:	3301      	adds	r3, #1
   818c2:	6013      	str	r3, [r2, #0]
   818c4:	4770      	bx	lr
   818c6:	bf00      	nop
   818c8:	2007c22c 	.word	0x2007c22c

000818cc <xTaskGetTickCount>:
   818cc:	4b01      	ldr	r3, [pc, #4]	; (818d4 <xTaskGetTickCount+0x8>)
   818ce:	6818      	ldr	r0, [r3, #0]
   818d0:	4770      	bx	lr
   818d2:	bf00      	nop
   818d4:	2007c2ac 	.word	0x2007c2ac

000818d8 <xTaskIncrementTick>:
   818d8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   818dc:	4b3d      	ldr	r3, [pc, #244]	; (819d4 <xTaskIncrementTick+0xfc>)
   818de:	681b      	ldr	r3, [r3, #0]
   818e0:	2b00      	cmp	r3, #0
   818e2:	d169      	bne.n	819b8 <xTaskIncrementTick+0xe0>
   818e4:	4b3c      	ldr	r3, [pc, #240]	; (819d8 <xTaskIncrementTick+0x100>)
   818e6:	681d      	ldr	r5, [r3, #0]
   818e8:	3501      	adds	r5, #1
   818ea:	601d      	str	r5, [r3, #0]
   818ec:	b9c5      	cbnz	r5, 81920 <xTaskIncrementTick+0x48>
   818ee:	4b3b      	ldr	r3, [pc, #236]	; (819dc <xTaskIncrementTick+0x104>)
   818f0:	681b      	ldr	r3, [r3, #0]
   818f2:	681b      	ldr	r3, [r3, #0]
   818f4:	b143      	cbz	r3, 81908 <xTaskIncrementTick+0x30>
   818f6:	f04f 0340 	mov.w	r3, #64	; 0x40
   818fa:	f383 8811 	msr	BASEPRI, r3
   818fe:	f3bf 8f6f 	isb	sy
   81902:	f3bf 8f4f 	dsb	sy
   81906:	e7fe      	b.n	81906 <xTaskIncrementTick+0x2e>
   81908:	4a34      	ldr	r2, [pc, #208]	; (819dc <xTaskIncrementTick+0x104>)
   8190a:	6811      	ldr	r1, [r2, #0]
   8190c:	4b34      	ldr	r3, [pc, #208]	; (819e0 <xTaskIncrementTick+0x108>)
   8190e:	6818      	ldr	r0, [r3, #0]
   81910:	6010      	str	r0, [r2, #0]
   81912:	6019      	str	r1, [r3, #0]
   81914:	4a33      	ldr	r2, [pc, #204]	; (819e4 <xTaskIncrementTick+0x10c>)
   81916:	6813      	ldr	r3, [r2, #0]
   81918:	3301      	adds	r3, #1
   8191a:	6013      	str	r3, [r2, #0]
   8191c:	4b32      	ldr	r3, [pc, #200]	; (819e8 <xTaskIncrementTick+0x110>)
   8191e:	4798      	blx	r3
   81920:	4b32      	ldr	r3, [pc, #200]	; (819ec <xTaskIncrementTick+0x114>)
   81922:	681b      	ldr	r3, [r3, #0]
   81924:	429d      	cmp	r5, r3
   81926:	d20c      	bcs.n	81942 <xTaskIncrementTick+0x6a>
   81928:	2400      	movs	r4, #0
   8192a:	4b31      	ldr	r3, [pc, #196]	; (819f0 <xTaskIncrementTick+0x118>)
   8192c:	681b      	ldr	r3, [r3, #0]
   8192e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
   81930:	eb03 0383 	add.w	r3, r3, r3, lsl #2
   81934:	009b      	lsls	r3, r3, #2
   81936:	4a2f      	ldr	r2, [pc, #188]	; (819f4 <xTaskIncrementTick+0x11c>)
   81938:	58d3      	ldr	r3, [r2, r3]
   8193a:	2b02      	cmp	r3, #2
   8193c:	bf28      	it	cs
   8193e:	2401      	movcs	r4, #1
   81940:	e03f      	b.n	819c2 <xTaskIncrementTick+0xea>
   81942:	2400      	movs	r4, #0
   81944:	f8df 9094 	ldr.w	r9, [pc, #148]	; 819dc <xTaskIncrementTick+0x104>
   81948:	f8df 80bc 	ldr.w	r8, [pc, #188]	; 81a08 <xTaskIncrementTick+0x130>
   8194c:	4f2a      	ldr	r7, [pc, #168]	; (819f8 <xTaskIncrementTick+0x120>)
   8194e:	e01f      	b.n	81990 <xTaskIncrementTick+0xb8>
   81950:	f04f 32ff 	mov.w	r2, #4294967295
   81954:	4b25      	ldr	r3, [pc, #148]	; (819ec <xTaskIncrementTick+0x114>)
   81956:	601a      	str	r2, [r3, #0]
   81958:	e7e7      	b.n	8192a <xTaskIncrementTick+0x52>
   8195a:	4a24      	ldr	r2, [pc, #144]	; (819ec <xTaskIncrementTick+0x114>)
   8195c:	6013      	str	r3, [r2, #0]
   8195e:	e7e4      	b.n	8192a <xTaskIncrementTick+0x52>
   81960:	f106 0018 	add.w	r0, r6, #24
   81964:	47c0      	blx	r8
   81966:	6af0      	ldr	r0, [r6, #44]	; 0x2c
   81968:	683a      	ldr	r2, [r7, #0]
   8196a:	2301      	movs	r3, #1
   8196c:	4083      	lsls	r3, r0
   8196e:	4313      	orrs	r3, r2
   81970:	603b      	str	r3, [r7, #0]
   81972:	eb00 0080 	add.w	r0, r0, r0, lsl #2
   81976:	4651      	mov	r1, sl
   81978:	4b1e      	ldr	r3, [pc, #120]	; (819f4 <xTaskIncrementTick+0x11c>)
   8197a:	eb03 0080 	add.w	r0, r3, r0, lsl #2
   8197e:	4b1f      	ldr	r3, [pc, #124]	; (819fc <xTaskIncrementTick+0x124>)
   81980:	4798      	blx	r3
   81982:	4b1b      	ldr	r3, [pc, #108]	; (819f0 <xTaskIncrementTick+0x118>)
   81984:	681b      	ldr	r3, [r3, #0]
   81986:	6af2      	ldr	r2, [r6, #44]	; 0x2c
   81988:	6adb      	ldr	r3, [r3, #44]	; 0x2c
   8198a:	429a      	cmp	r2, r3
   8198c:	bf28      	it	cs
   8198e:	2401      	movcs	r4, #1
   81990:	f8d9 3000 	ldr.w	r3, [r9]
   81994:	681b      	ldr	r3, [r3, #0]
   81996:	2b00      	cmp	r3, #0
   81998:	d0da      	beq.n	81950 <xTaskIncrementTick+0x78>
   8199a:	f8d9 3000 	ldr.w	r3, [r9]
   8199e:	68db      	ldr	r3, [r3, #12]
   819a0:	68de      	ldr	r6, [r3, #12]
   819a2:	6873      	ldr	r3, [r6, #4]
   819a4:	429d      	cmp	r5, r3
   819a6:	d3d8      	bcc.n	8195a <xTaskIncrementTick+0x82>
   819a8:	f106 0a04 	add.w	sl, r6, #4
   819ac:	4650      	mov	r0, sl
   819ae:	47c0      	blx	r8
   819b0:	6ab3      	ldr	r3, [r6, #40]	; 0x28
   819b2:	2b00      	cmp	r3, #0
   819b4:	d1d4      	bne.n	81960 <xTaskIncrementTick+0x88>
   819b6:	e7d6      	b.n	81966 <xTaskIncrementTick+0x8e>
   819b8:	4a11      	ldr	r2, [pc, #68]	; (81a00 <xTaskIncrementTick+0x128>)
   819ba:	6813      	ldr	r3, [r2, #0]
   819bc:	3301      	adds	r3, #1
   819be:	6013      	str	r3, [r2, #0]
   819c0:	2400      	movs	r4, #0
   819c2:	4b10      	ldr	r3, [pc, #64]	; (81a04 <xTaskIncrementTick+0x12c>)
   819c4:	681b      	ldr	r3, [r3, #0]
   819c6:	2b00      	cmp	r3, #0
   819c8:	bf0c      	ite	eq
   819ca:	4620      	moveq	r0, r4
   819cc:	2001      	movne	r0, #1
   819ce:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   819d2:	bf00      	nop
   819d4:	2007c22c 	.word	0x2007c22c
   819d8:	2007c2ac 	.word	0x2007c2ac
   819dc:	2007c1b4 	.word	0x2007c1b4
   819e0:	2007c1b8 	.word	0x2007c1b8
   819e4:	2007c268 	.word	0x2007c268
   819e8:	000814ed 	.word	0x000814ed
   819ec:	2007c264 	.word	0x2007c264
   819f0:	2007c1b0 	.word	0x2007c1b0
   819f4:	2007c1bc 	.word	0x2007c1bc
   819f8:	2007c234 	.word	0x2007c234
   819fc:	00080801 	.word	0x00080801
   81a00:	2007c228 	.word	0x2007c228
   81a04:	2007c2b0 	.word	0x2007c2b0
   81a08:	0008084d 	.word	0x0008084d

00081a0c <xTaskResumeAll>:
   81a0c:	4b35      	ldr	r3, [pc, #212]	; (81ae4 <xTaskResumeAll+0xd8>)
   81a0e:	681b      	ldr	r3, [r3, #0]
   81a10:	b943      	cbnz	r3, 81a24 <xTaskResumeAll+0x18>
   81a12:	f04f 0340 	mov.w	r3, #64	; 0x40
   81a16:	f383 8811 	msr	BASEPRI, r3
   81a1a:	f3bf 8f6f 	isb	sy
   81a1e:	f3bf 8f4f 	dsb	sy
   81a22:	e7fe      	b.n	81a22 <xTaskResumeAll+0x16>
   81a24:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   81a28:	4b2f      	ldr	r3, [pc, #188]	; (81ae8 <xTaskResumeAll+0xdc>)
   81a2a:	4798      	blx	r3
   81a2c:	4b2d      	ldr	r3, [pc, #180]	; (81ae4 <xTaskResumeAll+0xd8>)
   81a2e:	681a      	ldr	r2, [r3, #0]
   81a30:	3a01      	subs	r2, #1
   81a32:	601a      	str	r2, [r3, #0]
   81a34:	681b      	ldr	r3, [r3, #0]
   81a36:	2b00      	cmp	r3, #0
   81a38:	d150      	bne.n	81adc <xTaskResumeAll+0xd0>
   81a3a:	4b2c      	ldr	r3, [pc, #176]	; (81aec <xTaskResumeAll+0xe0>)
   81a3c:	681b      	ldr	r3, [r3, #0]
   81a3e:	b92b      	cbnz	r3, 81a4c <xTaskResumeAll+0x40>
   81a40:	2400      	movs	r4, #0
   81a42:	4b2b      	ldr	r3, [pc, #172]	; (81af0 <xTaskResumeAll+0xe4>)
   81a44:	4798      	blx	r3
   81a46:	4620      	mov	r0, r4
   81a48:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   81a4c:	2400      	movs	r4, #0
   81a4e:	4f29      	ldr	r7, [pc, #164]	; (81af4 <xTaskResumeAll+0xe8>)
   81a50:	4e29      	ldr	r6, [pc, #164]	; (81af8 <xTaskResumeAll+0xec>)
   81a52:	4d2a      	ldr	r5, [pc, #168]	; (81afc <xTaskResumeAll+0xf0>)
   81a54:	683b      	ldr	r3, [r7, #0]
   81a56:	b303      	cbz	r3, 81a9a <xTaskResumeAll+0x8e>
   81a58:	68fb      	ldr	r3, [r7, #12]
   81a5a:	68dc      	ldr	r4, [r3, #12]
   81a5c:	f104 0018 	add.w	r0, r4, #24
   81a60:	47b0      	blx	r6
   81a62:	f104 0804 	add.w	r8, r4, #4
   81a66:	4640      	mov	r0, r8
   81a68:	47b0      	blx	r6
   81a6a:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
   81a6c:	682a      	ldr	r2, [r5, #0]
   81a6e:	2301      	movs	r3, #1
   81a70:	4083      	lsls	r3, r0
   81a72:	4313      	orrs	r3, r2
   81a74:	602b      	str	r3, [r5, #0]
   81a76:	eb00 0080 	add.w	r0, r0, r0, lsl #2
   81a7a:	4641      	mov	r1, r8
   81a7c:	4b20      	ldr	r3, [pc, #128]	; (81b00 <xTaskResumeAll+0xf4>)
   81a7e:	eb03 0080 	add.w	r0, r3, r0, lsl #2
   81a82:	4b20      	ldr	r3, [pc, #128]	; (81b04 <xTaskResumeAll+0xf8>)
   81a84:	4798      	blx	r3
   81a86:	4b20      	ldr	r3, [pc, #128]	; (81b08 <xTaskResumeAll+0xfc>)
   81a88:	681b      	ldr	r3, [r3, #0]
   81a8a:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
   81a8c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
   81a8e:	429a      	cmp	r2, r3
   81a90:	d3e0      	bcc.n	81a54 <xTaskResumeAll+0x48>
   81a92:	2201      	movs	r2, #1
   81a94:	4b1d      	ldr	r3, [pc, #116]	; (81b0c <xTaskResumeAll+0x100>)
   81a96:	601a      	str	r2, [r3, #0]
   81a98:	e7dc      	b.n	81a54 <xTaskResumeAll+0x48>
   81a9a:	b10c      	cbz	r4, 81aa0 <xTaskResumeAll+0x94>
   81a9c:	4b1c      	ldr	r3, [pc, #112]	; (81b10 <xTaskResumeAll+0x104>)
   81a9e:	4798      	blx	r3
   81aa0:	4b1c      	ldr	r3, [pc, #112]	; (81b14 <xTaskResumeAll+0x108>)
   81aa2:	681c      	ldr	r4, [r3, #0]
   81aa4:	b16c      	cbz	r4, 81ac2 <xTaskResumeAll+0xb6>
   81aa6:	4f1c      	ldr	r7, [pc, #112]	; (81b18 <xTaskResumeAll+0x10c>)
   81aa8:	4e18      	ldr	r6, [pc, #96]	; (81b0c <xTaskResumeAll+0x100>)
   81aaa:	2501      	movs	r5, #1
   81aac:	e001      	b.n	81ab2 <xTaskResumeAll+0xa6>
   81aae:	3c01      	subs	r4, #1
   81ab0:	d004      	beq.n	81abc <xTaskResumeAll+0xb0>
   81ab2:	47b8      	blx	r7
   81ab4:	2800      	cmp	r0, #0
   81ab6:	d0fa      	beq.n	81aae <xTaskResumeAll+0xa2>
   81ab8:	6035      	str	r5, [r6, #0]
   81aba:	e7f8      	b.n	81aae <xTaskResumeAll+0xa2>
   81abc:	2200      	movs	r2, #0
   81abe:	4b15      	ldr	r3, [pc, #84]	; (81b14 <xTaskResumeAll+0x108>)
   81ac0:	601a      	str	r2, [r3, #0]
   81ac2:	4b12      	ldr	r3, [pc, #72]	; (81b0c <xTaskResumeAll+0x100>)
   81ac4:	681b      	ldr	r3, [r3, #0]
   81ac6:	b15b      	cbz	r3, 81ae0 <xTaskResumeAll+0xd4>
   81ac8:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
   81acc:	4b13      	ldr	r3, [pc, #76]	; (81b1c <xTaskResumeAll+0x110>)
   81ace:	601a      	str	r2, [r3, #0]
   81ad0:	f3bf 8f4f 	dsb	sy
   81ad4:	f3bf 8f6f 	isb	sy
   81ad8:	2401      	movs	r4, #1
   81ada:	e7b2      	b.n	81a42 <xTaskResumeAll+0x36>
   81adc:	2400      	movs	r4, #0
   81ade:	e7b0      	b.n	81a42 <xTaskResumeAll+0x36>
   81ae0:	2400      	movs	r4, #0
   81ae2:	e7ae      	b.n	81a42 <xTaskResumeAll+0x36>
   81ae4:	2007c22c 	.word	0x2007c22c
   81ae8:	00080929 	.word	0x00080929
   81aec:	2007c220 	.word	0x2007c220
   81af0:	0008096d 	.word	0x0008096d
   81af4:	2007c26c 	.word	0x2007c26c
   81af8:	0008084d 	.word	0x0008084d
   81afc:	2007c234 	.word	0x2007c234
   81b00:	2007c1bc 	.word	0x2007c1bc
   81b04:	00080801 	.word	0x00080801
   81b08:	2007c1b0 	.word	0x2007c1b0
   81b0c:	2007c2b0 	.word	0x2007c2b0
   81b10:	000814ed 	.word	0x000814ed
   81b14:	2007c228 	.word	0x2007c228
   81b18:	000818d9 	.word	0x000818d9
   81b1c:	e000ed04 	.word	0xe000ed04

00081b20 <vTaskDelayUntil>:
   81b20:	b538      	push	{r3, r4, r5, lr}
   81b22:	b150      	cbz	r0, 81b3a <vTaskDelayUntil+0x1a>
   81b24:	4605      	mov	r5, r0
   81b26:	b989      	cbnz	r1, 81b4c <vTaskDelayUntil+0x2c>
   81b28:	f04f 0340 	mov.w	r3, #64	; 0x40
   81b2c:	f383 8811 	msr	BASEPRI, r3
   81b30:	f3bf 8f6f 	isb	sy
   81b34:	f3bf 8f4f 	dsb	sy
   81b38:	e7fe      	b.n	81b38 <vTaskDelayUntil+0x18>
   81b3a:	f04f 0340 	mov.w	r3, #64	; 0x40
   81b3e:	f383 8811 	msr	BASEPRI, r3
   81b42:	f3bf 8f6f 	isb	sy
   81b46:	f3bf 8f4f 	dsb	sy
   81b4a:	e7fe      	b.n	81b4a <vTaskDelayUntil+0x2a>
   81b4c:	4b19      	ldr	r3, [pc, #100]	; (81bb4 <vTaskDelayUntil+0x94>)
   81b4e:	681b      	ldr	r3, [r3, #0]
   81b50:	b143      	cbz	r3, 81b64 <vTaskDelayUntil+0x44>
   81b52:	f04f 0340 	mov.w	r3, #64	; 0x40
   81b56:	f383 8811 	msr	BASEPRI, r3
   81b5a:	f3bf 8f6f 	isb	sy
   81b5e:	f3bf 8f4f 	dsb	sy
   81b62:	e7fe      	b.n	81b62 <vTaskDelayUntil+0x42>
   81b64:	460c      	mov	r4, r1
   81b66:	4b14      	ldr	r3, [pc, #80]	; (81bb8 <vTaskDelayUntil+0x98>)
   81b68:	4798      	blx	r3
   81b6a:	4b14      	ldr	r3, [pc, #80]	; (81bbc <vTaskDelayUntil+0x9c>)
   81b6c:	6818      	ldr	r0, [r3, #0]
   81b6e:	682a      	ldr	r2, [r5, #0]
   81b70:	4414      	add	r4, r2
   81b72:	4290      	cmp	r0, r2
   81b74:	d214      	bcs.n	81ba0 <vTaskDelayUntil+0x80>
   81b76:	42a2      	cmp	r2, r4
   81b78:	d916      	bls.n	81ba8 <vTaskDelayUntil+0x88>
   81b7a:	602c      	str	r4, [r5, #0]
   81b7c:	42a0      	cmp	r0, r4
   81b7e:	d203      	bcs.n	81b88 <vTaskDelayUntil+0x68>
   81b80:	2100      	movs	r1, #0
   81b82:	1a20      	subs	r0, r4, r0
   81b84:	4b0e      	ldr	r3, [pc, #56]	; (81bc0 <vTaskDelayUntil+0xa0>)
   81b86:	4798      	blx	r3
   81b88:	4b0e      	ldr	r3, [pc, #56]	; (81bc4 <vTaskDelayUntil+0xa4>)
   81b8a:	4798      	blx	r3
   81b8c:	b980      	cbnz	r0, 81bb0 <vTaskDelayUntil+0x90>
   81b8e:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
   81b92:	4b0d      	ldr	r3, [pc, #52]	; (81bc8 <vTaskDelayUntil+0xa8>)
   81b94:	601a      	str	r2, [r3, #0]
   81b96:	f3bf 8f4f 	dsb	sy
   81b9a:	f3bf 8f6f 	isb	sy
   81b9e:	bd38      	pop	{r3, r4, r5, pc}
   81ba0:	42a2      	cmp	r2, r4
   81ba2:	d803      	bhi.n	81bac <vTaskDelayUntil+0x8c>
   81ba4:	42a0      	cmp	r0, r4
   81ba6:	d301      	bcc.n	81bac <vTaskDelayUntil+0x8c>
   81ba8:	602c      	str	r4, [r5, #0]
   81baa:	e7ed      	b.n	81b88 <vTaskDelayUntil+0x68>
   81bac:	602c      	str	r4, [r5, #0]
   81bae:	e7e7      	b.n	81b80 <vTaskDelayUntil+0x60>
   81bb0:	bd38      	pop	{r3, r4, r5, pc}
   81bb2:	bf00      	nop
   81bb4:	2007c22c 	.word	0x2007c22c
   81bb8:	000818bd 	.word	0x000818bd
   81bbc:	2007c2ac 	.word	0x2007c2ac
   81bc0:	00081599 	.word	0x00081599
   81bc4:	00081a0d 	.word	0x00081a0d
   81bc8:	e000ed04 	.word	0xe000ed04

00081bcc <vTaskSwitchContext>:
   81bcc:	4b1f      	ldr	r3, [pc, #124]	; (81c4c <vTaskSwitchContext+0x80>)
   81bce:	681b      	ldr	r3, [r3, #0]
   81bd0:	b9c3      	cbnz	r3, 81c04 <vTaskSwitchContext+0x38>
   81bd2:	2200      	movs	r2, #0
   81bd4:	4b1e      	ldr	r3, [pc, #120]	; (81c50 <vTaskSwitchContext+0x84>)
   81bd6:	601a      	str	r2, [r3, #0]
   81bd8:	4b1e      	ldr	r3, [pc, #120]	; (81c54 <vTaskSwitchContext+0x88>)
   81bda:	681b      	ldr	r3, [r3, #0]
   81bdc:	fab3 f383 	clz	r3, r3
   81be0:	b2db      	uxtb	r3, r3
   81be2:	f1c3 031f 	rsb	r3, r3, #31
   81be6:	eb03 0283 	add.w	r2, r3, r3, lsl #2
   81bea:	0092      	lsls	r2, r2, #2
   81bec:	491a      	ldr	r1, [pc, #104]	; (81c58 <vTaskSwitchContext+0x8c>)
   81bee:	588a      	ldr	r2, [r1, r2]
   81bf0:	b962      	cbnz	r2, 81c0c <vTaskSwitchContext+0x40>
   81bf2:	f04f 0340 	mov.w	r3, #64	; 0x40
   81bf6:	f383 8811 	msr	BASEPRI, r3
   81bfa:	f3bf 8f6f 	isb	sy
   81bfe:	f3bf 8f4f 	dsb	sy
   81c02:	e7fe      	b.n	81c02 <vTaskSwitchContext+0x36>
   81c04:	2201      	movs	r2, #1
   81c06:	4b12      	ldr	r3, [pc, #72]	; (81c50 <vTaskSwitchContext+0x84>)
   81c08:	601a      	str	r2, [r3, #0]
   81c0a:	4770      	bx	lr
   81c0c:	b410      	push	{r4}
   81c0e:	4a12      	ldr	r2, [pc, #72]	; (81c58 <vTaskSwitchContext+0x8c>)
   81c10:	0099      	lsls	r1, r3, #2
   81c12:	18c8      	adds	r0, r1, r3
   81c14:	eb02 0080 	add.w	r0, r2, r0, lsl #2
   81c18:	6844      	ldr	r4, [r0, #4]
   81c1a:	6864      	ldr	r4, [r4, #4]
   81c1c:	6044      	str	r4, [r0, #4]
   81c1e:	4419      	add	r1, r3
   81c20:	4602      	mov	r2, r0
   81c22:	3208      	adds	r2, #8
   81c24:	4294      	cmp	r4, r2
   81c26:	d00a      	beq.n	81c3e <vTaskSwitchContext+0x72>
   81c28:	eb03 0383 	add.w	r3, r3, r3, lsl #2
   81c2c:	4a0a      	ldr	r2, [pc, #40]	; (81c58 <vTaskSwitchContext+0x8c>)
   81c2e:	eb02 0383 	add.w	r3, r2, r3, lsl #2
   81c32:	685b      	ldr	r3, [r3, #4]
   81c34:	68da      	ldr	r2, [r3, #12]
   81c36:	4b09      	ldr	r3, [pc, #36]	; (81c5c <vTaskSwitchContext+0x90>)
   81c38:	601a      	str	r2, [r3, #0]
   81c3a:	bc10      	pop	{r4}
   81c3c:	4770      	bx	lr
   81c3e:	6860      	ldr	r0, [r4, #4]
   81c40:	4a05      	ldr	r2, [pc, #20]	; (81c58 <vTaskSwitchContext+0x8c>)
   81c42:	eb02 0281 	add.w	r2, r2, r1, lsl #2
   81c46:	6050      	str	r0, [r2, #4]
   81c48:	e7ee      	b.n	81c28 <vTaskSwitchContext+0x5c>
   81c4a:	bf00      	nop
   81c4c:	2007c22c 	.word	0x2007c22c
   81c50:	2007c2b0 	.word	0x2007c2b0
   81c54:	2007c234 	.word	0x2007c234
   81c58:	2007c1bc 	.word	0x2007c1bc
   81c5c:	2007c1b0 	.word	0x2007c1b0

00081c60 <vTaskPlaceOnEventList>:
   81c60:	b940      	cbnz	r0, 81c74 <vTaskPlaceOnEventList+0x14>
   81c62:	f04f 0340 	mov.w	r3, #64	; 0x40
   81c66:	f383 8811 	msr	BASEPRI, r3
   81c6a:	f3bf 8f6f 	isb	sy
   81c6e:	f3bf 8f4f 	dsb	sy
   81c72:	e7fe      	b.n	81c72 <vTaskPlaceOnEventList+0x12>
   81c74:	b510      	push	{r4, lr}
   81c76:	460c      	mov	r4, r1
   81c78:	4b04      	ldr	r3, [pc, #16]	; (81c8c <vTaskPlaceOnEventList+0x2c>)
   81c7a:	6819      	ldr	r1, [r3, #0]
   81c7c:	3118      	adds	r1, #24
   81c7e:	4b04      	ldr	r3, [pc, #16]	; (81c90 <vTaskPlaceOnEventList+0x30>)
   81c80:	4798      	blx	r3
   81c82:	2101      	movs	r1, #1
   81c84:	4620      	mov	r0, r4
   81c86:	4b03      	ldr	r3, [pc, #12]	; (81c94 <vTaskPlaceOnEventList+0x34>)
   81c88:	4798      	blx	r3
   81c8a:	bd10      	pop	{r4, pc}
   81c8c:	2007c1b0 	.word	0x2007c1b0
   81c90:	00080819 	.word	0x00080819
   81c94:	00081599 	.word	0x00081599

00081c98 <vTaskPlaceOnEventListRestricted>:
   81c98:	b538      	push	{r3, r4, r5, lr}
   81c9a:	b178      	cbz	r0, 81cbc <vTaskPlaceOnEventListRestricted+0x24>
   81c9c:	4614      	mov	r4, r2
   81c9e:	460d      	mov	r5, r1
   81ca0:	4b0b      	ldr	r3, [pc, #44]	; (81cd0 <vTaskPlaceOnEventListRestricted+0x38>)
   81ca2:	6819      	ldr	r1, [r3, #0]
   81ca4:	3118      	adds	r1, #24
   81ca6:	4b0b      	ldr	r3, [pc, #44]	; (81cd4 <vTaskPlaceOnEventListRestricted+0x3c>)
   81ca8:	4798      	blx	r3
   81caa:	2c00      	cmp	r4, #0
   81cac:	4621      	mov	r1, r4
   81cae:	bf0c      	ite	eq
   81cb0:	4628      	moveq	r0, r5
   81cb2:	f04f 30ff 	movne.w	r0, #4294967295
   81cb6:	4b08      	ldr	r3, [pc, #32]	; (81cd8 <vTaskPlaceOnEventListRestricted+0x40>)
   81cb8:	4798      	blx	r3
   81cba:	bd38      	pop	{r3, r4, r5, pc}
   81cbc:	f04f 0340 	mov.w	r3, #64	; 0x40
   81cc0:	f383 8811 	msr	BASEPRI, r3
   81cc4:	f3bf 8f6f 	isb	sy
   81cc8:	f3bf 8f4f 	dsb	sy
   81ccc:	e7fe      	b.n	81ccc <vTaskPlaceOnEventListRestricted+0x34>
   81cce:	bf00      	nop
   81cd0:	2007c1b0 	.word	0x2007c1b0
   81cd4:	00080801 	.word	0x00080801
   81cd8:	00081599 	.word	0x00081599

00081cdc <xTaskRemoveFromEventList>:
   81cdc:	b538      	push	{r3, r4, r5, lr}
   81cde:	68c3      	ldr	r3, [r0, #12]
   81ce0:	68dc      	ldr	r4, [r3, #12]
   81ce2:	b32c      	cbz	r4, 81d30 <xTaskRemoveFromEventList+0x54>
   81ce4:	f104 0518 	add.w	r5, r4, #24
   81ce8:	4628      	mov	r0, r5
   81cea:	4b18      	ldr	r3, [pc, #96]	; (81d4c <xTaskRemoveFromEventList+0x70>)
   81cec:	4798      	blx	r3
   81cee:	4b18      	ldr	r3, [pc, #96]	; (81d50 <xTaskRemoveFromEventList+0x74>)
   81cf0:	681b      	ldr	r3, [r3, #0]
   81cf2:	bb33      	cbnz	r3, 81d42 <xTaskRemoveFromEventList+0x66>
   81cf4:	1d25      	adds	r5, r4, #4
   81cf6:	4628      	mov	r0, r5
   81cf8:	4b14      	ldr	r3, [pc, #80]	; (81d4c <xTaskRemoveFromEventList+0x70>)
   81cfa:	4798      	blx	r3
   81cfc:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
   81cfe:	4a15      	ldr	r2, [pc, #84]	; (81d54 <xTaskRemoveFromEventList+0x78>)
   81d00:	6811      	ldr	r1, [r2, #0]
   81d02:	2301      	movs	r3, #1
   81d04:	4083      	lsls	r3, r0
   81d06:	430b      	orrs	r3, r1
   81d08:	6013      	str	r3, [r2, #0]
   81d0a:	eb00 0080 	add.w	r0, r0, r0, lsl #2
   81d0e:	4629      	mov	r1, r5
   81d10:	4b11      	ldr	r3, [pc, #68]	; (81d58 <xTaskRemoveFromEventList+0x7c>)
   81d12:	eb03 0080 	add.w	r0, r3, r0, lsl #2
   81d16:	4b11      	ldr	r3, [pc, #68]	; (81d5c <xTaskRemoveFromEventList+0x80>)
   81d18:	4798      	blx	r3
   81d1a:	4b11      	ldr	r3, [pc, #68]	; (81d60 <xTaskRemoveFromEventList+0x84>)
   81d1c:	681b      	ldr	r3, [r3, #0]
   81d1e:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
   81d20:	6adb      	ldr	r3, [r3, #44]	; 0x2c
   81d22:	429a      	cmp	r2, r3
   81d24:	bf83      	ittte	hi
   81d26:	2001      	movhi	r0, #1
   81d28:	4b0e      	ldrhi	r3, [pc, #56]	; (81d64 <xTaskRemoveFromEventList+0x88>)
   81d2a:	6018      	strhi	r0, [r3, #0]
   81d2c:	2000      	movls	r0, #0
   81d2e:	bd38      	pop	{r3, r4, r5, pc}
   81d30:	f04f 0340 	mov.w	r3, #64	; 0x40
   81d34:	f383 8811 	msr	BASEPRI, r3
   81d38:	f3bf 8f6f 	isb	sy
   81d3c:	f3bf 8f4f 	dsb	sy
   81d40:	e7fe      	b.n	81d40 <xTaskRemoveFromEventList+0x64>
   81d42:	4629      	mov	r1, r5
   81d44:	4808      	ldr	r0, [pc, #32]	; (81d68 <xTaskRemoveFromEventList+0x8c>)
   81d46:	4b05      	ldr	r3, [pc, #20]	; (81d5c <xTaskRemoveFromEventList+0x80>)
   81d48:	4798      	blx	r3
   81d4a:	e7e6      	b.n	81d1a <xTaskRemoveFromEventList+0x3e>
   81d4c:	0008084d 	.word	0x0008084d
   81d50:	2007c22c 	.word	0x2007c22c
   81d54:	2007c234 	.word	0x2007c234
   81d58:	2007c1bc 	.word	0x2007c1bc
   81d5c:	00080801 	.word	0x00080801
   81d60:	2007c1b0 	.word	0x2007c1b0
   81d64:	2007c2b0 	.word	0x2007c2b0
   81d68:	2007c26c 	.word	0x2007c26c

00081d6c <vTaskInternalSetTimeOutState>:
   81d6c:	4b03      	ldr	r3, [pc, #12]	; (81d7c <vTaskInternalSetTimeOutState+0x10>)
   81d6e:	681b      	ldr	r3, [r3, #0]
   81d70:	6003      	str	r3, [r0, #0]
   81d72:	4b03      	ldr	r3, [pc, #12]	; (81d80 <vTaskInternalSetTimeOutState+0x14>)
   81d74:	681b      	ldr	r3, [r3, #0]
   81d76:	6043      	str	r3, [r0, #4]
   81d78:	4770      	bx	lr
   81d7a:	bf00      	nop
   81d7c:	2007c268 	.word	0x2007c268
   81d80:	2007c2ac 	.word	0x2007c2ac

00081d84 <xTaskCheckForTimeOut>:
   81d84:	b1e8      	cbz	r0, 81dc2 <xTaskCheckForTimeOut+0x3e>
   81d86:	b570      	push	{r4, r5, r6, lr}
   81d88:	4605      	mov	r5, r0
   81d8a:	b319      	cbz	r1, 81dd4 <xTaskCheckForTimeOut+0x50>
   81d8c:	460c      	mov	r4, r1
   81d8e:	4b1b      	ldr	r3, [pc, #108]	; (81dfc <xTaskCheckForTimeOut+0x78>)
   81d90:	4798      	blx	r3
   81d92:	4b1b      	ldr	r3, [pc, #108]	; (81e00 <xTaskCheckForTimeOut+0x7c>)
   81d94:	681a      	ldr	r2, [r3, #0]
   81d96:	6869      	ldr	r1, [r5, #4]
   81d98:	6823      	ldr	r3, [r4, #0]
   81d9a:	f1b3 3fff 	cmp.w	r3, #4294967295
   81d9e:	d029      	beq.n	81df4 <xTaskCheckForTimeOut+0x70>
   81da0:	4818      	ldr	r0, [pc, #96]	; (81e04 <xTaskCheckForTimeOut+0x80>)
   81da2:	6800      	ldr	r0, [r0, #0]
   81da4:	682e      	ldr	r6, [r5, #0]
   81da6:	4286      	cmp	r6, r0
   81da8:	d001      	beq.n	81dae <xTaskCheckForTimeOut+0x2a>
   81daa:	428a      	cmp	r2, r1
   81dac:	d224      	bcs.n	81df8 <xTaskCheckForTimeOut+0x74>
   81dae:	1a52      	subs	r2, r2, r1
   81db0:	429a      	cmp	r2, r3
   81db2:	d318      	bcc.n	81de6 <xTaskCheckForTimeOut+0x62>
   81db4:	2300      	movs	r3, #0
   81db6:	6023      	str	r3, [r4, #0]
   81db8:	2401      	movs	r4, #1
   81dba:	4b13      	ldr	r3, [pc, #76]	; (81e08 <xTaskCheckForTimeOut+0x84>)
   81dbc:	4798      	blx	r3
   81dbe:	4620      	mov	r0, r4
   81dc0:	bd70      	pop	{r4, r5, r6, pc}
   81dc2:	f04f 0340 	mov.w	r3, #64	; 0x40
   81dc6:	f383 8811 	msr	BASEPRI, r3
   81dca:	f3bf 8f6f 	isb	sy
   81dce:	f3bf 8f4f 	dsb	sy
   81dd2:	e7fe      	b.n	81dd2 <xTaskCheckForTimeOut+0x4e>
   81dd4:	f04f 0340 	mov.w	r3, #64	; 0x40
   81dd8:	f383 8811 	msr	BASEPRI, r3
   81ddc:	f3bf 8f6f 	isb	sy
   81de0:	f3bf 8f4f 	dsb	sy
   81de4:	e7fe      	b.n	81de4 <xTaskCheckForTimeOut+0x60>
   81de6:	1a9b      	subs	r3, r3, r2
   81de8:	6023      	str	r3, [r4, #0]
   81dea:	4628      	mov	r0, r5
   81dec:	4b07      	ldr	r3, [pc, #28]	; (81e0c <xTaskCheckForTimeOut+0x88>)
   81dee:	4798      	blx	r3
   81df0:	2400      	movs	r4, #0
   81df2:	e7e2      	b.n	81dba <xTaskCheckForTimeOut+0x36>
   81df4:	2400      	movs	r4, #0
   81df6:	e7e0      	b.n	81dba <xTaskCheckForTimeOut+0x36>
   81df8:	2401      	movs	r4, #1
   81dfa:	e7de      	b.n	81dba <xTaskCheckForTimeOut+0x36>
   81dfc:	00080929 	.word	0x00080929
   81e00:	2007c2ac 	.word	0x2007c2ac
   81e04:	2007c268 	.word	0x2007c268
   81e08:	0008096d 	.word	0x0008096d
   81e0c:	00081d6d 	.word	0x00081d6d

00081e10 <vTaskMissedYield>:
   81e10:	2201      	movs	r2, #1
   81e12:	4b01      	ldr	r3, [pc, #4]	; (81e18 <vTaskMissedYield+0x8>)
   81e14:	601a      	str	r2, [r3, #0]
   81e16:	4770      	bx	lr
   81e18:	2007c2b0 	.word	0x2007c2b0

00081e1c <xTaskGetSchedulerState>:
   81e1c:	4b05      	ldr	r3, [pc, #20]	; (81e34 <xTaskGetSchedulerState+0x18>)
   81e1e:	681b      	ldr	r3, [r3, #0]
   81e20:	b133      	cbz	r3, 81e30 <xTaskGetSchedulerState+0x14>
   81e22:	4b05      	ldr	r3, [pc, #20]	; (81e38 <xTaskGetSchedulerState+0x1c>)
   81e24:	681b      	ldr	r3, [r3, #0]
   81e26:	2b00      	cmp	r3, #0
   81e28:	bf0c      	ite	eq
   81e2a:	2002      	moveq	r0, #2
   81e2c:	2000      	movne	r0, #0
   81e2e:	4770      	bx	lr
   81e30:	2001      	movs	r0, #1
   81e32:	4770      	bx	lr
   81e34:	2007c280 	.word	0x2007c280
   81e38:	2007c22c 	.word	0x2007c22c

00081e3c <xTaskPriorityInherit>:
   81e3c:	2800      	cmp	r0, #0
   81e3e:	d050      	beq.n	81ee2 <xTaskPriorityInherit+0xa6>
   81e40:	b538      	push	{r3, r4, r5, lr}
   81e42:	4604      	mov	r4, r0
   81e44:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
   81e46:	4928      	ldr	r1, [pc, #160]	; (81ee8 <xTaskPriorityInherit+0xac>)
   81e48:	6809      	ldr	r1, [r1, #0]
   81e4a:	6ac9      	ldr	r1, [r1, #44]	; 0x2c
   81e4c:	428a      	cmp	r2, r1
   81e4e:	d23f      	bcs.n	81ed0 <xTaskPriorityInherit+0x94>
   81e50:	6981      	ldr	r1, [r0, #24]
   81e52:	2900      	cmp	r1, #0
   81e54:	db05      	blt.n	81e62 <xTaskPriorityInherit+0x26>
   81e56:	4924      	ldr	r1, [pc, #144]	; (81ee8 <xTaskPriorityInherit+0xac>)
   81e58:	6809      	ldr	r1, [r1, #0]
   81e5a:	6ac9      	ldr	r1, [r1, #44]	; 0x2c
   81e5c:	f1c1 0105 	rsb	r1, r1, #5
   81e60:	6181      	str	r1, [r0, #24]
   81e62:	eb02 0282 	add.w	r2, r2, r2, lsl #2
   81e66:	4921      	ldr	r1, [pc, #132]	; (81eec <xTaskPriorityInherit+0xb0>)
   81e68:	eb01 0282 	add.w	r2, r1, r2, lsl #2
   81e6c:	6961      	ldr	r1, [r4, #20]
   81e6e:	4291      	cmp	r1, r2
   81e70:	d005      	beq.n	81e7e <xTaskPriorityInherit+0x42>
   81e72:	4a1d      	ldr	r2, [pc, #116]	; (81ee8 <xTaskPriorityInherit+0xac>)
   81e74:	6812      	ldr	r2, [r2, #0]
   81e76:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
   81e78:	62e2      	str	r2, [r4, #44]	; 0x2c
   81e7a:	2001      	movs	r0, #1
   81e7c:	bd38      	pop	{r3, r4, r5, pc}
   81e7e:	1d25      	adds	r5, r4, #4
   81e80:	4628      	mov	r0, r5
   81e82:	4b1b      	ldr	r3, [pc, #108]	; (81ef0 <xTaskPriorityInherit+0xb4>)
   81e84:	4798      	blx	r3
   81e86:	b970      	cbnz	r0, 81ea6 <xTaskPriorityInherit+0x6a>
   81e88:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
   81e8a:	eb02 0382 	add.w	r3, r2, r2, lsl #2
   81e8e:	009b      	lsls	r3, r3, #2
   81e90:	4916      	ldr	r1, [pc, #88]	; (81eec <xTaskPriorityInherit+0xb0>)
   81e92:	58cb      	ldr	r3, [r1, r3]
   81e94:	b93b      	cbnz	r3, 81ea6 <xTaskPriorityInherit+0x6a>
   81e96:	4817      	ldr	r0, [pc, #92]	; (81ef4 <xTaskPriorityInherit+0xb8>)
   81e98:	6803      	ldr	r3, [r0, #0]
   81e9a:	2101      	movs	r1, #1
   81e9c:	fa01 f202 	lsl.w	r2, r1, r2
   81ea0:	ea23 0202 	bic.w	r2, r3, r2
   81ea4:	6002      	str	r2, [r0, #0]
   81ea6:	4b10      	ldr	r3, [pc, #64]	; (81ee8 <xTaskPriorityInherit+0xac>)
   81ea8:	681b      	ldr	r3, [r3, #0]
   81eaa:	6ad8      	ldr	r0, [r3, #44]	; 0x2c
   81eac:	62e0      	str	r0, [r4, #44]	; 0x2c
   81eae:	4a11      	ldr	r2, [pc, #68]	; (81ef4 <xTaskPriorityInherit+0xb8>)
   81eb0:	6811      	ldr	r1, [r2, #0]
   81eb2:	2401      	movs	r4, #1
   81eb4:	fa04 f300 	lsl.w	r3, r4, r0
   81eb8:	430b      	orrs	r3, r1
   81eba:	6013      	str	r3, [r2, #0]
   81ebc:	eb00 0080 	add.w	r0, r0, r0, lsl #2
   81ec0:	4629      	mov	r1, r5
   81ec2:	4b0a      	ldr	r3, [pc, #40]	; (81eec <xTaskPriorityInherit+0xb0>)
   81ec4:	eb03 0080 	add.w	r0, r3, r0, lsl #2
   81ec8:	4b0b      	ldr	r3, [pc, #44]	; (81ef8 <xTaskPriorityInherit+0xbc>)
   81eca:	4798      	blx	r3
   81ecc:	4620      	mov	r0, r4
   81ece:	bd38      	pop	{r3, r4, r5, pc}
   81ed0:	4a05      	ldr	r2, [pc, #20]	; (81ee8 <xTaskPriorityInherit+0xac>)
   81ed2:	6812      	ldr	r2, [r2, #0]
   81ed4:	6d00      	ldr	r0, [r0, #80]	; 0x50
   81ed6:	6ad3      	ldr	r3, [r2, #44]	; 0x2c
   81ed8:	4298      	cmp	r0, r3
   81eda:	bf2c      	ite	cs
   81edc:	2000      	movcs	r0, #0
   81ede:	2001      	movcc	r0, #1
   81ee0:	bd38      	pop	{r3, r4, r5, pc}
   81ee2:	2000      	movs	r0, #0
   81ee4:	4770      	bx	lr
   81ee6:	bf00      	nop
   81ee8:	2007c1b0 	.word	0x2007c1b0
   81eec:	2007c1bc 	.word	0x2007c1bc
   81ef0:	0008084d 	.word	0x0008084d
   81ef4:	2007c234 	.word	0x2007c234
   81ef8:	00080801 	.word	0x00080801

00081efc <xTaskPriorityDisinherit>:
   81efc:	2800      	cmp	r0, #0
   81efe:	d04a      	beq.n	81f96 <xTaskPriorityDisinherit+0x9a>
   81f00:	b538      	push	{r3, r4, r5, lr}
   81f02:	4604      	mov	r4, r0
   81f04:	4a27      	ldr	r2, [pc, #156]	; (81fa4 <xTaskPriorityDisinherit+0xa8>)
   81f06:	6812      	ldr	r2, [r2, #0]
   81f08:	4290      	cmp	r0, r2
   81f0a:	d008      	beq.n	81f1e <xTaskPriorityDisinherit+0x22>
   81f0c:	f04f 0340 	mov.w	r3, #64	; 0x40
   81f10:	f383 8811 	msr	BASEPRI, r3
   81f14:	f3bf 8f6f 	isb	sy
   81f18:	f3bf 8f4f 	dsb	sy
   81f1c:	e7fe      	b.n	81f1c <xTaskPriorityDisinherit+0x20>
   81f1e:	6d42      	ldr	r2, [r0, #84]	; 0x54
   81f20:	b942      	cbnz	r2, 81f34 <xTaskPriorityDisinherit+0x38>
   81f22:	f04f 0340 	mov.w	r3, #64	; 0x40
   81f26:	f383 8811 	msr	BASEPRI, r3
   81f2a:	f3bf 8f6f 	isb	sy
   81f2e:	f3bf 8f4f 	dsb	sy
   81f32:	e7fe      	b.n	81f32 <xTaskPriorityDisinherit+0x36>
   81f34:	3a01      	subs	r2, #1
   81f36:	6542      	str	r2, [r0, #84]	; 0x54
   81f38:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
   81f3a:	6d21      	ldr	r1, [r4, #80]	; 0x50
   81f3c:	4288      	cmp	r0, r1
   81f3e:	d02c      	beq.n	81f9a <xTaskPriorityDisinherit+0x9e>
   81f40:	2a00      	cmp	r2, #0
   81f42:	d12c      	bne.n	81f9e <xTaskPriorityDisinherit+0xa2>
   81f44:	1d25      	adds	r5, r4, #4
   81f46:	4628      	mov	r0, r5
   81f48:	4b17      	ldr	r3, [pc, #92]	; (81fa8 <xTaskPriorityDisinherit+0xac>)
   81f4a:	4798      	blx	r3
   81f4c:	b968      	cbnz	r0, 81f6a <xTaskPriorityDisinherit+0x6e>
   81f4e:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
   81f50:	eb01 0381 	add.w	r3, r1, r1, lsl #2
   81f54:	009b      	lsls	r3, r3, #2
   81f56:	4a15      	ldr	r2, [pc, #84]	; (81fac <xTaskPriorityDisinherit+0xb0>)
   81f58:	58d3      	ldr	r3, [r2, r3]
   81f5a:	b933      	cbnz	r3, 81f6a <xTaskPriorityDisinherit+0x6e>
   81f5c:	4814      	ldr	r0, [pc, #80]	; (81fb0 <xTaskPriorityDisinherit+0xb4>)
   81f5e:	6803      	ldr	r3, [r0, #0]
   81f60:	2201      	movs	r2, #1
   81f62:	408a      	lsls	r2, r1
   81f64:	ea23 0302 	bic.w	r3, r3, r2
   81f68:	6003      	str	r3, [r0, #0]
   81f6a:	6d20      	ldr	r0, [r4, #80]	; 0x50
   81f6c:	62e0      	str	r0, [r4, #44]	; 0x2c
   81f6e:	f1c0 0305 	rsb	r3, r0, #5
   81f72:	61a3      	str	r3, [r4, #24]
   81f74:	4a0e      	ldr	r2, [pc, #56]	; (81fb0 <xTaskPriorityDisinherit+0xb4>)
   81f76:	6811      	ldr	r1, [r2, #0]
   81f78:	2401      	movs	r4, #1
   81f7a:	fa04 f300 	lsl.w	r3, r4, r0
   81f7e:	430b      	orrs	r3, r1
   81f80:	6013      	str	r3, [r2, #0]
   81f82:	eb00 0080 	add.w	r0, r0, r0, lsl #2
   81f86:	4629      	mov	r1, r5
   81f88:	4b08      	ldr	r3, [pc, #32]	; (81fac <xTaskPriorityDisinherit+0xb0>)
   81f8a:	eb03 0080 	add.w	r0, r3, r0, lsl #2
   81f8e:	4b09      	ldr	r3, [pc, #36]	; (81fb4 <xTaskPriorityDisinherit+0xb8>)
   81f90:	4798      	blx	r3
   81f92:	4620      	mov	r0, r4
   81f94:	bd38      	pop	{r3, r4, r5, pc}
   81f96:	2000      	movs	r0, #0
   81f98:	4770      	bx	lr
   81f9a:	2000      	movs	r0, #0
   81f9c:	bd38      	pop	{r3, r4, r5, pc}
   81f9e:	2000      	movs	r0, #0
   81fa0:	bd38      	pop	{r3, r4, r5, pc}
   81fa2:	bf00      	nop
   81fa4:	2007c1b0 	.word	0x2007c1b0
   81fa8:	0008084d 	.word	0x0008084d
   81fac:	2007c1bc 	.word	0x2007c1bc
   81fb0:	2007c234 	.word	0x2007c234
   81fb4:	00080801 	.word	0x00080801

00081fb8 <vTaskPriorityDisinheritAfterTimeout>:
   81fb8:	2800      	cmp	r0, #0
   81fba:	d055      	beq.n	82068 <vTaskPriorityDisinheritAfterTimeout+0xb0>
   81fbc:	b538      	push	{r3, r4, r5, lr}
   81fbe:	4604      	mov	r4, r0
   81fc0:	6d40      	ldr	r0, [r0, #84]	; 0x54
   81fc2:	b940      	cbnz	r0, 81fd6 <vTaskPriorityDisinheritAfterTimeout+0x1e>
   81fc4:	f04f 0340 	mov.w	r3, #64	; 0x40
   81fc8:	f383 8811 	msr	BASEPRI, r3
   81fcc:	f3bf 8f6f 	isb	sy
   81fd0:	f3bf 8f4f 	dsb	sy
   81fd4:	e7fe      	b.n	81fd4 <vTaskPriorityDisinheritAfterTimeout+0x1c>
   81fd6:	6d22      	ldr	r2, [r4, #80]	; 0x50
   81fd8:	428a      	cmp	r2, r1
   81fda:	bf38      	it	cc
   81fdc:	460a      	movcc	r2, r1
   81fde:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
   81fe0:	4291      	cmp	r1, r2
   81fe2:	d001      	beq.n	81fe8 <vTaskPriorityDisinheritAfterTimeout+0x30>
   81fe4:	2801      	cmp	r0, #1
   81fe6:	d000      	beq.n	81fea <vTaskPriorityDisinheritAfterTimeout+0x32>
   81fe8:	bd38      	pop	{r3, r4, r5, pc}
   81fea:	4820      	ldr	r0, [pc, #128]	; (8206c <vTaskPriorityDisinheritAfterTimeout+0xb4>)
   81fec:	6800      	ldr	r0, [r0, #0]
   81fee:	4284      	cmp	r4, r0
   81ff0:	d108      	bne.n	82004 <vTaskPriorityDisinheritAfterTimeout+0x4c>
   81ff2:	f04f 0340 	mov.w	r3, #64	; 0x40
   81ff6:	f383 8811 	msr	BASEPRI, r3
   81ffa:	f3bf 8f6f 	isb	sy
   81ffe:	f3bf 8f4f 	dsb	sy
   82002:	e7fe      	b.n	82002 <vTaskPriorityDisinheritAfterTimeout+0x4a>
   82004:	62e2      	str	r2, [r4, #44]	; 0x2c
   82006:	69a0      	ldr	r0, [r4, #24]
   82008:	2800      	cmp	r0, #0
   8200a:	bfa4      	itt	ge
   8200c:	f1c2 0205 	rsbge	r2, r2, #5
   82010:	61a2      	strge	r2, [r4, #24]
   82012:	eb01 0181 	add.w	r1, r1, r1, lsl #2
   82016:	4a16      	ldr	r2, [pc, #88]	; (82070 <vTaskPriorityDisinheritAfterTimeout+0xb8>)
   82018:	eb02 0181 	add.w	r1, r2, r1, lsl #2
   8201c:	6962      	ldr	r2, [r4, #20]
   8201e:	428a      	cmp	r2, r1
   82020:	d1e2      	bne.n	81fe8 <vTaskPriorityDisinheritAfterTimeout+0x30>
   82022:	1d25      	adds	r5, r4, #4
   82024:	4628      	mov	r0, r5
   82026:	4b13      	ldr	r3, [pc, #76]	; (82074 <vTaskPriorityDisinheritAfterTimeout+0xbc>)
   82028:	4798      	blx	r3
   8202a:	b968      	cbnz	r0, 82048 <vTaskPriorityDisinheritAfterTimeout+0x90>
   8202c:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
   8202e:	eb01 0381 	add.w	r3, r1, r1, lsl #2
   82032:	009b      	lsls	r3, r3, #2
   82034:	4a0e      	ldr	r2, [pc, #56]	; (82070 <vTaskPriorityDisinheritAfterTimeout+0xb8>)
   82036:	58d3      	ldr	r3, [r2, r3]
   82038:	b933      	cbnz	r3, 82048 <vTaskPriorityDisinheritAfterTimeout+0x90>
   8203a:	480f      	ldr	r0, [pc, #60]	; (82078 <vTaskPriorityDisinheritAfterTimeout+0xc0>)
   8203c:	6803      	ldr	r3, [r0, #0]
   8203e:	2201      	movs	r2, #1
   82040:	408a      	lsls	r2, r1
   82042:	ea23 0302 	bic.w	r3, r3, r2
   82046:	6003      	str	r3, [r0, #0]
   82048:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
   8204a:	4a0b      	ldr	r2, [pc, #44]	; (82078 <vTaskPriorityDisinheritAfterTimeout+0xc0>)
   8204c:	6811      	ldr	r1, [r2, #0]
   8204e:	2301      	movs	r3, #1
   82050:	4083      	lsls	r3, r0
   82052:	430b      	orrs	r3, r1
   82054:	6013      	str	r3, [r2, #0]
   82056:	eb00 0080 	add.w	r0, r0, r0, lsl #2
   8205a:	4629      	mov	r1, r5
   8205c:	4b04      	ldr	r3, [pc, #16]	; (82070 <vTaskPriorityDisinheritAfterTimeout+0xb8>)
   8205e:	eb03 0080 	add.w	r0, r3, r0, lsl #2
   82062:	4b06      	ldr	r3, [pc, #24]	; (8207c <vTaskPriorityDisinheritAfterTimeout+0xc4>)
   82064:	4798      	blx	r3
   82066:	e7bf      	b.n	81fe8 <vTaskPriorityDisinheritAfterTimeout+0x30>
   82068:	4770      	bx	lr
   8206a:	bf00      	nop
   8206c:	2007c1b0 	.word	0x2007c1b0
   82070:	2007c1bc 	.word	0x2007c1bc
   82074:	0008084d 	.word	0x0008084d
   82078:	2007c234 	.word	0x2007c234
   8207c:	00080801 	.word	0x00080801

00082080 <pvTaskIncrementMutexHeldCount>:
   82080:	4b05      	ldr	r3, [pc, #20]	; (82098 <pvTaskIncrementMutexHeldCount+0x18>)
   82082:	681b      	ldr	r3, [r3, #0]
   82084:	b123      	cbz	r3, 82090 <pvTaskIncrementMutexHeldCount+0x10>
   82086:	4b04      	ldr	r3, [pc, #16]	; (82098 <pvTaskIncrementMutexHeldCount+0x18>)
   82088:	681a      	ldr	r2, [r3, #0]
   8208a:	6d53      	ldr	r3, [r2, #84]	; 0x54
   8208c:	3301      	adds	r3, #1
   8208e:	6553      	str	r3, [r2, #84]	; 0x54
   82090:	4b01      	ldr	r3, [pc, #4]	; (82098 <pvTaskIncrementMutexHeldCount+0x18>)
   82092:	6818      	ldr	r0, [r3, #0]
   82094:	4770      	bx	lr
   82096:	bf00      	nop
   82098:	2007c1b0 	.word	0x2007c1b0

0008209c <prvInsertTimerInActiveList>:
   8209c:	b508      	push	{r3, lr}
   8209e:	6041      	str	r1, [r0, #4]
   820a0:	6100      	str	r0, [r0, #16]
   820a2:	4291      	cmp	r1, r2
   820a4:	d80c      	bhi.n	820c0 <prvInsertTimerInActiveList+0x24>
   820a6:	1ad2      	subs	r2, r2, r3
   820a8:	6983      	ldr	r3, [r0, #24]
   820aa:	429a      	cmp	r2, r3
   820ac:	d301      	bcc.n	820b2 <prvInsertTimerInActiveList+0x16>
   820ae:	2001      	movs	r0, #1
   820b0:	bd08      	pop	{r3, pc}
   820b2:	1d01      	adds	r1, r0, #4
   820b4:	4b09      	ldr	r3, [pc, #36]	; (820dc <prvInsertTimerInActiveList+0x40>)
   820b6:	6818      	ldr	r0, [r3, #0]
   820b8:	4b09      	ldr	r3, [pc, #36]	; (820e0 <prvInsertTimerInActiveList+0x44>)
   820ba:	4798      	blx	r3
   820bc:	2000      	movs	r0, #0
   820be:	bd08      	pop	{r3, pc}
   820c0:	429a      	cmp	r2, r3
   820c2:	d201      	bcs.n	820c8 <prvInsertTimerInActiveList+0x2c>
   820c4:	4299      	cmp	r1, r3
   820c6:	d206      	bcs.n	820d6 <prvInsertTimerInActiveList+0x3a>
   820c8:	1d01      	adds	r1, r0, #4
   820ca:	4b06      	ldr	r3, [pc, #24]	; (820e4 <prvInsertTimerInActiveList+0x48>)
   820cc:	6818      	ldr	r0, [r3, #0]
   820ce:	4b04      	ldr	r3, [pc, #16]	; (820e0 <prvInsertTimerInActiveList+0x44>)
   820d0:	4798      	blx	r3
   820d2:	2000      	movs	r0, #0
   820d4:	bd08      	pop	{r3, pc}
   820d6:	2001      	movs	r0, #1
   820d8:	bd08      	pop	{r3, pc}
   820da:	bf00      	nop
   820dc:	2007c2b8 	.word	0x2007c2b8
   820e0:	00080819 	.word	0x00080819
   820e4:	2007c2b4 	.word	0x2007c2b4

000820e8 <prvCheckForValidListAndQueue>:
   820e8:	b570      	push	{r4, r5, r6, lr}
   820ea:	4b10      	ldr	r3, [pc, #64]	; (8212c <prvCheckForValidListAndQueue+0x44>)
   820ec:	4798      	blx	r3
   820ee:	4b10      	ldr	r3, [pc, #64]	; (82130 <prvCheckForValidListAndQueue+0x48>)
   820f0:	681b      	ldr	r3, [r3, #0]
   820f2:	b113      	cbz	r3, 820fa <prvCheckForValidListAndQueue+0x12>
   820f4:	4b0f      	ldr	r3, [pc, #60]	; (82134 <prvCheckForValidListAndQueue+0x4c>)
   820f6:	4798      	blx	r3
   820f8:	bd70      	pop	{r4, r5, r6, pc}
   820fa:	4d0f      	ldr	r5, [pc, #60]	; (82138 <prvCheckForValidListAndQueue+0x50>)
   820fc:	4628      	mov	r0, r5
   820fe:	4e0f      	ldr	r6, [pc, #60]	; (8213c <prvCheckForValidListAndQueue+0x54>)
   82100:	47b0      	blx	r6
   82102:	4c0f      	ldr	r4, [pc, #60]	; (82140 <prvCheckForValidListAndQueue+0x58>)
   82104:	4620      	mov	r0, r4
   82106:	47b0      	blx	r6
   82108:	4b0e      	ldr	r3, [pc, #56]	; (82144 <prvCheckForValidListAndQueue+0x5c>)
   8210a:	601d      	str	r5, [r3, #0]
   8210c:	4b0e      	ldr	r3, [pc, #56]	; (82148 <prvCheckForValidListAndQueue+0x60>)
   8210e:	601c      	str	r4, [r3, #0]
   82110:	2200      	movs	r2, #0
   82112:	2110      	movs	r1, #16
   82114:	2005      	movs	r0, #5
   82116:	4b0d      	ldr	r3, [pc, #52]	; (8214c <prvCheckForValidListAndQueue+0x64>)
   82118:	4798      	blx	r3
   8211a:	4b05      	ldr	r3, [pc, #20]	; (82130 <prvCheckForValidListAndQueue+0x48>)
   8211c:	6018      	str	r0, [r3, #0]
   8211e:	2800      	cmp	r0, #0
   82120:	d0e8      	beq.n	820f4 <prvCheckForValidListAndQueue+0xc>
   82122:	490b      	ldr	r1, [pc, #44]	; (82150 <prvCheckForValidListAndQueue+0x68>)
   82124:	4b0b      	ldr	r3, [pc, #44]	; (82154 <prvCheckForValidListAndQueue+0x6c>)
   82126:	4798      	blx	r3
   82128:	e7e4      	b.n	820f4 <prvCheckForValidListAndQueue+0xc>
   8212a:	bf00      	nop
   8212c:	00080929 	.word	0x00080929
   82130:	2007c2e8 	.word	0x2007c2e8
   82134:	0008096d 	.word	0x0008096d
   82138:	2007c2bc 	.word	0x2007c2bc
   8213c:	000807e5 	.word	0x000807e5
   82140:	2007c2d0 	.word	0x2007c2d0
   82144:	2007c2b4 	.word	0x2007c2b4
   82148:	2007c2b8 	.word	0x2007c2b8
   8214c:	00080ddd 	.word	0x00080ddd
   82150:	00083d70 	.word	0x00083d70
   82154:	0008145d 	.word	0x0008145d

00082158 <xTimerCreateTimerTask>:
   82158:	b510      	push	{r4, lr}
   8215a:	b082      	sub	sp, #8
   8215c:	4b0d      	ldr	r3, [pc, #52]	; (82194 <xTimerCreateTimerTask+0x3c>)
   8215e:	4798      	blx	r3
   82160:	4b0d      	ldr	r3, [pc, #52]	; (82198 <xTimerCreateTimerTask+0x40>)
   82162:	681b      	ldr	r3, [r3, #0]
   82164:	b16b      	cbz	r3, 82182 <xTimerCreateTimerTask+0x2a>
   82166:	4b0d      	ldr	r3, [pc, #52]	; (8219c <xTimerCreateTimerTask+0x44>)
   82168:	9301      	str	r3, [sp, #4]
   8216a:	2304      	movs	r3, #4
   8216c:	9300      	str	r3, [sp, #0]
   8216e:	2300      	movs	r3, #0
   82170:	f44f 7282 	mov.w	r2, #260	; 0x104
   82174:	490a      	ldr	r1, [pc, #40]	; (821a0 <xTimerCreateTimerTask+0x48>)
   82176:	480b      	ldr	r0, [pc, #44]	; (821a4 <xTimerCreateTimerTask+0x4c>)
   82178:	4c0b      	ldr	r4, [pc, #44]	; (821a8 <xTimerCreateTimerTask+0x50>)
   8217a:	47a0      	blx	r4
   8217c:	b108      	cbz	r0, 82182 <xTimerCreateTimerTask+0x2a>
   8217e:	b002      	add	sp, #8
   82180:	bd10      	pop	{r4, pc}
   82182:	f04f 0340 	mov.w	r3, #64	; 0x40
   82186:	f383 8811 	msr	BASEPRI, r3
   8218a:	f3bf 8f6f 	isb	sy
   8218e:	f3bf 8f4f 	dsb	sy
   82192:	e7fe      	b.n	82192 <xTimerCreateTimerTask+0x3a>
   82194:	000820e9 	.word	0x000820e9
   82198:	2007c2e8 	.word	0x2007c2e8
   8219c:	2007c2ec 	.word	0x2007c2ec
   821a0:	00083d78 	.word	0x00083d78
   821a4:	000822cd 	.word	0x000822cd
   821a8:	0008163d 	.word	0x0008163d

000821ac <xTimerGenericCommand>:
   821ac:	b1d8      	cbz	r0, 821e6 <xTimerGenericCommand+0x3a>
   821ae:	b530      	push	{r4, r5, lr}
   821b0:	b085      	sub	sp, #20
   821b2:	4615      	mov	r5, r2
   821b4:	4604      	mov	r4, r0
   821b6:	4a14      	ldr	r2, [pc, #80]	; (82208 <xTimerGenericCommand+0x5c>)
   821b8:	6810      	ldr	r0, [r2, #0]
   821ba:	b310      	cbz	r0, 82202 <xTimerGenericCommand+0x56>
   821bc:	461a      	mov	r2, r3
   821be:	9100      	str	r1, [sp, #0]
   821c0:	9501      	str	r5, [sp, #4]
   821c2:	9402      	str	r4, [sp, #8]
   821c4:	2905      	cmp	r1, #5
   821c6:	dc17      	bgt.n	821f8 <xTimerGenericCommand+0x4c>
   821c8:	4b10      	ldr	r3, [pc, #64]	; (8220c <xTimerGenericCommand+0x60>)
   821ca:	4798      	blx	r3
   821cc:	2802      	cmp	r0, #2
   821ce:	f04f 0300 	mov.w	r3, #0
   821d2:	bf0c      	ite	eq
   821d4:	9a08      	ldreq	r2, [sp, #32]
   821d6:	461a      	movne	r2, r3
   821d8:	4669      	mov	r1, sp
   821da:	480b      	ldr	r0, [pc, #44]	; (82208 <xTimerGenericCommand+0x5c>)
   821dc:	6800      	ldr	r0, [r0, #0]
   821de:	4c0c      	ldr	r4, [pc, #48]	; (82210 <xTimerGenericCommand+0x64>)
   821e0:	47a0      	blx	r4
   821e2:	b005      	add	sp, #20
   821e4:	bd30      	pop	{r4, r5, pc}
   821e6:	f04f 0340 	mov.w	r3, #64	; 0x40
   821ea:	f383 8811 	msr	BASEPRI, r3
   821ee:	f3bf 8f6f 	isb	sy
   821f2:	f3bf 8f4f 	dsb	sy
   821f6:	e7fe      	b.n	821f6 <xTimerGenericCommand+0x4a>
   821f8:	2300      	movs	r3, #0
   821fa:	4669      	mov	r1, sp
   821fc:	4c05      	ldr	r4, [pc, #20]	; (82214 <xTimerGenericCommand+0x68>)
   821fe:	47a0      	blx	r4
   82200:	e7ef      	b.n	821e2 <xTimerGenericCommand+0x36>
   82202:	2000      	movs	r0, #0
   82204:	e7ed      	b.n	821e2 <xTimerGenericCommand+0x36>
   82206:	bf00      	nop
   82208:	2007c2e8 	.word	0x2007c2e8
   8220c:	00081e1d 	.word	0x00081e1d
   82210:	00080e31 	.word	0x00080e31
   82214:	00081011 	.word	0x00081011

00082218 <prvSampleTimeNow>:
   82218:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   8221c:	b082      	sub	sp, #8
   8221e:	4680      	mov	r8, r0
   82220:	4b23      	ldr	r3, [pc, #140]	; (822b0 <prvSampleTimeNow+0x98>)
   82222:	4798      	blx	r3
   82224:	4607      	mov	r7, r0
   82226:	4b23      	ldr	r3, [pc, #140]	; (822b4 <prvSampleTimeNow+0x9c>)
   82228:	681b      	ldr	r3, [r3, #0]
   8222a:	4298      	cmp	r0, r3
   8222c:	d319      	bcc.n	82262 <prvSampleTimeNow+0x4a>
   8222e:	2300      	movs	r3, #0
   82230:	f8c8 3000 	str.w	r3, [r8]
   82234:	4b1f      	ldr	r3, [pc, #124]	; (822b4 <prvSampleTimeNow+0x9c>)
   82236:	601f      	str	r7, [r3, #0]
   82238:	4638      	mov	r0, r7
   8223a:	b002      	add	sp, #8
   8223c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   82240:	2100      	movs	r1, #0
   82242:	9100      	str	r1, [sp, #0]
   82244:	460b      	mov	r3, r1
   82246:	4652      	mov	r2, sl
   82248:	4620      	mov	r0, r4
   8224a:	4c1b      	ldr	r4, [pc, #108]	; (822b8 <prvSampleTimeNow+0xa0>)
   8224c:	47a0      	blx	r4
   8224e:	b950      	cbnz	r0, 82266 <prvSampleTimeNow+0x4e>
   82250:	f04f 0340 	mov.w	r3, #64	; 0x40
   82254:	f383 8811 	msr	BASEPRI, r3
   82258:	f3bf 8f6f 	isb	sy
   8225c:	f3bf 8f4f 	dsb	sy
   82260:	e7fe      	b.n	82260 <prvSampleTimeNow+0x48>
   82262:	4d16      	ldr	r5, [pc, #88]	; (822bc <prvSampleTimeNow+0xa4>)
   82264:	4e16      	ldr	r6, [pc, #88]	; (822c0 <prvSampleTimeNow+0xa8>)
   82266:	682b      	ldr	r3, [r5, #0]
   82268:	681a      	ldr	r2, [r3, #0]
   8226a:	b1c2      	cbz	r2, 8229e <prvSampleTimeNow+0x86>
   8226c:	68db      	ldr	r3, [r3, #12]
   8226e:	f8d3 a000 	ldr.w	sl, [r3]
   82272:	68dc      	ldr	r4, [r3, #12]
   82274:	f104 0904 	add.w	r9, r4, #4
   82278:	4648      	mov	r0, r9
   8227a:	47b0      	blx	r6
   8227c:	6a63      	ldr	r3, [r4, #36]	; 0x24
   8227e:	4620      	mov	r0, r4
   82280:	4798      	blx	r3
   82282:	69e3      	ldr	r3, [r4, #28]
   82284:	2b01      	cmp	r3, #1
   82286:	d1ee      	bne.n	82266 <prvSampleTimeNow+0x4e>
   82288:	69a3      	ldr	r3, [r4, #24]
   8228a:	4453      	add	r3, sl
   8228c:	459a      	cmp	sl, r3
   8228e:	d2d7      	bcs.n	82240 <prvSampleTimeNow+0x28>
   82290:	6063      	str	r3, [r4, #4]
   82292:	6124      	str	r4, [r4, #16]
   82294:	4649      	mov	r1, r9
   82296:	6828      	ldr	r0, [r5, #0]
   82298:	4b0a      	ldr	r3, [pc, #40]	; (822c4 <prvSampleTimeNow+0xac>)
   8229a:	4798      	blx	r3
   8229c:	e7e3      	b.n	82266 <prvSampleTimeNow+0x4e>
   8229e:	4a0a      	ldr	r2, [pc, #40]	; (822c8 <prvSampleTimeNow+0xb0>)
   822a0:	6810      	ldr	r0, [r2, #0]
   822a2:	4906      	ldr	r1, [pc, #24]	; (822bc <prvSampleTimeNow+0xa4>)
   822a4:	6008      	str	r0, [r1, #0]
   822a6:	6013      	str	r3, [r2, #0]
   822a8:	2301      	movs	r3, #1
   822aa:	f8c8 3000 	str.w	r3, [r8]
   822ae:	e7c1      	b.n	82234 <prvSampleTimeNow+0x1c>
   822b0:	000818cd 	.word	0x000818cd
   822b4:	2007c2e4 	.word	0x2007c2e4
   822b8:	000821ad 	.word	0x000821ad
   822bc:	2007c2b4 	.word	0x2007c2b4
   822c0:	0008084d 	.word	0x0008084d
   822c4:	00080819 	.word	0x00080819
   822c8:	2007c2b8 	.word	0x2007c2b8

000822cc <prvTimerTask>:
   822cc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   822d0:	b088      	sub	sp, #32
   822d2:	4e70      	ldr	r6, [pc, #448]	; (82494 <prvTimerTask+0x1c8>)
   822d4:	4f70      	ldr	r7, [pc, #448]	; (82498 <prvTimerTask+0x1cc>)
   822d6:	f8df 91e8 	ldr.w	r9, [pc, #488]	; 824c0 <prvTimerTask+0x1f4>
   822da:	f8df 81e8 	ldr.w	r8, [pc, #488]	; 824c4 <prvTimerTask+0x1f8>
   822de:	6833      	ldr	r3, [r6, #0]
   822e0:	681a      	ldr	r2, [r3, #0]
   822e2:	b172      	cbz	r2, 82302 <prvTimerTask+0x36>
   822e4:	68db      	ldr	r3, [r3, #12]
   822e6:	681c      	ldr	r4, [r3, #0]
   822e8:	4b6c      	ldr	r3, [pc, #432]	; (8249c <prvTimerTask+0x1d0>)
   822ea:	4798      	blx	r3
   822ec:	a804      	add	r0, sp, #16
   822ee:	4b6c      	ldr	r3, [pc, #432]	; (824a0 <prvTimerTask+0x1d4>)
   822f0:	4798      	blx	r3
   822f2:	4605      	mov	r5, r0
   822f4:	9b04      	ldr	r3, [sp, #16]
   822f6:	2b00      	cmp	r3, #0
   822f8:	d152      	bne.n	823a0 <prvTimerTask+0xd4>
   822fa:	42a0      	cmp	r0, r4
   822fc:	d223      	bcs.n	82346 <prvTimerTask+0x7a>
   822fe:	2200      	movs	r2, #0
   82300:	e00f      	b.n	82322 <prvTimerTask+0x56>
   82302:	4b66      	ldr	r3, [pc, #408]	; (8249c <prvTimerTask+0x1d0>)
   82304:	4798      	blx	r3
   82306:	a804      	add	r0, sp, #16
   82308:	4b65      	ldr	r3, [pc, #404]	; (824a0 <prvTimerTask+0x1d4>)
   8230a:	4798      	blx	r3
   8230c:	4605      	mov	r5, r0
   8230e:	9b04      	ldr	r3, [sp, #16]
   82310:	2b00      	cmp	r3, #0
   82312:	d145      	bne.n	823a0 <prvTimerTask+0xd4>
   82314:	4b63      	ldr	r3, [pc, #396]	; (824a4 <prvTimerTask+0x1d8>)
   82316:	681b      	ldr	r3, [r3, #0]
   82318:	681a      	ldr	r2, [r3, #0]
   8231a:	fab2 f282 	clz	r2, r2
   8231e:	0952      	lsrs	r2, r2, #5
   82320:	2400      	movs	r4, #0
   82322:	1b61      	subs	r1, r4, r5
   82324:	4b60      	ldr	r3, [pc, #384]	; (824a8 <prvTimerTask+0x1dc>)
   82326:	6818      	ldr	r0, [r3, #0]
   82328:	4b60      	ldr	r3, [pc, #384]	; (824ac <prvTimerTask+0x1e0>)
   8232a:	4798      	blx	r3
   8232c:	47b8      	blx	r7
   8232e:	b938      	cbnz	r0, 82340 <prvTimerTask+0x74>
   82330:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
   82334:	f8c9 3000 	str.w	r3, [r9]
   82338:	f3bf 8f4f 	dsb	sy
   8233c:	f3bf 8f6f 	isb	sy
   82340:	4d59      	ldr	r5, [pc, #356]	; (824a8 <prvTimerTask+0x1dc>)
   82342:	4c5b      	ldr	r4, [pc, #364]	; (824b0 <prvTimerTask+0x1e4>)
   82344:	e035      	b.n	823b2 <prvTimerTask+0xe6>
   82346:	47b8      	blx	r7
   82348:	6833      	ldr	r3, [r6, #0]
   8234a:	68db      	ldr	r3, [r3, #12]
   8234c:	f8d3 a00c 	ldr.w	sl, [r3, #12]
   82350:	f10a 0004 	add.w	r0, sl, #4
   82354:	47c0      	blx	r8
   82356:	f8da 301c 	ldr.w	r3, [sl, #28]
   8235a:	2b01      	cmp	r3, #1
   8235c:	d004      	beq.n	82368 <prvTimerTask+0x9c>
   8235e:	f8da 3024 	ldr.w	r3, [sl, #36]	; 0x24
   82362:	4650      	mov	r0, sl
   82364:	4798      	blx	r3
   82366:	e7eb      	b.n	82340 <prvTimerTask+0x74>
   82368:	f8da 1018 	ldr.w	r1, [sl, #24]
   8236c:	4623      	mov	r3, r4
   8236e:	462a      	mov	r2, r5
   82370:	4421      	add	r1, r4
   82372:	4650      	mov	r0, sl
   82374:	4d4f      	ldr	r5, [pc, #316]	; (824b4 <prvTimerTask+0x1e8>)
   82376:	47a8      	blx	r5
   82378:	2800      	cmp	r0, #0
   8237a:	d0f0      	beq.n	8235e <prvTimerTask+0x92>
   8237c:	2100      	movs	r1, #0
   8237e:	9100      	str	r1, [sp, #0]
   82380:	460b      	mov	r3, r1
   82382:	4622      	mov	r2, r4
   82384:	4650      	mov	r0, sl
   82386:	4c4c      	ldr	r4, [pc, #304]	; (824b8 <prvTimerTask+0x1ec>)
   82388:	47a0      	blx	r4
   8238a:	2800      	cmp	r0, #0
   8238c:	d1e7      	bne.n	8235e <prvTimerTask+0x92>
   8238e:	f04f 0340 	mov.w	r3, #64	; 0x40
   82392:	f383 8811 	msr	BASEPRI, r3
   82396:	f3bf 8f6f 	isb	sy
   8239a:	f3bf 8f4f 	dsb	sy
   8239e:	e7fe      	b.n	8239e <prvTimerTask+0xd2>
   823a0:	47b8      	blx	r7
   823a2:	e7cd      	b.n	82340 <prvTimerTask+0x74>
   823a4:	9907      	ldr	r1, [sp, #28]
   823a6:	9806      	ldr	r0, [sp, #24]
   823a8:	9b05      	ldr	r3, [sp, #20]
   823aa:	4798      	blx	r3
   823ac:	9b04      	ldr	r3, [sp, #16]
   823ae:	2b00      	cmp	r3, #0
   823b0:	da08      	bge.n	823c4 <prvTimerTask+0xf8>
   823b2:	2200      	movs	r2, #0
   823b4:	a904      	add	r1, sp, #16
   823b6:	6828      	ldr	r0, [r5, #0]
   823b8:	47a0      	blx	r4
   823ba:	2800      	cmp	r0, #0
   823bc:	d08f      	beq.n	822de <prvTimerTask+0x12>
   823be:	9b04      	ldr	r3, [sp, #16]
   823c0:	2b00      	cmp	r3, #0
   823c2:	dbef      	blt.n	823a4 <prvTimerTask+0xd8>
   823c4:	f8dd a018 	ldr.w	sl, [sp, #24]
   823c8:	f8da 3014 	ldr.w	r3, [sl, #20]
   823cc:	b113      	cbz	r3, 823d4 <prvTimerTask+0x108>
   823ce:	f10a 0004 	add.w	r0, sl, #4
   823d2:	47c0      	blx	r8
   823d4:	a803      	add	r0, sp, #12
   823d6:	4b32      	ldr	r3, [pc, #200]	; (824a0 <prvTimerTask+0x1d4>)
   823d8:	4798      	blx	r3
   823da:	9b04      	ldr	r3, [sp, #16]
   823dc:	2b09      	cmp	r3, #9
   823de:	d8e8      	bhi.n	823b2 <prvTimerTask+0xe6>
   823e0:	a201      	add	r2, pc, #4	; (adr r2, 823e8 <prvTimerTask+0x11c>)
   823e2:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
   823e6:	bf00      	nop
   823e8:	00082411 	.word	0x00082411
   823ec:	00082411 	.word	0x00082411
   823f0:	00082411 	.word	0x00082411
   823f4:	000823b3 	.word	0x000823b3
   823f8:	00082463 	.word	0x00082463
   823fc:	0008248b 	.word	0x0008248b
   82400:	00082411 	.word	0x00082411
   82404:	00082411 	.word	0x00082411
   82408:	000823b3 	.word	0x000823b3
   8240c:	00082463 	.word	0x00082463
   82410:	9c05      	ldr	r4, [sp, #20]
   82412:	f8da 1018 	ldr.w	r1, [sl, #24]
   82416:	4623      	mov	r3, r4
   82418:	4602      	mov	r2, r0
   8241a:	4421      	add	r1, r4
   8241c:	4650      	mov	r0, sl
   8241e:	4c25      	ldr	r4, [pc, #148]	; (824b4 <prvTimerTask+0x1e8>)
   82420:	47a0      	blx	r4
   82422:	2800      	cmp	r0, #0
   82424:	d08d      	beq.n	82342 <prvTimerTask+0x76>
   82426:	f8da 3024 	ldr.w	r3, [sl, #36]	; 0x24
   8242a:	4650      	mov	r0, sl
   8242c:	4798      	blx	r3
   8242e:	f8da 301c 	ldr.w	r3, [sl, #28]
   82432:	2b01      	cmp	r3, #1
   82434:	d185      	bne.n	82342 <prvTimerTask+0x76>
   82436:	f8da 2018 	ldr.w	r2, [sl, #24]
   8243a:	2100      	movs	r1, #0
   8243c:	9100      	str	r1, [sp, #0]
   8243e:	460b      	mov	r3, r1
   82440:	9805      	ldr	r0, [sp, #20]
   82442:	4402      	add	r2, r0
   82444:	4650      	mov	r0, sl
   82446:	4c1c      	ldr	r4, [pc, #112]	; (824b8 <prvTimerTask+0x1ec>)
   82448:	47a0      	blx	r4
   8244a:	2800      	cmp	r0, #0
   8244c:	f47f af79 	bne.w	82342 <prvTimerTask+0x76>
   82450:	f04f 0340 	mov.w	r3, #64	; 0x40
   82454:	f383 8811 	msr	BASEPRI, r3
   82458:	f3bf 8f6f 	isb	sy
   8245c:	f3bf 8f4f 	dsb	sy
   82460:	e7fe      	b.n	82460 <prvTimerTask+0x194>
   82462:	9905      	ldr	r1, [sp, #20]
   82464:	f8ca 1018 	str.w	r1, [sl, #24]
   82468:	b131      	cbz	r1, 82478 <prvTimerTask+0x1ac>
   8246a:	4603      	mov	r3, r0
   8246c:	4602      	mov	r2, r0
   8246e:	4401      	add	r1, r0
   82470:	4650      	mov	r0, sl
   82472:	4c10      	ldr	r4, [pc, #64]	; (824b4 <prvTimerTask+0x1e8>)
   82474:	47a0      	blx	r4
   82476:	e764      	b.n	82342 <prvTimerTask+0x76>
   82478:	f04f 0340 	mov.w	r3, #64	; 0x40
   8247c:	f383 8811 	msr	BASEPRI, r3
   82480:	f3bf 8f6f 	isb	sy
   82484:	f3bf 8f4f 	dsb	sy
   82488:	e7fe      	b.n	82488 <prvTimerTask+0x1bc>
   8248a:	4650      	mov	r0, sl
   8248c:	4b0b      	ldr	r3, [pc, #44]	; (824bc <prvTimerTask+0x1f0>)
   8248e:	4798      	blx	r3
   82490:	e757      	b.n	82342 <prvTimerTask+0x76>
   82492:	bf00      	nop
   82494:	2007c2b4 	.word	0x2007c2b4
   82498:	00081a0d 	.word	0x00081a0d
   8249c:	000818bd 	.word	0x000818bd
   824a0:	00082219 	.word	0x00082219
   824a4:	2007c2b8 	.word	0x2007c2b8
   824a8:	2007c2e8 	.word	0x2007c2e8
   824ac:	0008148d 	.word	0x0008148d
   824b0:	000810f5 	.word	0x000810f5
   824b4:	0008209d 	.word	0x0008209d
   824b8:	000821ad 	.word	0x000821ad
   824bc:	00080bd5 	.word	0x00080bd5
   824c0:	e000ed04 	.word	0xe000ed04
   824c4:	0008084d 	.word	0x0008084d

000824c8 <sysclk_init>:
   824c8:	b510      	push	{r4, lr}
   824ca:	480e      	ldr	r0, [pc, #56]	; (82504 <sysclk_init+0x3c>)
   824cc:	4b0e      	ldr	r3, [pc, #56]	; (82508 <sysclk_init+0x40>)
   824ce:	4798      	blx	r3
   824d0:	213e      	movs	r1, #62	; 0x3e
   824d2:	2000      	movs	r0, #0
   824d4:	4b0d      	ldr	r3, [pc, #52]	; (8250c <sysclk_init+0x44>)
   824d6:	4798      	blx	r3
   824d8:	4c0d      	ldr	r4, [pc, #52]	; (82510 <sysclk_init+0x48>)
   824da:	47a0      	blx	r4
   824dc:	2800      	cmp	r0, #0
   824de:	d0fc      	beq.n	824da <sysclk_init+0x12>
   824e0:	4b0c      	ldr	r3, [pc, #48]	; (82514 <sysclk_init+0x4c>)
   824e2:	4798      	blx	r3
   824e4:	4a0c      	ldr	r2, [pc, #48]	; (82518 <sysclk_init+0x50>)
   824e6:	4b0d      	ldr	r3, [pc, #52]	; (8251c <sysclk_init+0x54>)
   824e8:	629a      	str	r2, [r3, #40]	; 0x28
   824ea:	4c0d      	ldr	r4, [pc, #52]	; (82520 <sysclk_init+0x58>)
   824ec:	47a0      	blx	r4
   824ee:	2800      	cmp	r0, #0
   824f0:	d0fc      	beq.n	824ec <sysclk_init+0x24>
   824f2:	2010      	movs	r0, #16
   824f4:	4b0b      	ldr	r3, [pc, #44]	; (82524 <sysclk_init+0x5c>)
   824f6:	4798      	blx	r3
   824f8:	4b0b      	ldr	r3, [pc, #44]	; (82528 <sysclk_init+0x60>)
   824fa:	4798      	blx	r3
   824fc:	4801      	ldr	r0, [pc, #4]	; (82504 <sysclk_init+0x3c>)
   824fe:	4b02      	ldr	r3, [pc, #8]	; (82508 <sysclk_init+0x40>)
   82500:	4798      	blx	r3
   82502:	bd10      	pop	{r4, pc}
   82504:	0501bd00 	.word	0x0501bd00
   82508:	200700a5 	.word	0x200700a5
   8250c:	000828bd 	.word	0x000828bd
   82510:	00082911 	.word	0x00082911
   82514:	00082921 	.word	0x00082921
   82518:	200d3f01 	.word	0x200d3f01
   8251c:	400e0600 	.word	0x400e0600
   82520:	00082931 	.word	0x00082931
   82524:	00082859 	.word	0x00082859
   82528:	000829fd 	.word	0x000829fd

0008252c <board_init>:
   8252c:	b510      	push	{r4, lr}
   8252e:	f44f 4200 	mov.w	r2, #32768	; 0x8000
   82532:	4b16      	ldr	r3, [pc, #88]	; (8258c <board_init+0x60>)
   82534:	605a      	str	r2, [r3, #4]
   82536:	200b      	movs	r0, #11
   82538:	4c15      	ldr	r4, [pc, #84]	; (82590 <board_init+0x64>)
   8253a:	47a0      	blx	r4
   8253c:	200c      	movs	r0, #12
   8253e:	47a0      	blx	r4
   82540:	200d      	movs	r0, #13
   82542:	47a0      	blx	r4
   82544:	200e      	movs	r0, #14
   82546:	47a0      	blx	r4
   82548:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
   8254c:	203b      	movs	r0, #59	; 0x3b
   8254e:	4c11      	ldr	r4, [pc, #68]	; (82594 <board_init+0x68>)
   82550:	47a0      	blx	r4
   82552:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
   82556:	2055      	movs	r0, #85	; 0x55
   82558:	47a0      	blx	r4
   8255a:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
   8255e:	2056      	movs	r0, #86	; 0x56
   82560:	47a0      	blx	r4
   82562:	490d      	ldr	r1, [pc, #52]	; (82598 <board_init+0x6c>)
   82564:	2068      	movs	r0, #104	; 0x68
   82566:	47a0      	blx	r4
   82568:	490c      	ldr	r1, [pc, #48]	; (8259c <board_init+0x70>)
   8256a:	205c      	movs	r0, #92	; 0x5c
   8256c:	47a0      	blx	r4
   8256e:	4a0c      	ldr	r2, [pc, #48]	; (825a0 <board_init+0x74>)
   82570:	f44f 7140 	mov.w	r1, #768	; 0x300
   82574:	480b      	ldr	r0, [pc, #44]	; (825a4 <board_init+0x78>)
   82576:	4b0c      	ldr	r3, [pc, #48]	; (825a8 <board_init+0x7c>)
   82578:	4798      	blx	r3
   8257a:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
   8257e:	202b      	movs	r0, #43	; 0x2b
   82580:	47a0      	blx	r4
   82582:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
   82586:	202a      	movs	r0, #42	; 0x2a
   82588:	47a0      	blx	r4
   8258a:	bd10      	pop	{r4, pc}
   8258c:	400e1a50 	.word	0x400e1a50
   82590:	00082941 	.word	0x00082941
   82594:	0008264d 	.word	0x0008264d
   82598:	28000079 	.word	0x28000079
   8259c:	28000001 	.word	0x28000001
   825a0:	08000001 	.word	0x08000001
   825a4:	400e0e00 	.word	0x400e0e00
   825a8:	0008271d 	.word	0x0008271d

000825ac <pio_set_peripheral>:
   825ac:	6442      	str	r2, [r0, #68]	; 0x44
   825ae:	f1b1 5f80 	cmp.w	r1, #268435456	; 0x10000000
   825b2:	d016      	beq.n	825e2 <pio_set_peripheral+0x36>
   825b4:	d80b      	bhi.n	825ce <pio_set_peripheral+0x22>
   825b6:	b149      	cbz	r1, 825cc <pio_set_peripheral+0x20>
   825b8:	f1b1 6f00 	cmp.w	r1, #134217728	; 0x8000000
   825bc:	d105      	bne.n	825ca <pio_set_peripheral+0x1e>
   825be:	6f03      	ldr	r3, [r0, #112]	; 0x70
   825c0:	6f01      	ldr	r1, [r0, #112]	; 0x70
   825c2:	400b      	ands	r3, r1
   825c4:	ea23 0302 	bic.w	r3, r3, r2
   825c8:	6703      	str	r3, [r0, #112]	; 0x70
   825ca:	6042      	str	r2, [r0, #4]
   825cc:	4770      	bx	lr
   825ce:	f1b1 5f40 	cmp.w	r1, #805306368	; 0x30000000
   825d2:	d0fb      	beq.n	825cc <pio_set_peripheral+0x20>
   825d4:	f1b1 5f60 	cmp.w	r1, #939524096	; 0x38000000
   825d8:	d0f8      	beq.n	825cc <pio_set_peripheral+0x20>
   825da:	f1b1 5f20 	cmp.w	r1, #671088640	; 0x28000000
   825de:	d1f4      	bne.n	825ca <pio_set_peripheral+0x1e>
   825e0:	4770      	bx	lr
   825e2:	6f03      	ldr	r3, [r0, #112]	; 0x70
   825e4:	4313      	orrs	r3, r2
   825e6:	6703      	str	r3, [r0, #112]	; 0x70
   825e8:	e7ef      	b.n	825ca <pio_set_peripheral+0x1e>

000825ea <pio_set_input>:
   825ea:	6441      	str	r1, [r0, #68]	; 0x44
   825ec:	f012 0f01 	tst.w	r2, #1
   825f0:	bf14      	ite	ne
   825f2:	6641      	strne	r1, [r0, #100]	; 0x64
   825f4:	6601      	streq	r1, [r0, #96]	; 0x60
   825f6:	f012 0f0a 	tst.w	r2, #10
   825fa:	bf14      	ite	ne
   825fc:	6201      	strne	r1, [r0, #32]
   825fe:	6241      	streq	r1, [r0, #36]	; 0x24
   82600:	f012 0f02 	tst.w	r2, #2
   82604:	d107      	bne.n	82616 <pio_set_input+0x2c>
   82606:	f012 0f08 	tst.w	r2, #8
   8260a:	bf18      	it	ne
   8260c:	f8c0 1084 	strne.w	r1, [r0, #132]	; 0x84
   82610:	6141      	str	r1, [r0, #20]
   82612:	6001      	str	r1, [r0, #0]
   82614:	4770      	bx	lr
   82616:	f8c0 1080 	str.w	r1, [r0, #128]	; 0x80
   8261a:	e7f9      	b.n	82610 <pio_set_input+0x26>

0008261c <pio_set_output>:
   8261c:	b410      	push	{r4}
   8261e:	9c01      	ldr	r4, [sp, #4]
   82620:	6441      	str	r1, [r0, #68]	; 0x44
   82622:	b944      	cbnz	r4, 82636 <pio_set_output+0x1a>
   82624:	6601      	str	r1, [r0, #96]	; 0x60
   82626:	b143      	cbz	r3, 8263a <pio_set_output+0x1e>
   82628:	6501      	str	r1, [r0, #80]	; 0x50
   8262a:	b942      	cbnz	r2, 8263e <pio_set_output+0x22>
   8262c:	6341      	str	r1, [r0, #52]	; 0x34
   8262e:	6101      	str	r1, [r0, #16]
   82630:	6001      	str	r1, [r0, #0]
   82632:	bc10      	pop	{r4}
   82634:	4770      	bx	lr
   82636:	6641      	str	r1, [r0, #100]	; 0x64
   82638:	e7f5      	b.n	82626 <pio_set_output+0xa>
   8263a:	6541      	str	r1, [r0, #84]	; 0x54
   8263c:	e7f5      	b.n	8262a <pio_set_output+0xe>
   8263e:	6301      	str	r1, [r0, #48]	; 0x30
   82640:	e7f5      	b.n	8262e <pio_set_output+0x12>

00082642 <pio_get_interrupt_status>:
   82642:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
   82644:	4770      	bx	lr

00082646 <pio_get_interrupt_mask>:
   82646:	6c80      	ldr	r0, [r0, #72]	; 0x48
   82648:	4770      	bx	lr
	...

0008264c <pio_configure_pin>:
   8264c:	b570      	push	{r4, r5, r6, lr}
   8264e:	b082      	sub	sp, #8
   82650:	460d      	mov	r5, r1
   82652:	0943      	lsrs	r3, r0, #5
   82654:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
   82658:	f203 7307 	addw	r3, r3, #1799	; 0x707
   8265c:	025c      	lsls	r4, r3, #9
   8265e:	f001 43f0 	and.w	r3, r1, #2013265920	; 0x78000000
   82662:	f1b3 5f20 	cmp.w	r3, #671088640	; 0x28000000
   82666:	d031      	beq.n	826cc <pio_configure_pin+0x80>
   82668:	d816      	bhi.n	82698 <pio_configure_pin+0x4c>
   8266a:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
   8266e:	d01b      	beq.n	826a8 <pio_configure_pin+0x5c>
   82670:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
   82674:	d116      	bne.n	826a4 <pio_configure_pin+0x58>
   82676:	f000 001f 	and.w	r0, r0, #31
   8267a:	2601      	movs	r6, #1
   8267c:	4086      	lsls	r6, r0
   8267e:	4632      	mov	r2, r6
   82680:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
   82684:	4620      	mov	r0, r4
   82686:	4b22      	ldr	r3, [pc, #136]	; (82710 <pio_configure_pin+0xc4>)
   82688:	4798      	blx	r3
   8268a:	f015 0f01 	tst.w	r5, #1
   8268e:	bf14      	ite	ne
   82690:	6666      	strne	r6, [r4, #100]	; 0x64
   82692:	6626      	streq	r6, [r4, #96]	; 0x60
   82694:	2001      	movs	r0, #1
   82696:	e017      	b.n	826c8 <pio_configure_pin+0x7c>
   82698:	f1b3 5f40 	cmp.w	r3, #805306368	; 0x30000000
   8269c:	d021      	beq.n	826e2 <pio_configure_pin+0x96>
   8269e:	f1b3 5f60 	cmp.w	r3, #939524096	; 0x38000000
   826a2:	d01e      	beq.n	826e2 <pio_configure_pin+0x96>
   826a4:	2000      	movs	r0, #0
   826a6:	e00f      	b.n	826c8 <pio_configure_pin+0x7c>
   826a8:	f000 001f 	and.w	r0, r0, #31
   826ac:	2601      	movs	r6, #1
   826ae:	4086      	lsls	r6, r0
   826b0:	4632      	mov	r2, r6
   826b2:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
   826b6:	4620      	mov	r0, r4
   826b8:	4b15      	ldr	r3, [pc, #84]	; (82710 <pio_configure_pin+0xc4>)
   826ba:	4798      	blx	r3
   826bc:	f015 0f01 	tst.w	r5, #1
   826c0:	bf14      	ite	ne
   826c2:	6666      	strne	r6, [r4, #100]	; 0x64
   826c4:	6626      	streq	r6, [r4, #96]	; 0x60
   826c6:	2001      	movs	r0, #1
   826c8:	b002      	add	sp, #8
   826ca:	bd70      	pop	{r4, r5, r6, pc}
   826cc:	f000 011f 	and.w	r1, r0, #31
   826d0:	2601      	movs	r6, #1
   826d2:	462a      	mov	r2, r5
   826d4:	fa06 f101 	lsl.w	r1, r6, r1
   826d8:	4620      	mov	r0, r4
   826da:	4b0e      	ldr	r3, [pc, #56]	; (82714 <pio_configure_pin+0xc8>)
   826dc:	4798      	blx	r3
   826de:	4630      	mov	r0, r6
   826e0:	e7f2      	b.n	826c8 <pio_configure_pin+0x7c>
   826e2:	f005 5260 	and.w	r2, r5, #939524096	; 0x38000000
   826e6:	f000 011f 	and.w	r1, r0, #31
   826ea:	2601      	movs	r6, #1
   826ec:	ea05 0306 	and.w	r3, r5, r6
   826f0:	9300      	str	r3, [sp, #0]
   826f2:	f3c5 0380 	ubfx	r3, r5, #2, #1
   826f6:	f1b2 5f60 	cmp.w	r2, #939524096	; 0x38000000
   826fa:	bf14      	ite	ne
   826fc:	2200      	movne	r2, #0
   826fe:	2201      	moveq	r2, #1
   82700:	fa06 f101 	lsl.w	r1, r6, r1
   82704:	4620      	mov	r0, r4
   82706:	4c04      	ldr	r4, [pc, #16]	; (82718 <pio_configure_pin+0xcc>)
   82708:	47a0      	blx	r4
   8270a:	4630      	mov	r0, r6
   8270c:	e7dc      	b.n	826c8 <pio_configure_pin+0x7c>
   8270e:	bf00      	nop
   82710:	000825ad 	.word	0x000825ad
   82714:	000825eb 	.word	0x000825eb
   82718:	0008261d 	.word	0x0008261d

0008271c <pio_configure_pin_group>:
   8271c:	b570      	push	{r4, r5, r6, lr}
   8271e:	b082      	sub	sp, #8
   82720:	4605      	mov	r5, r0
   82722:	460e      	mov	r6, r1
   82724:	4614      	mov	r4, r2
   82726:	f002 43f0 	and.w	r3, r2, #2013265920	; 0x78000000
   8272a:	f1b3 5f20 	cmp.w	r3, #671088640	; 0x28000000
   8272e:	d027      	beq.n	82780 <pio_configure_pin_group+0x64>
   82730:	d811      	bhi.n	82756 <pio_configure_pin_group+0x3a>
   82732:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
   82736:	d016      	beq.n	82766 <pio_configure_pin_group+0x4a>
   82738:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
   8273c:	d111      	bne.n	82762 <pio_configure_pin_group+0x46>
   8273e:	460a      	mov	r2, r1
   82740:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
   82744:	4b19      	ldr	r3, [pc, #100]	; (827ac <pio_configure_pin_group+0x90>)
   82746:	4798      	blx	r3
   82748:	f014 0f01 	tst.w	r4, #1
   8274c:	bf14      	ite	ne
   8274e:	666e      	strne	r6, [r5, #100]	; 0x64
   82750:	662e      	streq	r6, [r5, #96]	; 0x60
   82752:	2001      	movs	r0, #1
   82754:	e012      	b.n	8277c <pio_configure_pin_group+0x60>
   82756:	f1b3 5f40 	cmp.w	r3, #805306368	; 0x30000000
   8275a:	d015      	beq.n	82788 <pio_configure_pin_group+0x6c>
   8275c:	f1b3 5f60 	cmp.w	r3, #939524096	; 0x38000000
   82760:	d012      	beq.n	82788 <pio_configure_pin_group+0x6c>
   82762:	2000      	movs	r0, #0
   82764:	e00a      	b.n	8277c <pio_configure_pin_group+0x60>
   82766:	460a      	mov	r2, r1
   82768:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
   8276c:	4b0f      	ldr	r3, [pc, #60]	; (827ac <pio_configure_pin_group+0x90>)
   8276e:	4798      	blx	r3
   82770:	f014 0f01 	tst.w	r4, #1
   82774:	bf14      	ite	ne
   82776:	666e      	strne	r6, [r5, #100]	; 0x64
   82778:	662e      	streq	r6, [r5, #96]	; 0x60
   8277a:	2001      	movs	r0, #1
   8277c:	b002      	add	sp, #8
   8277e:	bd70      	pop	{r4, r5, r6, pc}
   82780:	4b0b      	ldr	r3, [pc, #44]	; (827b0 <pio_configure_pin_group+0x94>)
   82782:	4798      	blx	r3
   82784:	2001      	movs	r0, #1
   82786:	e7f9      	b.n	8277c <pio_configure_pin_group+0x60>
   82788:	f004 5260 	and.w	r2, r4, #939524096	; 0x38000000
   8278c:	f004 0301 	and.w	r3, r4, #1
   82790:	9300      	str	r3, [sp, #0]
   82792:	f3c4 0380 	ubfx	r3, r4, #2, #1
   82796:	f1b2 5f60 	cmp.w	r2, #939524096	; 0x38000000
   8279a:	bf14      	ite	ne
   8279c:	2200      	movne	r2, #0
   8279e:	2201      	moveq	r2, #1
   827a0:	4631      	mov	r1, r6
   827a2:	4628      	mov	r0, r5
   827a4:	4c03      	ldr	r4, [pc, #12]	; (827b4 <pio_configure_pin_group+0x98>)
   827a6:	47a0      	blx	r4
   827a8:	2001      	movs	r0, #1
   827aa:	e7e7      	b.n	8277c <pio_configure_pin_group+0x60>
   827ac:	000825ad 	.word	0x000825ad
   827b0:	000825eb 	.word	0x000825eb
   827b4:	0008261d 	.word	0x0008261d

000827b8 <pio_handler_process>:
   827b8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   827bc:	4604      	mov	r4, r0
   827be:	4688      	mov	r8, r1
   827c0:	4b0e      	ldr	r3, [pc, #56]	; (827fc <pio_handler_process+0x44>)
   827c2:	4798      	blx	r3
   827c4:	4605      	mov	r5, r0
   827c6:	4620      	mov	r0, r4
   827c8:	4b0d      	ldr	r3, [pc, #52]	; (82800 <pio_handler_process+0x48>)
   827ca:	4798      	blx	r3
   827cc:	4005      	ands	r5, r0
   827ce:	d013      	beq.n	827f8 <pio_handler_process+0x40>
   827d0:	4c0c      	ldr	r4, [pc, #48]	; (82804 <pio_handler_process+0x4c>)
   827d2:	f104 0660 	add.w	r6, r4, #96	; 0x60
   827d6:	e003      	b.n	827e0 <pio_handler_process+0x28>
   827d8:	42b4      	cmp	r4, r6
   827da:	d00d      	beq.n	827f8 <pio_handler_process+0x40>
   827dc:	3410      	adds	r4, #16
   827de:	b15d      	cbz	r5, 827f8 <pio_handler_process+0x40>
   827e0:	6820      	ldr	r0, [r4, #0]
   827e2:	4540      	cmp	r0, r8
   827e4:	d1f8      	bne.n	827d8 <pio_handler_process+0x20>
   827e6:	6861      	ldr	r1, [r4, #4]
   827e8:	4229      	tst	r1, r5
   827ea:	d0f5      	beq.n	827d8 <pio_handler_process+0x20>
   827ec:	68e3      	ldr	r3, [r4, #12]
   827ee:	4798      	blx	r3
   827f0:	6863      	ldr	r3, [r4, #4]
   827f2:	ea25 0503 	bic.w	r5, r5, r3
   827f6:	e7ef      	b.n	827d8 <pio_handler_process+0x20>
   827f8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   827fc:	00082643 	.word	0x00082643
   82800:	00082647 	.word	0x00082647
   82804:	2007c2f0 	.word	0x2007c2f0

00082808 <PIOA_Handler>:
   82808:	b508      	push	{r3, lr}
   8280a:	210b      	movs	r1, #11
   8280c:	4801      	ldr	r0, [pc, #4]	; (82814 <PIOA_Handler+0xc>)
   8280e:	4b02      	ldr	r3, [pc, #8]	; (82818 <PIOA_Handler+0x10>)
   82810:	4798      	blx	r3
   82812:	bd08      	pop	{r3, pc}
   82814:	400e0e00 	.word	0x400e0e00
   82818:	000827b9 	.word	0x000827b9

0008281c <PIOB_Handler>:
   8281c:	b508      	push	{r3, lr}
   8281e:	210c      	movs	r1, #12
   82820:	4801      	ldr	r0, [pc, #4]	; (82828 <PIOB_Handler+0xc>)
   82822:	4b02      	ldr	r3, [pc, #8]	; (8282c <PIOB_Handler+0x10>)
   82824:	4798      	blx	r3
   82826:	bd08      	pop	{r3, pc}
   82828:	400e1000 	.word	0x400e1000
   8282c:	000827b9 	.word	0x000827b9

00082830 <PIOC_Handler>:
   82830:	b508      	push	{r3, lr}
   82832:	210d      	movs	r1, #13
   82834:	4801      	ldr	r0, [pc, #4]	; (8283c <PIOC_Handler+0xc>)
   82836:	4b02      	ldr	r3, [pc, #8]	; (82840 <PIOC_Handler+0x10>)
   82838:	4798      	blx	r3
   8283a:	bd08      	pop	{r3, pc}
   8283c:	400e1200 	.word	0x400e1200
   82840:	000827b9 	.word	0x000827b9

00082844 <PIOD_Handler>:
   82844:	b508      	push	{r3, lr}
   82846:	210e      	movs	r1, #14
   82848:	4801      	ldr	r0, [pc, #4]	; (82850 <PIOD_Handler+0xc>)
   8284a:	4b02      	ldr	r3, [pc, #8]	; (82854 <PIOD_Handler+0x10>)
   8284c:	4798      	blx	r3
   8284e:	bd08      	pop	{r3, pc}
   82850:	400e1400 	.word	0x400e1400
   82854:	000827b9 	.word	0x000827b9

00082858 <pmc_switch_mck_to_pllack>:
   82858:	4a17      	ldr	r2, [pc, #92]	; (828b8 <pmc_switch_mck_to_pllack+0x60>)
   8285a:	6b13      	ldr	r3, [r2, #48]	; 0x30
   8285c:	f023 0370 	bic.w	r3, r3, #112	; 0x70
   82860:	4318      	orrs	r0, r3
   82862:	6310      	str	r0, [r2, #48]	; 0x30
   82864:	6e93      	ldr	r3, [r2, #104]	; 0x68
   82866:	f013 0f08 	tst.w	r3, #8
   8286a:	d10a      	bne.n	82882 <pmc_switch_mck_to_pllack+0x2a>
   8286c:	f44f 6300 	mov.w	r3, #2048	; 0x800
   82870:	4911      	ldr	r1, [pc, #68]	; (828b8 <pmc_switch_mck_to_pllack+0x60>)
   82872:	6e8a      	ldr	r2, [r1, #104]	; 0x68
   82874:	f012 0f08 	tst.w	r2, #8
   82878:	d103      	bne.n	82882 <pmc_switch_mck_to_pllack+0x2a>
   8287a:	3b01      	subs	r3, #1
   8287c:	d1f9      	bne.n	82872 <pmc_switch_mck_to_pllack+0x1a>
   8287e:	2001      	movs	r0, #1
   82880:	4770      	bx	lr
   82882:	4a0d      	ldr	r2, [pc, #52]	; (828b8 <pmc_switch_mck_to_pllack+0x60>)
   82884:	6b13      	ldr	r3, [r2, #48]	; 0x30
   82886:	f023 0303 	bic.w	r3, r3, #3
   8288a:	f043 0302 	orr.w	r3, r3, #2
   8288e:	6313      	str	r3, [r2, #48]	; 0x30
   82890:	6e93      	ldr	r3, [r2, #104]	; 0x68
   82892:	f013 0f08 	tst.w	r3, #8
   82896:	d10a      	bne.n	828ae <pmc_switch_mck_to_pllack+0x56>
   82898:	f44f 6300 	mov.w	r3, #2048	; 0x800
   8289c:	4906      	ldr	r1, [pc, #24]	; (828b8 <pmc_switch_mck_to_pllack+0x60>)
   8289e:	6e8a      	ldr	r2, [r1, #104]	; 0x68
   828a0:	f012 0f08 	tst.w	r2, #8
   828a4:	d105      	bne.n	828b2 <pmc_switch_mck_to_pllack+0x5a>
   828a6:	3b01      	subs	r3, #1
   828a8:	d1f9      	bne.n	8289e <pmc_switch_mck_to_pllack+0x46>
   828aa:	2001      	movs	r0, #1
   828ac:	4770      	bx	lr
   828ae:	2000      	movs	r0, #0
   828b0:	4770      	bx	lr
   828b2:	2000      	movs	r0, #0
   828b4:	4770      	bx	lr
   828b6:	bf00      	nop
   828b8:	400e0600 	.word	0x400e0600

000828bc <pmc_switch_mainck_to_xtal>:
   828bc:	b9c8      	cbnz	r0, 828f2 <pmc_switch_mainck_to_xtal+0x36>
   828be:	4a11      	ldr	r2, [pc, #68]	; (82904 <pmc_switch_mainck_to_xtal+0x48>)
   828c0:	6a13      	ldr	r3, [r2, #32]
   828c2:	0209      	lsls	r1, r1, #8
   828c4:	b289      	uxth	r1, r1
   828c6:	f423 135c 	bic.w	r3, r3, #3604480	; 0x370000
   828ca:	f023 0303 	bic.w	r3, r3, #3
   828ce:	f443 135c 	orr.w	r3, r3, #3604480	; 0x370000
   828d2:	f043 0301 	orr.w	r3, r3, #1
   828d6:	430b      	orrs	r3, r1
   828d8:	6213      	str	r3, [r2, #32]
   828da:	6e93      	ldr	r3, [r2, #104]	; 0x68
   828dc:	f013 0f01 	tst.w	r3, #1
   828e0:	d0fb      	beq.n	828da <pmc_switch_mainck_to_xtal+0x1e>
   828e2:	4a08      	ldr	r2, [pc, #32]	; (82904 <pmc_switch_mainck_to_xtal+0x48>)
   828e4:	6a13      	ldr	r3, [r2, #32]
   828e6:	f043 739b 	orr.w	r3, r3, #20316160	; 0x1360000
   828ea:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
   828ee:	6213      	str	r3, [r2, #32]
   828f0:	4770      	bx	lr
   828f2:	4904      	ldr	r1, [pc, #16]	; (82904 <pmc_switch_mainck_to_xtal+0x48>)
   828f4:	6a0b      	ldr	r3, [r1, #32]
   828f6:	4a04      	ldr	r2, [pc, #16]	; (82908 <pmc_switch_mainck_to_xtal+0x4c>)
   828f8:	401a      	ands	r2, r3
   828fa:	4b04      	ldr	r3, [pc, #16]	; (8290c <pmc_switch_mainck_to_xtal+0x50>)
   828fc:	4313      	orrs	r3, r2
   828fe:	620b      	str	r3, [r1, #32]
   82900:	4770      	bx	lr
   82902:	bf00      	nop
   82904:	400e0600 	.word	0x400e0600
   82908:	fec8fffc 	.word	0xfec8fffc
   8290c:	01370002 	.word	0x01370002

00082910 <pmc_osc_is_ready_mainck>:
   82910:	4b02      	ldr	r3, [pc, #8]	; (8291c <pmc_osc_is_ready_mainck+0xc>)
   82912:	6e98      	ldr	r0, [r3, #104]	; 0x68
   82914:	f400 3080 	and.w	r0, r0, #65536	; 0x10000
   82918:	4770      	bx	lr
   8291a:	bf00      	nop
   8291c:	400e0600 	.word	0x400e0600

00082920 <pmc_disable_pllack>:
   82920:	f04f 5200 	mov.w	r2, #536870912	; 0x20000000
   82924:	4b01      	ldr	r3, [pc, #4]	; (8292c <pmc_disable_pllack+0xc>)
   82926:	629a      	str	r2, [r3, #40]	; 0x28
   82928:	4770      	bx	lr
   8292a:	bf00      	nop
   8292c:	400e0600 	.word	0x400e0600

00082930 <pmc_is_locked_pllack>:
   82930:	4b02      	ldr	r3, [pc, #8]	; (8293c <pmc_is_locked_pllack+0xc>)
   82932:	6e98      	ldr	r0, [r3, #104]	; 0x68
   82934:	f000 0002 	and.w	r0, r0, #2
   82938:	4770      	bx	lr
   8293a:	bf00      	nop
   8293c:	400e0600 	.word	0x400e0600

00082940 <pmc_enable_periph_clk>:
   82940:	f000 007f 	and.w	r0, r0, #127	; 0x7f
   82944:	4b05      	ldr	r3, [pc, #20]	; (8295c <pmc_enable_periph_clk+0x1c>)
   82946:	f8c3 010c 	str.w	r0, [r3, #268]	; 0x10c
   8294a:	f8d3 210c 	ldr.w	r2, [r3, #268]	; 0x10c
   8294e:	f042 2210 	orr.w	r2, r2, #268439552	; 0x10001000
   82952:	f8c3 210c 	str.w	r2, [r3, #268]	; 0x10c
   82956:	2000      	movs	r0, #0
   82958:	4770      	bx	lr
   8295a:	bf00      	nop
   8295c:	400e0600 	.word	0x400e0600

00082960 <Dummy_Handler>:
   82960:	e7fe      	b.n	82960 <Dummy_Handler>
	...

00082964 <Reset_Handler>:
   82964:	b508      	push	{r3, lr}
   82966:	4b1c      	ldr	r3, [pc, #112]	; (829d8 <Reset_Handler+0x74>)
   82968:	4a1c      	ldr	r2, [pc, #112]	; (829dc <Reset_Handler+0x78>)
   8296a:	429a      	cmp	r2, r3
   8296c:	d010      	beq.n	82990 <Reset_Handler+0x2c>
   8296e:	4b1c      	ldr	r3, [pc, #112]	; (829e0 <Reset_Handler+0x7c>)
   82970:	4a19      	ldr	r2, [pc, #100]	; (829d8 <Reset_Handler+0x74>)
   82972:	429a      	cmp	r2, r3
   82974:	d20c      	bcs.n	82990 <Reset_Handler+0x2c>
   82976:	3b01      	subs	r3, #1
   82978:	1a9b      	subs	r3, r3, r2
   8297a:	f023 0303 	bic.w	r3, r3, #3
   8297e:	3304      	adds	r3, #4
   82980:	4413      	add	r3, r2
   82982:	4916      	ldr	r1, [pc, #88]	; (829dc <Reset_Handler+0x78>)
   82984:	f851 0b04 	ldr.w	r0, [r1], #4
   82988:	f842 0b04 	str.w	r0, [r2], #4
   8298c:	429a      	cmp	r2, r3
   8298e:	d1f9      	bne.n	82984 <Reset_Handler+0x20>
   82990:	4b14      	ldr	r3, [pc, #80]	; (829e4 <Reset_Handler+0x80>)
   82992:	4a15      	ldr	r2, [pc, #84]	; (829e8 <Reset_Handler+0x84>)
   82994:	429a      	cmp	r2, r3
   82996:	d20a      	bcs.n	829ae <Reset_Handler+0x4a>
   82998:	3b01      	subs	r3, #1
   8299a:	1a9b      	subs	r3, r3, r2
   8299c:	f023 0303 	bic.w	r3, r3, #3
   829a0:	3304      	adds	r3, #4
   829a2:	4413      	add	r3, r2
   829a4:	2100      	movs	r1, #0
   829a6:	f842 1b04 	str.w	r1, [r2], #4
   829aa:	4293      	cmp	r3, r2
   829ac:	d1fb      	bne.n	829a6 <Reset_Handler+0x42>
   829ae:	4b0f      	ldr	r3, [pc, #60]	; (829ec <Reset_Handler+0x88>)
   829b0:	f023 4260 	bic.w	r2, r3, #3758096384	; 0xe0000000
   829b4:	f022 027f 	bic.w	r2, r2, #127	; 0x7f
   829b8:	490d      	ldr	r1, [pc, #52]	; (829f0 <Reset_Handler+0x8c>)
   829ba:	608a      	str	r2, [r1, #8]
   829bc:	f103 4360 	add.w	r3, r3, #3758096384	; 0xe0000000
   829c0:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
   829c4:	d203      	bcs.n	829ce <Reset_Handler+0x6a>
   829c6:	688b      	ldr	r3, [r1, #8]
   829c8:	f043 5300 	orr.w	r3, r3, #536870912	; 0x20000000
   829cc:	608b      	str	r3, [r1, #8]
   829ce:	4b09      	ldr	r3, [pc, #36]	; (829f4 <Reset_Handler+0x90>)
   829d0:	4798      	blx	r3
   829d2:	4b09      	ldr	r3, [pc, #36]	; (829f8 <Reset_Handler+0x94>)
   829d4:	4798      	blx	r3
   829d6:	e7fe      	b.n	829d6 <Reset_Handler+0x72>
   829d8:	20070000 	.word	0x20070000
   829dc:	00083da8 	.word	0x00083da8
   829e0:	20070974 	.word	0x20070974
   829e4:	2007c410 	.word	0x2007c410
   829e8:	20070974 	.word	0x20070974
   829ec:	00080000 	.word	0x00080000
   829f0:	e000ed00 	.word	0xe000ed00
   829f4:	00082b99 	.word	0x00082b99
   829f8:	00082b61 	.word	0x00082b61

000829fc <SystemCoreClockUpdate>:
   829fc:	4b3d      	ldr	r3, [pc, #244]	; (82af4 <SystemCoreClockUpdate+0xf8>)
   829fe:	6b1b      	ldr	r3, [r3, #48]	; 0x30
   82a00:	f003 0303 	and.w	r3, r3, #3
   82a04:	2b03      	cmp	r3, #3
   82a06:	d80e      	bhi.n	82a26 <SystemCoreClockUpdate+0x2a>
   82a08:	e8df f003 	tbb	[pc, r3]
   82a0c:	38381c02 	.word	0x38381c02
   82a10:	4b39      	ldr	r3, [pc, #228]	; (82af8 <SystemCoreClockUpdate+0xfc>)
   82a12:	695b      	ldr	r3, [r3, #20]
   82a14:	f013 0f80 	tst.w	r3, #128	; 0x80
   82a18:	bf14      	ite	ne
   82a1a:	f44f 4200 	movne.w	r2, #32768	; 0x8000
   82a1e:	f44f 42fa 	moveq.w	r2, #32000	; 0x7d00
   82a22:	4b36      	ldr	r3, [pc, #216]	; (82afc <SystemCoreClockUpdate+0x100>)
   82a24:	601a      	str	r2, [r3, #0]
   82a26:	4b33      	ldr	r3, [pc, #204]	; (82af4 <SystemCoreClockUpdate+0xf8>)
   82a28:	6b1b      	ldr	r3, [r3, #48]	; 0x30
   82a2a:	f003 0370 	and.w	r3, r3, #112	; 0x70
   82a2e:	2b70      	cmp	r3, #112	; 0x70
   82a30:	d057      	beq.n	82ae2 <SystemCoreClockUpdate+0xe6>
   82a32:	4b30      	ldr	r3, [pc, #192]	; (82af4 <SystemCoreClockUpdate+0xf8>)
   82a34:	6b1a      	ldr	r2, [r3, #48]	; 0x30
   82a36:	4931      	ldr	r1, [pc, #196]	; (82afc <SystemCoreClockUpdate+0x100>)
   82a38:	f3c2 1202 	ubfx	r2, r2, #4, #3
   82a3c:	680b      	ldr	r3, [r1, #0]
   82a3e:	40d3      	lsrs	r3, r2
   82a40:	600b      	str	r3, [r1, #0]
   82a42:	4770      	bx	lr
   82a44:	4b2b      	ldr	r3, [pc, #172]	; (82af4 <SystemCoreClockUpdate+0xf8>)
   82a46:	6a1b      	ldr	r3, [r3, #32]
   82a48:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
   82a4c:	d003      	beq.n	82a56 <SystemCoreClockUpdate+0x5a>
   82a4e:	4a2c      	ldr	r2, [pc, #176]	; (82b00 <SystemCoreClockUpdate+0x104>)
   82a50:	4b2a      	ldr	r3, [pc, #168]	; (82afc <SystemCoreClockUpdate+0x100>)
   82a52:	601a      	str	r2, [r3, #0]
   82a54:	e7e7      	b.n	82a26 <SystemCoreClockUpdate+0x2a>
   82a56:	4a2b      	ldr	r2, [pc, #172]	; (82b04 <SystemCoreClockUpdate+0x108>)
   82a58:	4b28      	ldr	r3, [pc, #160]	; (82afc <SystemCoreClockUpdate+0x100>)
   82a5a:	601a      	str	r2, [r3, #0]
   82a5c:	4b25      	ldr	r3, [pc, #148]	; (82af4 <SystemCoreClockUpdate+0xf8>)
   82a5e:	6a1b      	ldr	r3, [r3, #32]
   82a60:	f003 0370 	and.w	r3, r3, #112	; 0x70
   82a64:	2b10      	cmp	r3, #16
   82a66:	d005      	beq.n	82a74 <SystemCoreClockUpdate+0x78>
   82a68:	2b20      	cmp	r3, #32
   82a6a:	d1dc      	bne.n	82a26 <SystemCoreClockUpdate+0x2a>
   82a6c:	4a24      	ldr	r2, [pc, #144]	; (82b00 <SystemCoreClockUpdate+0x104>)
   82a6e:	4b23      	ldr	r3, [pc, #140]	; (82afc <SystemCoreClockUpdate+0x100>)
   82a70:	601a      	str	r2, [r3, #0]
   82a72:	e7d8      	b.n	82a26 <SystemCoreClockUpdate+0x2a>
   82a74:	4a24      	ldr	r2, [pc, #144]	; (82b08 <SystemCoreClockUpdate+0x10c>)
   82a76:	4b21      	ldr	r3, [pc, #132]	; (82afc <SystemCoreClockUpdate+0x100>)
   82a78:	601a      	str	r2, [r3, #0]
   82a7a:	e7d4      	b.n	82a26 <SystemCoreClockUpdate+0x2a>
   82a7c:	4b1d      	ldr	r3, [pc, #116]	; (82af4 <SystemCoreClockUpdate+0xf8>)
   82a7e:	6a1b      	ldr	r3, [r3, #32]
   82a80:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
   82a84:	d00c      	beq.n	82aa0 <SystemCoreClockUpdate+0xa4>
   82a86:	4a1e      	ldr	r2, [pc, #120]	; (82b00 <SystemCoreClockUpdate+0x104>)
   82a88:	4b1c      	ldr	r3, [pc, #112]	; (82afc <SystemCoreClockUpdate+0x100>)
   82a8a:	601a      	str	r2, [r3, #0]
   82a8c:	4b19      	ldr	r3, [pc, #100]	; (82af4 <SystemCoreClockUpdate+0xf8>)
   82a8e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
   82a90:	f003 0303 	and.w	r3, r3, #3
   82a94:	2b02      	cmp	r3, #2
   82a96:	d016      	beq.n	82ac6 <SystemCoreClockUpdate+0xca>
   82a98:	4a1c      	ldr	r2, [pc, #112]	; (82b0c <SystemCoreClockUpdate+0x110>)
   82a9a:	4b18      	ldr	r3, [pc, #96]	; (82afc <SystemCoreClockUpdate+0x100>)
   82a9c:	601a      	str	r2, [r3, #0]
   82a9e:	e7c2      	b.n	82a26 <SystemCoreClockUpdate+0x2a>
   82aa0:	4a18      	ldr	r2, [pc, #96]	; (82b04 <SystemCoreClockUpdate+0x108>)
   82aa2:	4b16      	ldr	r3, [pc, #88]	; (82afc <SystemCoreClockUpdate+0x100>)
   82aa4:	601a      	str	r2, [r3, #0]
   82aa6:	4b13      	ldr	r3, [pc, #76]	; (82af4 <SystemCoreClockUpdate+0xf8>)
   82aa8:	6a1b      	ldr	r3, [r3, #32]
   82aaa:	f003 0370 	and.w	r3, r3, #112	; 0x70
   82aae:	2b10      	cmp	r3, #16
   82ab0:	d005      	beq.n	82abe <SystemCoreClockUpdate+0xc2>
   82ab2:	2b20      	cmp	r3, #32
   82ab4:	d1ea      	bne.n	82a8c <SystemCoreClockUpdate+0x90>
   82ab6:	4a12      	ldr	r2, [pc, #72]	; (82b00 <SystemCoreClockUpdate+0x104>)
   82ab8:	4b10      	ldr	r3, [pc, #64]	; (82afc <SystemCoreClockUpdate+0x100>)
   82aba:	601a      	str	r2, [r3, #0]
   82abc:	e7e6      	b.n	82a8c <SystemCoreClockUpdate+0x90>
   82abe:	4a12      	ldr	r2, [pc, #72]	; (82b08 <SystemCoreClockUpdate+0x10c>)
   82ac0:	4b0e      	ldr	r3, [pc, #56]	; (82afc <SystemCoreClockUpdate+0x100>)
   82ac2:	601a      	str	r2, [r3, #0]
   82ac4:	e7e2      	b.n	82a8c <SystemCoreClockUpdate+0x90>
   82ac6:	4a0b      	ldr	r2, [pc, #44]	; (82af4 <SystemCoreClockUpdate+0xf8>)
   82ac8:	6a91      	ldr	r1, [r2, #40]	; 0x28
   82aca:	6a92      	ldr	r2, [r2, #40]	; 0x28
   82acc:	480b      	ldr	r0, [pc, #44]	; (82afc <SystemCoreClockUpdate+0x100>)
   82ace:	f3c1 410a 	ubfx	r1, r1, #16, #11
   82ad2:	6803      	ldr	r3, [r0, #0]
   82ad4:	fb01 3303 	mla	r3, r1, r3, r3
   82ad8:	b2d2      	uxtb	r2, r2
   82ada:	fbb3 f3f2 	udiv	r3, r3, r2
   82ade:	6003      	str	r3, [r0, #0]
   82ae0:	e7a1      	b.n	82a26 <SystemCoreClockUpdate+0x2a>
   82ae2:	4a06      	ldr	r2, [pc, #24]	; (82afc <SystemCoreClockUpdate+0x100>)
   82ae4:	6813      	ldr	r3, [r2, #0]
   82ae6:	490a      	ldr	r1, [pc, #40]	; (82b10 <SystemCoreClockUpdate+0x114>)
   82ae8:	fba1 1303 	umull	r1, r3, r1, r3
   82aec:	085b      	lsrs	r3, r3, #1
   82aee:	6013      	str	r3, [r2, #0]
   82af0:	4770      	bx	lr
   82af2:	bf00      	nop
   82af4:	400e0600 	.word	0x400e0600
   82af8:	400e1a10 	.word	0x400e1a10
   82afc:	20070130 	.word	0x20070130
   82b00:	00b71b00 	.word	0x00b71b00
   82b04:	003d0900 	.word	0x003d0900
   82b08:	007a1200 	.word	0x007a1200
   82b0c:	0e4e1c00 	.word	0x0e4e1c00
   82b10:	aaaaaaab 	.word	0xaaaaaaab

00082b14 <_sbrk>:
   82b14:	4b0a      	ldr	r3, [pc, #40]	; (82b40 <_sbrk+0x2c>)
   82b16:	681b      	ldr	r3, [r3, #0]
   82b18:	b153      	cbz	r3, 82b30 <_sbrk+0x1c>
   82b1a:	4b09      	ldr	r3, [pc, #36]	; (82b40 <_sbrk+0x2c>)
   82b1c:	681b      	ldr	r3, [r3, #0]
   82b1e:	181a      	adds	r2, r3, r0
   82b20:	4908      	ldr	r1, [pc, #32]	; (82b44 <_sbrk+0x30>)
   82b22:	4291      	cmp	r1, r2
   82b24:	db08      	blt.n	82b38 <_sbrk+0x24>
   82b26:	4610      	mov	r0, r2
   82b28:	4a05      	ldr	r2, [pc, #20]	; (82b40 <_sbrk+0x2c>)
   82b2a:	6010      	str	r0, [r2, #0]
   82b2c:	4618      	mov	r0, r3
   82b2e:	4770      	bx	lr
   82b30:	4a05      	ldr	r2, [pc, #20]	; (82b48 <_sbrk+0x34>)
   82b32:	4b03      	ldr	r3, [pc, #12]	; (82b40 <_sbrk+0x2c>)
   82b34:	601a      	str	r2, [r3, #0]
   82b36:	e7f0      	b.n	82b1a <_sbrk+0x6>
   82b38:	f04f 30ff 	mov.w	r0, #4294967295
   82b3c:	4770      	bx	lr
   82b3e:	bf00      	nop
   82b40:	2007c360 	.word	0x2007c360
   82b44:	20087ffc 	.word	0x20087ffc
   82b48:	2007e410 	.word	0x2007e410

00082b4c <_close>:
   82b4c:	f04f 30ff 	mov.w	r0, #4294967295
   82b50:	4770      	bx	lr

00082b52 <_fstat>:
   82b52:	f44f 5300 	mov.w	r3, #8192	; 0x2000
   82b56:	604b      	str	r3, [r1, #4]
   82b58:	2000      	movs	r0, #0
   82b5a:	4770      	bx	lr

00082b5c <_lseek>:
   82b5c:	2000      	movs	r0, #0
   82b5e:	4770      	bx	lr

00082b60 <main>:
#include <command_po.h>
#include <tc.h>


int main (void)
{
   82b60:	b508      	push	{r3, lr}
	/* System clock initialization */
	sysclk_init();
   82b62:	4b07      	ldr	r3, [pc, #28]	; (82b80 <main+0x20>)
   82b64:	4798      	blx	r3
	
	/* Board peripherals initialization */
	board_init();
   82b66:	4b07      	ldr	r3, [pc, #28]	; (82b84 <main+0x24>)
   82b68:	4798      	blx	r3
	
	/* Init tasks */
	init_blink();
   82b6a:	4b07      	ldr	r3, [pc, #28]	; (82b88 <main+0x28>)
   82b6c:	4798      	blx	r3
	init_cmd();
   82b6e:	4b07      	ldr	r3, [pc, #28]	; (82b8c <main+0x2c>)
   82b70:	4798      	blx	r3
	init_tc();
   82b72:	4b07      	ldr	r3, [pc, #28]	; (82b90 <main+0x30>)
   82b74:	4798      	blx	r3
	
	/* Start scheduler */
	vTaskStartScheduler();
   82b76:	4b07      	ldr	r3, [pc, #28]	; (82b94 <main+0x34>)
   82b78:	4798      	blx	r3
	
	/* Should never reach here ... */
	return 1;
}
   82b7a:	2001      	movs	r0, #1
   82b7c:	bd08      	pop	{r3, pc}
   82b7e:	bf00      	nop
   82b80:	000824c9 	.word	0x000824c9
   82b84:	0008252d 	.word	0x0008252d
   82b88:	00080515 	.word	0x00080515
   82b8c:	00080695 	.word	0x00080695
   82b90:	000802a9 	.word	0x000802a9
   82b94:	00081831 	.word	0x00081831

00082b98 <__libc_init_array>:
   82b98:	b570      	push	{r4, r5, r6, lr}
   82b9a:	4e0f      	ldr	r6, [pc, #60]	; (82bd8 <__libc_init_array+0x40>)
   82b9c:	4d0f      	ldr	r5, [pc, #60]	; (82bdc <__libc_init_array+0x44>)
   82b9e:	1b76      	subs	r6, r6, r5
   82ba0:	10b6      	asrs	r6, r6, #2
   82ba2:	bf18      	it	ne
   82ba4:	2400      	movne	r4, #0
   82ba6:	d005      	beq.n	82bb4 <__libc_init_array+0x1c>
   82ba8:	3401      	adds	r4, #1
   82baa:	f855 3b04 	ldr.w	r3, [r5], #4
   82bae:	4798      	blx	r3
   82bb0:	42a6      	cmp	r6, r4
   82bb2:	d1f9      	bne.n	82ba8 <__libc_init_array+0x10>
   82bb4:	4e0a      	ldr	r6, [pc, #40]	; (82be0 <__libc_init_array+0x48>)
   82bb6:	4d0b      	ldr	r5, [pc, #44]	; (82be4 <__libc_init_array+0x4c>)
   82bb8:	f001 f8e4 	bl	83d84 <_init>
   82bbc:	1b76      	subs	r6, r6, r5
   82bbe:	10b6      	asrs	r6, r6, #2
   82bc0:	bf18      	it	ne
   82bc2:	2400      	movne	r4, #0
   82bc4:	d006      	beq.n	82bd4 <__libc_init_array+0x3c>
   82bc6:	3401      	adds	r4, #1
   82bc8:	f855 3b04 	ldr.w	r3, [r5], #4
   82bcc:	4798      	blx	r3
   82bce:	42a6      	cmp	r6, r4
   82bd0:	d1f9      	bne.n	82bc6 <__libc_init_array+0x2e>
   82bd2:	bd70      	pop	{r4, r5, r6, pc}
   82bd4:	bd70      	pop	{r4, r5, r6, pc}
   82bd6:	bf00      	nop
   82bd8:	00083d90 	.word	0x00083d90
   82bdc:	00083d90 	.word	0x00083d90
   82be0:	00083d98 	.word	0x00083d98
   82be4:	00083d90 	.word	0x00083d90

00082be8 <memcpy>:
   82be8:	4684      	mov	ip, r0
   82bea:	ea41 0300 	orr.w	r3, r1, r0
   82bee:	f013 0303 	ands.w	r3, r3, #3
   82bf2:	d149      	bne.n	82c88 <memcpy+0xa0>
   82bf4:	3a40      	subs	r2, #64	; 0x40
   82bf6:	d323      	bcc.n	82c40 <memcpy+0x58>
   82bf8:	680b      	ldr	r3, [r1, #0]
   82bfa:	6003      	str	r3, [r0, #0]
   82bfc:	684b      	ldr	r3, [r1, #4]
   82bfe:	6043      	str	r3, [r0, #4]
   82c00:	688b      	ldr	r3, [r1, #8]
   82c02:	6083      	str	r3, [r0, #8]
   82c04:	68cb      	ldr	r3, [r1, #12]
   82c06:	60c3      	str	r3, [r0, #12]
   82c08:	690b      	ldr	r3, [r1, #16]
   82c0a:	6103      	str	r3, [r0, #16]
   82c0c:	694b      	ldr	r3, [r1, #20]
   82c0e:	6143      	str	r3, [r0, #20]
   82c10:	698b      	ldr	r3, [r1, #24]
   82c12:	6183      	str	r3, [r0, #24]
   82c14:	69cb      	ldr	r3, [r1, #28]
   82c16:	61c3      	str	r3, [r0, #28]
   82c18:	6a0b      	ldr	r3, [r1, #32]
   82c1a:	6203      	str	r3, [r0, #32]
   82c1c:	6a4b      	ldr	r3, [r1, #36]	; 0x24
   82c1e:	6243      	str	r3, [r0, #36]	; 0x24
   82c20:	6a8b      	ldr	r3, [r1, #40]	; 0x28
   82c22:	6283      	str	r3, [r0, #40]	; 0x28
   82c24:	6acb      	ldr	r3, [r1, #44]	; 0x2c
   82c26:	62c3      	str	r3, [r0, #44]	; 0x2c
   82c28:	6b0b      	ldr	r3, [r1, #48]	; 0x30
   82c2a:	6303      	str	r3, [r0, #48]	; 0x30
   82c2c:	6b4b      	ldr	r3, [r1, #52]	; 0x34
   82c2e:	6343      	str	r3, [r0, #52]	; 0x34
   82c30:	6b8b      	ldr	r3, [r1, #56]	; 0x38
   82c32:	6383      	str	r3, [r0, #56]	; 0x38
   82c34:	6bcb      	ldr	r3, [r1, #60]	; 0x3c
   82c36:	63c3      	str	r3, [r0, #60]	; 0x3c
   82c38:	3040      	adds	r0, #64	; 0x40
   82c3a:	3140      	adds	r1, #64	; 0x40
   82c3c:	3a40      	subs	r2, #64	; 0x40
   82c3e:	d2db      	bcs.n	82bf8 <memcpy+0x10>
   82c40:	3230      	adds	r2, #48	; 0x30
   82c42:	d30b      	bcc.n	82c5c <memcpy+0x74>
   82c44:	680b      	ldr	r3, [r1, #0]
   82c46:	6003      	str	r3, [r0, #0]
   82c48:	684b      	ldr	r3, [r1, #4]
   82c4a:	6043      	str	r3, [r0, #4]
   82c4c:	688b      	ldr	r3, [r1, #8]
   82c4e:	6083      	str	r3, [r0, #8]
   82c50:	68cb      	ldr	r3, [r1, #12]
   82c52:	60c3      	str	r3, [r0, #12]
   82c54:	3010      	adds	r0, #16
   82c56:	3110      	adds	r1, #16
   82c58:	3a10      	subs	r2, #16
   82c5a:	d2f3      	bcs.n	82c44 <memcpy+0x5c>
   82c5c:	320c      	adds	r2, #12
   82c5e:	d305      	bcc.n	82c6c <memcpy+0x84>
   82c60:	f851 3b04 	ldr.w	r3, [r1], #4
   82c64:	f840 3b04 	str.w	r3, [r0], #4
   82c68:	3a04      	subs	r2, #4
   82c6a:	d2f9      	bcs.n	82c60 <memcpy+0x78>
   82c6c:	3204      	adds	r2, #4
   82c6e:	d008      	beq.n	82c82 <memcpy+0x9a>
   82c70:	07d2      	lsls	r2, r2, #31
   82c72:	bf1c      	itt	ne
   82c74:	f811 3b01 	ldrbne.w	r3, [r1], #1
   82c78:	f800 3b01 	strbne.w	r3, [r0], #1
   82c7c:	d301      	bcc.n	82c82 <memcpy+0x9a>
   82c7e:	880b      	ldrh	r3, [r1, #0]
   82c80:	8003      	strh	r3, [r0, #0]
   82c82:	4660      	mov	r0, ip
   82c84:	4770      	bx	lr
   82c86:	bf00      	nop
   82c88:	2a08      	cmp	r2, #8
   82c8a:	d313      	bcc.n	82cb4 <memcpy+0xcc>
   82c8c:	078b      	lsls	r3, r1, #30
   82c8e:	d0b1      	beq.n	82bf4 <memcpy+0xc>
   82c90:	f010 0303 	ands.w	r3, r0, #3
   82c94:	d0ae      	beq.n	82bf4 <memcpy+0xc>
   82c96:	f1c3 0304 	rsb	r3, r3, #4
   82c9a:	1ad2      	subs	r2, r2, r3
   82c9c:	07db      	lsls	r3, r3, #31
   82c9e:	bf1c      	itt	ne
   82ca0:	f811 3b01 	ldrbne.w	r3, [r1], #1
   82ca4:	f800 3b01 	strbne.w	r3, [r0], #1
   82ca8:	d3a4      	bcc.n	82bf4 <memcpy+0xc>
   82caa:	f831 3b02 	ldrh.w	r3, [r1], #2
   82cae:	f820 3b02 	strh.w	r3, [r0], #2
   82cb2:	e79f      	b.n	82bf4 <memcpy+0xc>
   82cb4:	3a04      	subs	r2, #4
   82cb6:	d3d9      	bcc.n	82c6c <memcpy+0x84>
   82cb8:	3a01      	subs	r2, #1
   82cba:	f811 3b01 	ldrb.w	r3, [r1], #1
   82cbe:	f800 3b01 	strb.w	r3, [r0], #1
   82cc2:	d2f9      	bcs.n	82cb8 <memcpy+0xd0>
   82cc4:	780b      	ldrb	r3, [r1, #0]
   82cc6:	7003      	strb	r3, [r0, #0]
   82cc8:	784b      	ldrb	r3, [r1, #1]
   82cca:	7043      	strb	r3, [r0, #1]
   82ccc:	788b      	ldrb	r3, [r1, #2]
   82cce:	7083      	strb	r3, [r0, #2]
   82cd0:	4660      	mov	r0, ip
   82cd2:	4770      	bx	lr

00082cd4 <memset>:
   82cd4:	b470      	push	{r4, r5, r6}
   82cd6:	0786      	lsls	r6, r0, #30
   82cd8:	d046      	beq.n	82d68 <memset+0x94>
   82cda:	1e54      	subs	r4, r2, #1
   82cdc:	2a00      	cmp	r2, #0
   82cde:	d041      	beq.n	82d64 <memset+0x90>
   82ce0:	b2ca      	uxtb	r2, r1
   82ce2:	4603      	mov	r3, r0
   82ce4:	e002      	b.n	82cec <memset+0x18>
   82ce6:	f114 34ff 	adds.w	r4, r4, #4294967295
   82cea:	d33b      	bcc.n	82d64 <memset+0x90>
   82cec:	f803 2b01 	strb.w	r2, [r3], #1
   82cf0:	079d      	lsls	r5, r3, #30
   82cf2:	d1f8      	bne.n	82ce6 <memset+0x12>
   82cf4:	2c03      	cmp	r4, #3
   82cf6:	d92e      	bls.n	82d56 <memset+0x82>
   82cf8:	b2cd      	uxtb	r5, r1
   82cfa:	ea45 2505 	orr.w	r5, r5, r5, lsl #8
   82cfe:	2c0f      	cmp	r4, #15
   82d00:	ea45 4505 	orr.w	r5, r5, r5, lsl #16
   82d04:	d919      	bls.n	82d3a <memset+0x66>
   82d06:	4626      	mov	r6, r4
   82d08:	f103 0210 	add.w	r2, r3, #16
   82d0c:	3e10      	subs	r6, #16
   82d0e:	2e0f      	cmp	r6, #15
   82d10:	f842 5c10 	str.w	r5, [r2, #-16]
   82d14:	f842 5c0c 	str.w	r5, [r2, #-12]
   82d18:	f842 5c08 	str.w	r5, [r2, #-8]
   82d1c:	f842 5c04 	str.w	r5, [r2, #-4]
   82d20:	f102 0210 	add.w	r2, r2, #16
   82d24:	d8f2      	bhi.n	82d0c <memset+0x38>
   82d26:	f1a4 0210 	sub.w	r2, r4, #16
   82d2a:	f022 020f 	bic.w	r2, r2, #15
   82d2e:	f004 040f 	and.w	r4, r4, #15
   82d32:	3210      	adds	r2, #16
   82d34:	2c03      	cmp	r4, #3
   82d36:	4413      	add	r3, r2
   82d38:	d90d      	bls.n	82d56 <memset+0x82>
   82d3a:	461e      	mov	r6, r3
   82d3c:	4622      	mov	r2, r4
   82d3e:	3a04      	subs	r2, #4
   82d40:	2a03      	cmp	r2, #3
   82d42:	f846 5b04 	str.w	r5, [r6], #4
   82d46:	d8fa      	bhi.n	82d3e <memset+0x6a>
   82d48:	1f22      	subs	r2, r4, #4
   82d4a:	f022 0203 	bic.w	r2, r2, #3
   82d4e:	3204      	adds	r2, #4
   82d50:	4413      	add	r3, r2
   82d52:	f004 0403 	and.w	r4, r4, #3
   82d56:	b12c      	cbz	r4, 82d64 <memset+0x90>
   82d58:	b2c9      	uxtb	r1, r1
   82d5a:	441c      	add	r4, r3
   82d5c:	f803 1b01 	strb.w	r1, [r3], #1
   82d60:	429c      	cmp	r4, r3
   82d62:	d1fb      	bne.n	82d5c <memset+0x88>
   82d64:	bc70      	pop	{r4, r5, r6}
   82d66:	4770      	bx	lr
   82d68:	4614      	mov	r4, r2
   82d6a:	4603      	mov	r3, r0
   82d6c:	e7c2      	b.n	82cf4 <memset+0x20>
   82d6e:	bf00      	nop

00082d70 <setbuf>:
   82d70:	2900      	cmp	r1, #0
   82d72:	bf0c      	ite	eq
   82d74:	2202      	moveq	r2, #2
   82d76:	2200      	movne	r2, #0
   82d78:	f44f 6380 	mov.w	r3, #1024	; 0x400
   82d7c:	f000 b800 	b.w	82d80 <setvbuf>

00082d80 <setvbuf>:
   82d80:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   82d84:	4d61      	ldr	r5, [pc, #388]	; (82f0c <setvbuf+0x18c>)
   82d86:	b083      	sub	sp, #12
   82d88:	682d      	ldr	r5, [r5, #0]
   82d8a:	4604      	mov	r4, r0
   82d8c:	460f      	mov	r7, r1
   82d8e:	4690      	mov	r8, r2
   82d90:	461e      	mov	r6, r3
   82d92:	b115      	cbz	r5, 82d9a <setvbuf+0x1a>
   82d94:	6bab      	ldr	r3, [r5, #56]	; 0x38
   82d96:	2b00      	cmp	r3, #0
   82d98:	d064      	beq.n	82e64 <setvbuf+0xe4>
   82d9a:	f1b8 0f02 	cmp.w	r8, #2
   82d9e:	d006      	beq.n	82dae <setvbuf+0x2e>
   82da0:	f1b8 0f01 	cmp.w	r8, #1
   82da4:	f200 809f 	bhi.w	82ee6 <setvbuf+0x166>
   82da8:	2e00      	cmp	r6, #0
   82daa:	f2c0 809c 	blt.w	82ee6 <setvbuf+0x166>
   82dae:	6e63      	ldr	r3, [r4, #100]	; 0x64
   82db0:	07d8      	lsls	r0, r3, #31
   82db2:	d534      	bpl.n	82e1e <setvbuf+0x9e>
   82db4:	4621      	mov	r1, r4
   82db6:	4628      	mov	r0, r5
   82db8:	f000 f956 	bl	83068 <_fflush_r>
   82dbc:	6b21      	ldr	r1, [r4, #48]	; 0x30
   82dbe:	b141      	cbz	r1, 82dd2 <setvbuf+0x52>
   82dc0:	f104 0340 	add.w	r3, r4, #64	; 0x40
   82dc4:	4299      	cmp	r1, r3
   82dc6:	d002      	beq.n	82dce <setvbuf+0x4e>
   82dc8:	4628      	mov	r0, r5
   82dca:	f000 fa4b 	bl	83264 <_free_r>
   82dce:	2300      	movs	r3, #0
   82dd0:	6323      	str	r3, [r4, #48]	; 0x30
   82dd2:	2200      	movs	r2, #0
   82dd4:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   82dd8:	61a2      	str	r2, [r4, #24]
   82dda:	6062      	str	r2, [r4, #4]
   82ddc:	061a      	lsls	r2, r3, #24
   82dde:	d43a      	bmi.n	82e56 <setvbuf+0xd6>
   82de0:	f423 634a 	bic.w	r3, r3, #3232	; 0xca0
   82de4:	f023 0303 	bic.w	r3, r3, #3
   82de8:	f1b8 0f02 	cmp.w	r8, #2
   82dec:	81a3      	strh	r3, [r4, #12]
   82dee:	d01d      	beq.n	82e2c <setvbuf+0xac>
   82df0:	ab01      	add	r3, sp, #4
   82df2:	466a      	mov	r2, sp
   82df4:	4621      	mov	r1, r4
   82df6:	4628      	mov	r0, r5
   82df8:	f000 fb4a 	bl	83490 <__swhatbuf_r>
   82dfc:	89a3      	ldrh	r3, [r4, #12]
   82dfe:	4318      	orrs	r0, r3
   82e00:	81a0      	strh	r0, [r4, #12]
   82e02:	2e00      	cmp	r6, #0
   82e04:	d132      	bne.n	82e6c <setvbuf+0xec>
   82e06:	9e00      	ldr	r6, [sp, #0]
   82e08:	4630      	mov	r0, r6
   82e0a:	f000 fb6f 	bl	834ec <malloc>
   82e0e:	4607      	mov	r7, r0
   82e10:	2800      	cmp	r0, #0
   82e12:	d06b      	beq.n	82eec <setvbuf+0x16c>
   82e14:	89a3      	ldrh	r3, [r4, #12]
   82e16:	f043 0380 	orr.w	r3, r3, #128	; 0x80
   82e1a:	81a3      	strh	r3, [r4, #12]
   82e1c:	e028      	b.n	82e70 <setvbuf+0xf0>
   82e1e:	89a3      	ldrh	r3, [r4, #12]
   82e20:	0599      	lsls	r1, r3, #22
   82e22:	d4c7      	bmi.n	82db4 <setvbuf+0x34>
   82e24:	6da0      	ldr	r0, [r4, #88]	; 0x58
   82e26:	f000 fb2f 	bl	83488 <__retarget_lock_acquire_recursive>
   82e2a:	e7c3      	b.n	82db4 <setvbuf+0x34>
   82e2c:	2500      	movs	r5, #0
   82e2e:	2600      	movs	r6, #0
   82e30:	2001      	movs	r0, #1
   82e32:	6e61      	ldr	r1, [r4, #100]	; 0x64
   82e34:	f104 0243 	add.w	r2, r4, #67	; 0x43
   82e38:	f043 0302 	orr.w	r3, r3, #2
   82e3c:	60a6      	str	r6, [r4, #8]
   82e3e:	07ce      	lsls	r6, r1, #31
   82e40:	81a3      	strh	r3, [r4, #12]
   82e42:	6160      	str	r0, [r4, #20]
   82e44:	6022      	str	r2, [r4, #0]
   82e46:	6122      	str	r2, [r4, #16]
   82e48:	d401      	bmi.n	82e4e <setvbuf+0xce>
   82e4a:	0598      	lsls	r0, r3, #22
   82e4c:	d53e      	bpl.n	82ecc <setvbuf+0x14c>
   82e4e:	4628      	mov	r0, r5
   82e50:	b003      	add	sp, #12
   82e52:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   82e56:	6921      	ldr	r1, [r4, #16]
   82e58:	4628      	mov	r0, r5
   82e5a:	f000 fa03 	bl	83264 <_free_r>
   82e5e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   82e62:	e7bd      	b.n	82de0 <setvbuf+0x60>
   82e64:	4628      	mov	r0, r5
   82e66:	f000 f957 	bl	83118 <__sinit>
   82e6a:	e796      	b.n	82d9a <setvbuf+0x1a>
   82e6c:	2f00      	cmp	r7, #0
   82e6e:	d0cb      	beq.n	82e08 <setvbuf+0x88>
   82e70:	6bab      	ldr	r3, [r5, #56]	; 0x38
   82e72:	2b00      	cmp	r3, #0
   82e74:	d033      	beq.n	82ede <setvbuf+0x15e>
   82e76:	9b00      	ldr	r3, [sp, #0]
   82e78:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
   82e7c:	429e      	cmp	r6, r3
   82e7e:	bf1c      	itt	ne
   82e80:	f442 6200 	orrne.w	r2, r2, #2048	; 0x800
   82e84:	81a2      	strhne	r2, [r4, #12]
   82e86:	f1b8 0f01 	cmp.w	r8, #1
   82e8a:	bf04      	itt	eq
   82e8c:	f042 0201 	orreq.w	r2, r2, #1
   82e90:	81a2      	strheq	r2, [r4, #12]
   82e92:	b292      	uxth	r2, r2
   82e94:	f012 0308 	ands.w	r3, r2, #8
   82e98:	6027      	str	r7, [r4, #0]
   82e9a:	6127      	str	r7, [r4, #16]
   82e9c:	6166      	str	r6, [r4, #20]
   82e9e:	d00e      	beq.n	82ebe <setvbuf+0x13e>
   82ea0:	07d1      	lsls	r1, r2, #31
   82ea2:	d51a      	bpl.n	82eda <setvbuf+0x15a>
   82ea4:	2300      	movs	r3, #0
   82ea6:	6e65      	ldr	r5, [r4, #100]	; 0x64
   82ea8:	4276      	negs	r6, r6
   82eaa:	f015 0501 	ands.w	r5, r5, #1
   82eae:	61a6      	str	r6, [r4, #24]
   82eb0:	60a3      	str	r3, [r4, #8]
   82eb2:	d009      	beq.n	82ec8 <setvbuf+0x148>
   82eb4:	2500      	movs	r5, #0
   82eb6:	4628      	mov	r0, r5
   82eb8:	b003      	add	sp, #12
   82eba:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   82ebe:	60a3      	str	r3, [r4, #8]
   82ec0:	6e65      	ldr	r5, [r4, #100]	; 0x64
   82ec2:	f015 0501 	ands.w	r5, r5, #1
   82ec6:	d1f5      	bne.n	82eb4 <setvbuf+0x134>
   82ec8:	0593      	lsls	r3, r2, #22
   82eca:	d4c0      	bmi.n	82e4e <setvbuf+0xce>
   82ecc:	6da0      	ldr	r0, [r4, #88]	; 0x58
   82ece:	f000 fadd 	bl	8348c <__retarget_lock_release_recursive>
   82ed2:	4628      	mov	r0, r5
   82ed4:	b003      	add	sp, #12
   82ed6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   82eda:	60a6      	str	r6, [r4, #8]
   82edc:	e7f0      	b.n	82ec0 <setvbuf+0x140>
   82ede:	4628      	mov	r0, r5
   82ee0:	f000 f91a 	bl	83118 <__sinit>
   82ee4:	e7c7      	b.n	82e76 <setvbuf+0xf6>
   82ee6:	f04f 35ff 	mov.w	r5, #4294967295
   82eea:	e7b0      	b.n	82e4e <setvbuf+0xce>
   82eec:	f8dd 9000 	ldr.w	r9, [sp]
   82ef0:	45b1      	cmp	r9, r6
   82ef2:	d004      	beq.n	82efe <setvbuf+0x17e>
   82ef4:	4648      	mov	r0, r9
   82ef6:	f000 faf9 	bl	834ec <malloc>
   82efa:	4607      	mov	r7, r0
   82efc:	b920      	cbnz	r0, 82f08 <setvbuf+0x188>
   82efe:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   82f02:	f04f 35ff 	mov.w	r5, #4294967295
   82f06:	e792      	b.n	82e2e <setvbuf+0xae>
   82f08:	464e      	mov	r6, r9
   82f0a:	e783      	b.n	82e14 <setvbuf+0x94>
   82f0c:	20070134 	.word	0x20070134

00082f10 <register_fini>:
   82f10:	4b02      	ldr	r3, [pc, #8]	; (82f1c <register_fini+0xc>)
   82f12:	b113      	cbz	r3, 82f1a <register_fini+0xa>
   82f14:	4802      	ldr	r0, [pc, #8]	; (82f20 <register_fini+0x10>)
   82f16:	f000 b805 	b.w	82f24 <atexit>
   82f1a:	4770      	bx	lr
   82f1c:	00000000 	.word	0x00000000
   82f20:	00083191 	.word	0x00083191

00082f24 <atexit>:
   82f24:	2300      	movs	r3, #0
   82f26:	4601      	mov	r1, r0
   82f28:	461a      	mov	r2, r3
   82f2a:	4618      	mov	r0, r3
   82f2c:	f000 be00 	b.w	83b30 <__register_exitproc>

00082f30 <__sflush_r>:
   82f30:	f9b1 300c 	ldrsh.w	r3, [r1, #12]
   82f34:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   82f38:	b29a      	uxth	r2, r3
   82f3a:	460d      	mov	r5, r1
   82f3c:	0711      	lsls	r1, r2, #28
   82f3e:	4680      	mov	r8, r0
   82f40:	d43a      	bmi.n	82fb8 <__sflush_r+0x88>
   82f42:	686a      	ldr	r2, [r5, #4]
   82f44:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
   82f48:	2a00      	cmp	r2, #0
   82f4a:	81ab      	strh	r3, [r5, #12]
   82f4c:	dd70      	ble.n	83030 <__sflush_r+0x100>
   82f4e:	6aac      	ldr	r4, [r5, #40]	; 0x28
   82f50:	2c00      	cmp	r4, #0
   82f52:	d04a      	beq.n	82fea <__sflush_r+0xba>
   82f54:	2200      	movs	r2, #0
   82f56:	b29b      	uxth	r3, r3
   82f58:	f8d8 6000 	ldr.w	r6, [r8]
   82f5c:	f8c8 2000 	str.w	r2, [r8]
   82f60:	f413 5280 	ands.w	r2, r3, #4096	; 0x1000
   82f64:	d068      	beq.n	83038 <__sflush_r+0x108>
   82f66:	6d2a      	ldr	r2, [r5, #80]	; 0x50
   82f68:	075f      	lsls	r7, r3, #29
   82f6a:	d505      	bpl.n	82f78 <__sflush_r+0x48>
   82f6c:	6869      	ldr	r1, [r5, #4]
   82f6e:	6b2b      	ldr	r3, [r5, #48]	; 0x30
   82f70:	1a52      	subs	r2, r2, r1
   82f72:	b10b      	cbz	r3, 82f78 <__sflush_r+0x48>
   82f74:	6beb      	ldr	r3, [r5, #60]	; 0x3c
   82f76:	1ad2      	subs	r2, r2, r3
   82f78:	2300      	movs	r3, #0
   82f7a:	69e9      	ldr	r1, [r5, #28]
   82f7c:	4640      	mov	r0, r8
   82f7e:	47a0      	blx	r4
   82f80:	1c44      	adds	r4, r0, #1
   82f82:	d03d      	beq.n	83000 <__sflush_r+0xd0>
   82f84:	2100      	movs	r1, #0
   82f86:	f9b5 300c 	ldrsh.w	r3, [r5, #12]
   82f8a:	692a      	ldr	r2, [r5, #16]
   82f8c:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
   82f90:	81ab      	strh	r3, [r5, #12]
   82f92:	04db      	lsls	r3, r3, #19
   82f94:	6069      	str	r1, [r5, #4]
   82f96:	602a      	str	r2, [r5, #0]
   82f98:	d448      	bmi.n	8302c <__sflush_r+0xfc>
   82f9a:	6b29      	ldr	r1, [r5, #48]	; 0x30
   82f9c:	f8c8 6000 	str.w	r6, [r8]
   82fa0:	b319      	cbz	r1, 82fea <__sflush_r+0xba>
   82fa2:	f105 0340 	add.w	r3, r5, #64	; 0x40
   82fa6:	4299      	cmp	r1, r3
   82fa8:	d002      	beq.n	82fb0 <__sflush_r+0x80>
   82faa:	4640      	mov	r0, r8
   82fac:	f000 f95a 	bl	83264 <_free_r>
   82fb0:	2000      	movs	r0, #0
   82fb2:	6328      	str	r0, [r5, #48]	; 0x30
   82fb4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   82fb8:	692e      	ldr	r6, [r5, #16]
   82fba:	b1b6      	cbz	r6, 82fea <__sflush_r+0xba>
   82fbc:	0791      	lsls	r1, r2, #30
   82fbe:	bf18      	it	ne
   82fc0:	2300      	movne	r3, #0
   82fc2:	682c      	ldr	r4, [r5, #0]
   82fc4:	bf08      	it	eq
   82fc6:	696b      	ldreq	r3, [r5, #20]
   82fc8:	602e      	str	r6, [r5, #0]
   82fca:	1ba4      	subs	r4, r4, r6
   82fcc:	60ab      	str	r3, [r5, #8]
   82fce:	e00a      	b.n	82fe6 <__sflush_r+0xb6>
   82fd0:	4623      	mov	r3, r4
   82fd2:	4632      	mov	r2, r6
   82fd4:	6a6f      	ldr	r7, [r5, #36]	; 0x24
   82fd6:	69e9      	ldr	r1, [r5, #28]
   82fd8:	4640      	mov	r0, r8
   82fda:	47b8      	blx	r7
   82fdc:	2800      	cmp	r0, #0
   82fde:	eba4 0400 	sub.w	r4, r4, r0
   82fe2:	4406      	add	r6, r0
   82fe4:	dd04      	ble.n	82ff0 <__sflush_r+0xc0>
   82fe6:	2c00      	cmp	r4, #0
   82fe8:	dcf2      	bgt.n	82fd0 <__sflush_r+0xa0>
   82fea:	2000      	movs	r0, #0
   82fec:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   82ff0:	89ab      	ldrh	r3, [r5, #12]
   82ff2:	f04f 30ff 	mov.w	r0, #4294967295
   82ff6:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   82ffa:	81ab      	strh	r3, [r5, #12]
   82ffc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   83000:	f8d8 4000 	ldr.w	r4, [r8]
   83004:	2c1d      	cmp	r4, #29
   83006:	d8f3      	bhi.n	82ff0 <__sflush_r+0xc0>
   83008:	4b16      	ldr	r3, [pc, #88]	; (83064 <__sflush_r+0x134>)
   8300a:	40e3      	lsrs	r3, r4
   8300c:	43db      	mvns	r3, r3
   8300e:	f013 0301 	ands.w	r3, r3, #1
   83012:	d1ed      	bne.n	82ff0 <__sflush_r+0xc0>
   83014:	f9b5 200c 	ldrsh.w	r2, [r5, #12]
   83018:	6929      	ldr	r1, [r5, #16]
   8301a:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
   8301e:	81aa      	strh	r2, [r5, #12]
   83020:	04d2      	lsls	r2, r2, #19
   83022:	606b      	str	r3, [r5, #4]
   83024:	6029      	str	r1, [r5, #0]
   83026:	d5b8      	bpl.n	82f9a <__sflush_r+0x6a>
   83028:	2c00      	cmp	r4, #0
   8302a:	d1b6      	bne.n	82f9a <__sflush_r+0x6a>
   8302c:	6528      	str	r0, [r5, #80]	; 0x50
   8302e:	e7b4      	b.n	82f9a <__sflush_r+0x6a>
   83030:	6bea      	ldr	r2, [r5, #60]	; 0x3c
   83032:	2a00      	cmp	r2, #0
   83034:	dc8b      	bgt.n	82f4e <__sflush_r+0x1e>
   83036:	e7d8      	b.n	82fea <__sflush_r+0xba>
   83038:	2301      	movs	r3, #1
   8303a:	69e9      	ldr	r1, [r5, #28]
   8303c:	4640      	mov	r0, r8
   8303e:	47a0      	blx	r4
   83040:	1c43      	adds	r3, r0, #1
   83042:	4602      	mov	r2, r0
   83044:	d002      	beq.n	8304c <__sflush_r+0x11c>
   83046:	89ab      	ldrh	r3, [r5, #12]
   83048:	6aac      	ldr	r4, [r5, #40]	; 0x28
   8304a:	e78d      	b.n	82f68 <__sflush_r+0x38>
   8304c:	f8d8 3000 	ldr.w	r3, [r8]
   83050:	2b00      	cmp	r3, #0
   83052:	d0f8      	beq.n	83046 <__sflush_r+0x116>
   83054:	2b1d      	cmp	r3, #29
   83056:	d001      	beq.n	8305c <__sflush_r+0x12c>
   83058:	2b16      	cmp	r3, #22
   8305a:	d1c9      	bne.n	82ff0 <__sflush_r+0xc0>
   8305c:	f8c8 6000 	str.w	r6, [r8]
   83060:	e7c3      	b.n	82fea <__sflush_r+0xba>
   83062:	bf00      	nop
   83064:	20400001 	.word	0x20400001

00083068 <_fflush_r>:
   83068:	b538      	push	{r3, r4, r5, lr}
   8306a:	460d      	mov	r5, r1
   8306c:	4604      	mov	r4, r0
   8306e:	b108      	cbz	r0, 83074 <_fflush_r+0xc>
   83070:	6b83      	ldr	r3, [r0, #56]	; 0x38
   83072:	b1bb      	cbz	r3, 830a4 <_fflush_r+0x3c>
   83074:	f9b5 000c 	ldrsh.w	r0, [r5, #12]
   83078:	b188      	cbz	r0, 8309e <_fflush_r+0x36>
   8307a:	6e6b      	ldr	r3, [r5, #100]	; 0x64
   8307c:	07db      	lsls	r3, r3, #31
   8307e:	d401      	bmi.n	83084 <_fflush_r+0x1c>
   83080:	0581      	lsls	r1, r0, #22
   83082:	d517      	bpl.n	830b4 <_fflush_r+0x4c>
   83084:	4620      	mov	r0, r4
   83086:	4629      	mov	r1, r5
   83088:	f7ff ff52 	bl	82f30 <__sflush_r>
   8308c:	6e6b      	ldr	r3, [r5, #100]	; 0x64
   8308e:	4604      	mov	r4, r0
   83090:	07da      	lsls	r2, r3, #31
   83092:	d402      	bmi.n	8309a <_fflush_r+0x32>
   83094:	89ab      	ldrh	r3, [r5, #12]
   83096:	059b      	lsls	r3, r3, #22
   83098:	d507      	bpl.n	830aa <_fflush_r+0x42>
   8309a:	4620      	mov	r0, r4
   8309c:	bd38      	pop	{r3, r4, r5, pc}
   8309e:	4604      	mov	r4, r0
   830a0:	4620      	mov	r0, r4
   830a2:	bd38      	pop	{r3, r4, r5, pc}
   830a4:	f000 f838 	bl	83118 <__sinit>
   830a8:	e7e4      	b.n	83074 <_fflush_r+0xc>
   830aa:	6da8      	ldr	r0, [r5, #88]	; 0x58
   830ac:	f000 f9ee 	bl	8348c <__retarget_lock_release_recursive>
   830b0:	4620      	mov	r0, r4
   830b2:	bd38      	pop	{r3, r4, r5, pc}
   830b4:	6da8      	ldr	r0, [r5, #88]	; 0x58
   830b6:	f000 f9e7 	bl	83488 <__retarget_lock_acquire_recursive>
   830ba:	e7e3      	b.n	83084 <_fflush_r+0x1c>

000830bc <_cleanup_r>:
   830bc:	4901      	ldr	r1, [pc, #4]	; (830c4 <_cleanup_r+0x8>)
   830be:	f000 b9b7 	b.w	83430 <_fwalk_reent>
   830c2:	bf00      	nop
   830c4:	00083c19 	.word	0x00083c19

000830c8 <std.isra.0>:
   830c8:	2300      	movs	r3, #0
   830ca:	b510      	push	{r4, lr}
   830cc:	4604      	mov	r4, r0
   830ce:	8181      	strh	r1, [r0, #12]
   830d0:	81c2      	strh	r2, [r0, #14]
   830d2:	6003      	str	r3, [r0, #0]
   830d4:	6043      	str	r3, [r0, #4]
   830d6:	6083      	str	r3, [r0, #8]
   830d8:	6643      	str	r3, [r0, #100]	; 0x64
   830da:	6103      	str	r3, [r0, #16]
   830dc:	6143      	str	r3, [r0, #20]
   830de:	6183      	str	r3, [r0, #24]
   830e0:	4619      	mov	r1, r3
   830e2:	2208      	movs	r2, #8
   830e4:	305c      	adds	r0, #92	; 0x5c
   830e6:	f7ff fdf5 	bl	82cd4 <memset>
   830ea:	4807      	ldr	r0, [pc, #28]	; (83108 <std.isra.0+0x40>)
   830ec:	4907      	ldr	r1, [pc, #28]	; (8310c <std.isra.0+0x44>)
   830ee:	4a08      	ldr	r2, [pc, #32]	; (83110 <std.isra.0+0x48>)
   830f0:	4b08      	ldr	r3, [pc, #32]	; (83114 <std.isra.0+0x4c>)
   830f2:	6220      	str	r0, [r4, #32]
   830f4:	61e4      	str	r4, [r4, #28]
   830f6:	6261      	str	r1, [r4, #36]	; 0x24
   830f8:	62a2      	str	r2, [r4, #40]	; 0x28
   830fa:	62e3      	str	r3, [r4, #44]	; 0x2c
   830fc:	f104 0058 	add.w	r0, r4, #88	; 0x58
   83100:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
   83104:	f000 b9bc 	b.w	83480 <__retarget_lock_init_recursive>
   83108:	00083a7d 	.word	0x00083a7d
   8310c:	00083aa1 	.word	0x00083aa1
   83110:	00083add 	.word	0x00083add
   83114:	00083afd 	.word	0x00083afd

00083118 <__sinit>:
   83118:	b510      	push	{r4, lr}
   8311a:	4604      	mov	r4, r0
   8311c:	4814      	ldr	r0, [pc, #80]	; (83170 <__sinit+0x58>)
   8311e:	f000 f9b3 	bl	83488 <__retarget_lock_acquire_recursive>
   83122:	6ba2      	ldr	r2, [r4, #56]	; 0x38
   83124:	b9fa      	cbnz	r2, 83166 <__sinit+0x4e>
   83126:	2003      	movs	r0, #3
   83128:	4912      	ldr	r1, [pc, #72]	; (83174 <__sinit+0x5c>)
   8312a:	f504 733b 	add.w	r3, r4, #748	; 0x2ec
   8312e:	f8c4 32e8 	str.w	r3, [r4, #744]	; 0x2e8
   83132:	f8c4 22e0 	str.w	r2, [r4, #736]	; 0x2e0
   83136:	f8c4 02e4 	str.w	r0, [r4, #740]	; 0x2e4
   8313a:	63e1      	str	r1, [r4, #60]	; 0x3c
   8313c:	6860      	ldr	r0, [r4, #4]
   8313e:	2104      	movs	r1, #4
   83140:	f7ff ffc2 	bl	830c8 <std.isra.0>
   83144:	68a0      	ldr	r0, [r4, #8]
   83146:	2201      	movs	r2, #1
   83148:	2109      	movs	r1, #9
   8314a:	f7ff ffbd 	bl	830c8 <std.isra.0>
   8314e:	68e0      	ldr	r0, [r4, #12]
   83150:	2202      	movs	r2, #2
   83152:	2112      	movs	r1, #18
   83154:	f7ff ffb8 	bl	830c8 <std.isra.0>
   83158:	2301      	movs	r3, #1
   8315a:	4805      	ldr	r0, [pc, #20]	; (83170 <__sinit+0x58>)
   8315c:	63a3      	str	r3, [r4, #56]	; 0x38
   8315e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
   83162:	f000 b993 	b.w	8348c <__retarget_lock_release_recursive>
   83166:	4802      	ldr	r0, [pc, #8]	; (83170 <__sinit+0x58>)
   83168:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
   8316c:	f000 b98e 	b.w	8348c <__retarget_lock_release_recursive>
   83170:	2007c3f4 	.word	0x2007c3f4
   83174:	000830bd 	.word	0x000830bd

00083178 <__sfp_lock_acquire>:
   83178:	4801      	ldr	r0, [pc, #4]	; (83180 <__sfp_lock_acquire+0x8>)
   8317a:	f000 b985 	b.w	83488 <__retarget_lock_acquire_recursive>
   8317e:	bf00      	nop
   83180:	2007c408 	.word	0x2007c408

00083184 <__sfp_lock_release>:
   83184:	4801      	ldr	r0, [pc, #4]	; (8318c <__sfp_lock_release+0x8>)
   83186:	f000 b981 	b.w	8348c <__retarget_lock_release_recursive>
   8318a:	bf00      	nop
   8318c:	2007c408 	.word	0x2007c408

00083190 <__libc_fini_array>:
   83190:	b538      	push	{r3, r4, r5, lr}
   83192:	4c0a      	ldr	r4, [pc, #40]	; (831bc <__libc_fini_array+0x2c>)
   83194:	4d0a      	ldr	r5, [pc, #40]	; (831c0 <__libc_fini_array+0x30>)
   83196:	1b64      	subs	r4, r4, r5
   83198:	10a4      	asrs	r4, r4, #2
   8319a:	d00a      	beq.n	831b2 <__libc_fini_array+0x22>
   8319c:	f104 4380 	add.w	r3, r4, #1073741824	; 0x40000000
   831a0:	3b01      	subs	r3, #1
   831a2:	eb05 0583 	add.w	r5, r5, r3, lsl #2
   831a6:	3c01      	subs	r4, #1
   831a8:	f855 3904 	ldr.w	r3, [r5], #-4
   831ac:	4798      	blx	r3
   831ae:	2c00      	cmp	r4, #0
   831b0:	d1f9      	bne.n	831a6 <__libc_fini_array+0x16>
   831b2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
   831b6:	f000 bdef 	b.w	83d98 <_fini>
   831ba:	bf00      	nop
   831bc:	00083da8 	.word	0x00083da8
   831c0:	00083da4 	.word	0x00083da4

000831c4 <_malloc_trim_r>:
   831c4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   831c6:	460c      	mov	r4, r1
   831c8:	4f23      	ldr	r7, [pc, #140]	; (83258 <_malloc_trim_r+0x94>)
   831ca:	4606      	mov	r6, r0
   831cc:	f000 fc38 	bl	83a40 <__malloc_lock>
   831d0:	68bb      	ldr	r3, [r7, #8]
   831d2:	f5c4 617e 	rsb	r1, r4, #4064	; 0xfe0
   831d6:	685d      	ldr	r5, [r3, #4]
   831d8:	310f      	adds	r1, #15
   831da:	f025 0503 	bic.w	r5, r5, #3
   831de:	4429      	add	r1, r5
   831e0:	f421 617f 	bic.w	r1, r1, #4080	; 0xff0
   831e4:	f021 010f 	bic.w	r1, r1, #15
   831e8:	f5a1 5480 	sub.w	r4, r1, #4096	; 0x1000
   831ec:	f5b4 5f80 	cmp.w	r4, #4096	; 0x1000
   831f0:	db07      	blt.n	83202 <_malloc_trim_r+0x3e>
   831f2:	2100      	movs	r1, #0
   831f4:	4630      	mov	r0, r6
   831f6:	f000 fc2f 	bl	83a58 <_sbrk_r>
   831fa:	68bb      	ldr	r3, [r7, #8]
   831fc:	442b      	add	r3, r5
   831fe:	4298      	cmp	r0, r3
   83200:	d004      	beq.n	8320c <_malloc_trim_r+0x48>
   83202:	4630      	mov	r0, r6
   83204:	f000 fc22 	bl	83a4c <__malloc_unlock>
   83208:	2000      	movs	r0, #0
   8320a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   8320c:	4261      	negs	r1, r4
   8320e:	4630      	mov	r0, r6
   83210:	f000 fc22 	bl	83a58 <_sbrk_r>
   83214:	3001      	adds	r0, #1
   83216:	d00d      	beq.n	83234 <_malloc_trim_r+0x70>
   83218:	4b10      	ldr	r3, [pc, #64]	; (8325c <_malloc_trim_r+0x98>)
   8321a:	68ba      	ldr	r2, [r7, #8]
   8321c:	6819      	ldr	r1, [r3, #0]
   8321e:	1b2d      	subs	r5, r5, r4
   83220:	f045 0501 	orr.w	r5, r5, #1
   83224:	4630      	mov	r0, r6
   83226:	1b09      	subs	r1, r1, r4
   83228:	6055      	str	r5, [r2, #4]
   8322a:	6019      	str	r1, [r3, #0]
   8322c:	f000 fc0e 	bl	83a4c <__malloc_unlock>
   83230:	2001      	movs	r0, #1
   83232:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   83234:	2100      	movs	r1, #0
   83236:	4630      	mov	r0, r6
   83238:	f000 fc0e 	bl	83a58 <_sbrk_r>
   8323c:	68ba      	ldr	r2, [r7, #8]
   8323e:	1a83      	subs	r3, r0, r2
   83240:	2b0f      	cmp	r3, #15
   83242:	ddde      	ble.n	83202 <_malloc_trim_r+0x3e>
   83244:	4c06      	ldr	r4, [pc, #24]	; (83260 <_malloc_trim_r+0x9c>)
   83246:	4905      	ldr	r1, [pc, #20]	; (8325c <_malloc_trim_r+0x98>)
   83248:	6824      	ldr	r4, [r4, #0]
   8324a:	f043 0301 	orr.w	r3, r3, #1
   8324e:	1b00      	subs	r0, r0, r4
   83250:	6053      	str	r3, [r2, #4]
   83252:	6008      	str	r0, [r1, #0]
   83254:	e7d5      	b.n	83202 <_malloc_trim_r+0x3e>
   83256:	bf00      	nop
   83258:	20070564 	.word	0x20070564
   8325c:	2007c364 	.word	0x2007c364
   83260:	2007096c 	.word	0x2007096c

00083264 <_free_r>:
   83264:	2900      	cmp	r1, #0
   83266:	d044      	beq.n	832f2 <_free_r+0x8e>
   83268:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   8326c:	460d      	mov	r5, r1
   8326e:	4680      	mov	r8, r0
   83270:	f000 fbe6 	bl	83a40 <__malloc_lock>
   83274:	f855 7c04 	ldr.w	r7, [r5, #-4]
   83278:	4969      	ldr	r1, [pc, #420]	; (83420 <_free_r+0x1bc>)
   8327a:	f1a5 0408 	sub.w	r4, r5, #8
   8327e:	f027 0301 	bic.w	r3, r7, #1
   83282:	18e2      	adds	r2, r4, r3
   83284:	688e      	ldr	r6, [r1, #8]
   83286:	6850      	ldr	r0, [r2, #4]
   83288:	42b2      	cmp	r2, r6
   8328a:	f020 0003 	bic.w	r0, r0, #3
   8328e:	d05e      	beq.n	8334e <_free_r+0xea>
   83290:	07fe      	lsls	r6, r7, #31
   83292:	6050      	str	r0, [r2, #4]
   83294:	d40b      	bmi.n	832ae <_free_r+0x4a>
   83296:	f855 7c08 	ldr.w	r7, [r5, #-8]
   8329a:	f101 0e08 	add.w	lr, r1, #8
   8329e:	1be4      	subs	r4, r4, r7
   832a0:	68a5      	ldr	r5, [r4, #8]
   832a2:	443b      	add	r3, r7
   832a4:	4575      	cmp	r5, lr
   832a6:	d06d      	beq.n	83384 <_free_r+0x120>
   832a8:	68e7      	ldr	r7, [r4, #12]
   832aa:	60ef      	str	r7, [r5, #12]
   832ac:	60bd      	str	r5, [r7, #8]
   832ae:	1815      	adds	r5, r2, r0
   832b0:	686d      	ldr	r5, [r5, #4]
   832b2:	07ed      	lsls	r5, r5, #31
   832b4:	d53e      	bpl.n	83334 <_free_r+0xd0>
   832b6:	f043 0201 	orr.w	r2, r3, #1
   832ba:	6062      	str	r2, [r4, #4]
   832bc:	50e3      	str	r3, [r4, r3]
   832be:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
   832c2:	d217      	bcs.n	832f4 <_free_r+0x90>
   832c4:	2201      	movs	r2, #1
   832c6:	08db      	lsrs	r3, r3, #3
   832c8:	1098      	asrs	r0, r3, #2
   832ca:	684d      	ldr	r5, [r1, #4]
   832cc:	4413      	add	r3, r2
   832ce:	f851 7033 	ldr.w	r7, [r1, r3, lsl #3]
   832d2:	4082      	lsls	r2, r0
   832d4:	eb01 00c3 	add.w	r0, r1, r3, lsl #3
   832d8:	432a      	orrs	r2, r5
   832da:	3808      	subs	r0, #8
   832dc:	60e0      	str	r0, [r4, #12]
   832de:	60a7      	str	r7, [r4, #8]
   832e0:	604a      	str	r2, [r1, #4]
   832e2:	f841 4033 	str.w	r4, [r1, r3, lsl #3]
   832e6:	60fc      	str	r4, [r7, #12]
   832e8:	4640      	mov	r0, r8
   832ea:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   832ee:	f000 bbad 	b.w	83a4c <__malloc_unlock>
   832f2:	4770      	bx	lr
   832f4:	0a5a      	lsrs	r2, r3, #9
   832f6:	2a04      	cmp	r2, #4
   832f8:	d852      	bhi.n	833a0 <_free_r+0x13c>
   832fa:	099a      	lsrs	r2, r3, #6
   832fc:	f102 0739 	add.w	r7, r2, #57	; 0x39
   83300:	00ff      	lsls	r7, r7, #3
   83302:	f102 0538 	add.w	r5, r2, #56	; 0x38
   83306:	19c8      	adds	r0, r1, r7
   83308:	59ca      	ldr	r2, [r1, r7]
   8330a:	3808      	subs	r0, #8
   8330c:	4290      	cmp	r0, r2
   8330e:	d04f      	beq.n	833b0 <_free_r+0x14c>
   83310:	6851      	ldr	r1, [r2, #4]
   83312:	f021 0103 	bic.w	r1, r1, #3
   83316:	428b      	cmp	r3, r1
   83318:	d232      	bcs.n	83380 <_free_r+0x11c>
   8331a:	6892      	ldr	r2, [r2, #8]
   8331c:	4290      	cmp	r0, r2
   8331e:	d1f7      	bne.n	83310 <_free_r+0xac>
   83320:	68c3      	ldr	r3, [r0, #12]
   83322:	60a0      	str	r0, [r4, #8]
   83324:	60e3      	str	r3, [r4, #12]
   83326:	609c      	str	r4, [r3, #8]
   83328:	60c4      	str	r4, [r0, #12]
   8332a:	4640      	mov	r0, r8
   8332c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   83330:	f000 bb8c 	b.w	83a4c <__malloc_unlock>
   83334:	6895      	ldr	r5, [r2, #8]
   83336:	4f3b      	ldr	r7, [pc, #236]	; (83424 <_free_r+0x1c0>)
   83338:	4403      	add	r3, r0
   8333a:	42bd      	cmp	r5, r7
   8333c:	d040      	beq.n	833c0 <_free_r+0x15c>
   8333e:	68d0      	ldr	r0, [r2, #12]
   83340:	f043 0201 	orr.w	r2, r3, #1
   83344:	60e8      	str	r0, [r5, #12]
   83346:	6085      	str	r5, [r0, #8]
   83348:	6062      	str	r2, [r4, #4]
   8334a:	50e3      	str	r3, [r4, r3]
   8334c:	e7b7      	b.n	832be <_free_r+0x5a>
   8334e:	07ff      	lsls	r7, r7, #31
   83350:	4403      	add	r3, r0
   83352:	d407      	bmi.n	83364 <_free_r+0x100>
   83354:	f855 5c08 	ldr.w	r5, [r5, #-8]
   83358:	1b64      	subs	r4, r4, r5
   8335a:	68e2      	ldr	r2, [r4, #12]
   8335c:	68a0      	ldr	r0, [r4, #8]
   8335e:	442b      	add	r3, r5
   83360:	60c2      	str	r2, [r0, #12]
   83362:	6090      	str	r0, [r2, #8]
   83364:	4a30      	ldr	r2, [pc, #192]	; (83428 <_free_r+0x1c4>)
   83366:	f043 0001 	orr.w	r0, r3, #1
   8336a:	6812      	ldr	r2, [r2, #0]
   8336c:	6060      	str	r0, [r4, #4]
   8336e:	4293      	cmp	r3, r2
   83370:	608c      	str	r4, [r1, #8]
   83372:	d3b9      	bcc.n	832e8 <_free_r+0x84>
   83374:	4b2d      	ldr	r3, [pc, #180]	; (8342c <_free_r+0x1c8>)
   83376:	4640      	mov	r0, r8
   83378:	6819      	ldr	r1, [r3, #0]
   8337a:	f7ff ff23 	bl	831c4 <_malloc_trim_r>
   8337e:	e7b3      	b.n	832e8 <_free_r+0x84>
   83380:	4610      	mov	r0, r2
   83382:	e7cd      	b.n	83320 <_free_r+0xbc>
   83384:	1811      	adds	r1, r2, r0
   83386:	6849      	ldr	r1, [r1, #4]
   83388:	07c9      	lsls	r1, r1, #31
   8338a:	d444      	bmi.n	83416 <_free_r+0x1b2>
   8338c:	6891      	ldr	r1, [r2, #8]
   8338e:	4403      	add	r3, r0
   83390:	68d2      	ldr	r2, [r2, #12]
   83392:	f043 0001 	orr.w	r0, r3, #1
   83396:	60ca      	str	r2, [r1, #12]
   83398:	6091      	str	r1, [r2, #8]
   8339a:	6060      	str	r0, [r4, #4]
   8339c:	50e3      	str	r3, [r4, r3]
   8339e:	e7a3      	b.n	832e8 <_free_r+0x84>
   833a0:	2a14      	cmp	r2, #20
   833a2:	d816      	bhi.n	833d2 <_free_r+0x16e>
   833a4:	f102 075c 	add.w	r7, r2, #92	; 0x5c
   833a8:	00ff      	lsls	r7, r7, #3
   833aa:	f102 055b 	add.w	r5, r2, #91	; 0x5b
   833ae:	e7aa      	b.n	83306 <_free_r+0xa2>
   833b0:	2301      	movs	r3, #1
   833b2:	10aa      	asrs	r2, r5, #2
   833b4:	684d      	ldr	r5, [r1, #4]
   833b6:	4093      	lsls	r3, r2
   833b8:	432b      	orrs	r3, r5
   833ba:	604b      	str	r3, [r1, #4]
   833bc:	4603      	mov	r3, r0
   833be:	e7b0      	b.n	83322 <_free_r+0xbe>
   833c0:	f043 0201 	orr.w	r2, r3, #1
   833c4:	614c      	str	r4, [r1, #20]
   833c6:	610c      	str	r4, [r1, #16]
   833c8:	60e5      	str	r5, [r4, #12]
   833ca:	60a5      	str	r5, [r4, #8]
   833cc:	6062      	str	r2, [r4, #4]
   833ce:	50e3      	str	r3, [r4, r3]
   833d0:	e78a      	b.n	832e8 <_free_r+0x84>
   833d2:	2a54      	cmp	r2, #84	; 0x54
   833d4:	d806      	bhi.n	833e4 <_free_r+0x180>
   833d6:	0b1a      	lsrs	r2, r3, #12
   833d8:	f102 076f 	add.w	r7, r2, #111	; 0x6f
   833dc:	00ff      	lsls	r7, r7, #3
   833de:	f102 056e 	add.w	r5, r2, #110	; 0x6e
   833e2:	e790      	b.n	83306 <_free_r+0xa2>
   833e4:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
   833e8:	d806      	bhi.n	833f8 <_free_r+0x194>
   833ea:	0bda      	lsrs	r2, r3, #15
   833ec:	f102 0778 	add.w	r7, r2, #120	; 0x78
   833f0:	00ff      	lsls	r7, r7, #3
   833f2:	f102 0577 	add.w	r5, r2, #119	; 0x77
   833f6:	e786      	b.n	83306 <_free_r+0xa2>
   833f8:	f240 5054 	movw	r0, #1364	; 0x554
   833fc:	4282      	cmp	r2, r0
   833fe:	d806      	bhi.n	8340e <_free_r+0x1aa>
   83400:	0c9a      	lsrs	r2, r3, #18
   83402:	f102 077d 	add.w	r7, r2, #125	; 0x7d
   83406:	00ff      	lsls	r7, r7, #3
   83408:	f102 057c 	add.w	r5, r2, #124	; 0x7c
   8340c:	e77b      	b.n	83306 <_free_r+0xa2>
   8340e:	f44f 777e 	mov.w	r7, #1016	; 0x3f8
   83412:	257e      	movs	r5, #126	; 0x7e
   83414:	e777      	b.n	83306 <_free_r+0xa2>
   83416:	f043 0101 	orr.w	r1, r3, #1
   8341a:	6061      	str	r1, [r4, #4]
   8341c:	6013      	str	r3, [r2, #0]
   8341e:	e763      	b.n	832e8 <_free_r+0x84>
   83420:	20070564 	.word	0x20070564
   83424:	2007056c 	.word	0x2007056c
   83428:	20070970 	.word	0x20070970
   8342c:	2007c394 	.word	0x2007c394

00083430 <_fwalk_reent>:
   83430:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   83434:	f510 7638 	adds.w	r6, r0, #736	; 0x2e0
   83438:	d01e      	beq.n	83478 <_fwalk_reent+0x48>
   8343a:	4688      	mov	r8, r1
   8343c:	4607      	mov	r7, r0
   8343e:	f04f 0900 	mov.w	r9, #0
   83442:	6875      	ldr	r5, [r6, #4]
   83444:	68b4      	ldr	r4, [r6, #8]
   83446:	3d01      	subs	r5, #1
   83448:	d410      	bmi.n	8346c <_fwalk_reent+0x3c>
   8344a:	89a3      	ldrh	r3, [r4, #12]
   8344c:	3d01      	subs	r5, #1
   8344e:	2b01      	cmp	r3, #1
   83450:	d908      	bls.n	83464 <_fwalk_reent+0x34>
   83452:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
   83456:	3301      	adds	r3, #1
   83458:	d004      	beq.n	83464 <_fwalk_reent+0x34>
   8345a:	4621      	mov	r1, r4
   8345c:	4638      	mov	r0, r7
   8345e:	47c0      	blx	r8
   83460:	ea49 0900 	orr.w	r9, r9, r0
   83464:	1c6b      	adds	r3, r5, #1
   83466:	f104 0468 	add.w	r4, r4, #104	; 0x68
   8346a:	d1ee      	bne.n	8344a <_fwalk_reent+0x1a>
   8346c:	6836      	ldr	r6, [r6, #0]
   8346e:	2e00      	cmp	r6, #0
   83470:	d1e7      	bne.n	83442 <_fwalk_reent+0x12>
   83472:	4648      	mov	r0, r9
   83474:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   83478:	46b1      	mov	r9, r6
   8347a:	4648      	mov	r0, r9
   8347c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}

00083480 <__retarget_lock_init_recursive>:
   83480:	4770      	bx	lr
   83482:	bf00      	nop

00083484 <__retarget_lock_close_recursive>:
   83484:	4770      	bx	lr
   83486:	bf00      	nop

00083488 <__retarget_lock_acquire_recursive>:
   83488:	4770      	bx	lr
   8348a:	bf00      	nop

0008348c <__retarget_lock_release_recursive>:
   8348c:	4770      	bx	lr
   8348e:	bf00      	nop

00083490 <__swhatbuf_r>:
   83490:	b570      	push	{r4, r5, r6, lr}
   83492:	460c      	mov	r4, r1
   83494:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
   83498:	b090      	sub	sp, #64	; 0x40
   8349a:	2900      	cmp	r1, #0
   8349c:	4615      	mov	r5, r2
   8349e:	461e      	mov	r6, r3
   834a0:	db14      	blt.n	834cc <__swhatbuf_r+0x3c>
   834a2:	aa01      	add	r2, sp, #4
   834a4:	f000 fc1a 	bl	83cdc <_fstat_r>
   834a8:	2800      	cmp	r0, #0
   834aa:	db0f      	blt.n	834cc <__swhatbuf_r+0x3c>
   834ac:	9a02      	ldr	r2, [sp, #8]
   834ae:	f44f 6380 	mov.w	r3, #1024	; 0x400
   834b2:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
   834b6:	f5a2 5200 	sub.w	r2, r2, #8192	; 0x2000
   834ba:	fab2 f282 	clz	r2, r2
   834be:	f44f 6000 	mov.w	r0, #2048	; 0x800
   834c2:	0952      	lsrs	r2, r2, #5
   834c4:	6032      	str	r2, [r6, #0]
   834c6:	602b      	str	r3, [r5, #0]
   834c8:	b010      	add	sp, #64	; 0x40
   834ca:	bd70      	pop	{r4, r5, r6, pc}
   834cc:	2300      	movs	r3, #0
   834ce:	89a2      	ldrh	r2, [r4, #12]
   834d0:	6033      	str	r3, [r6, #0]
   834d2:	f012 0080 	ands.w	r0, r2, #128	; 0x80
   834d6:	d004      	beq.n	834e2 <__swhatbuf_r+0x52>
   834d8:	2240      	movs	r2, #64	; 0x40
   834da:	4618      	mov	r0, r3
   834dc:	602a      	str	r2, [r5, #0]
   834de:	b010      	add	sp, #64	; 0x40
   834e0:	bd70      	pop	{r4, r5, r6, pc}
   834e2:	f44f 6380 	mov.w	r3, #1024	; 0x400
   834e6:	602b      	str	r3, [r5, #0]
   834e8:	b010      	add	sp, #64	; 0x40
   834ea:	bd70      	pop	{r4, r5, r6, pc}

000834ec <malloc>:
   834ec:	4b02      	ldr	r3, [pc, #8]	; (834f8 <malloc+0xc>)
   834ee:	4601      	mov	r1, r0
   834f0:	6818      	ldr	r0, [r3, #0]
   834f2:	f000 b803 	b.w	834fc <_malloc_r>
   834f6:	bf00      	nop
   834f8:	20070134 	.word	0x20070134

000834fc <_malloc_r>:
   834fc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   83500:	f101 060b 	add.w	r6, r1, #11
   83504:	2e16      	cmp	r6, #22
   83506:	b083      	sub	sp, #12
   83508:	4605      	mov	r5, r0
   8350a:	f240 809e 	bls.w	8364a <_malloc_r+0x14e>
   8350e:	f036 0607 	bics.w	r6, r6, #7
   83512:	f100 80bd 	bmi.w	83690 <_malloc_r+0x194>
   83516:	42b1      	cmp	r1, r6
   83518:	f200 80ba 	bhi.w	83690 <_malloc_r+0x194>
   8351c:	f000 fa90 	bl	83a40 <__malloc_lock>
   83520:	f5b6 7ffc 	cmp.w	r6, #504	; 0x1f8
   83524:	f0c0 8285 	bcc.w	83a32 <_malloc_r+0x536>
   83528:	0a73      	lsrs	r3, r6, #9
   8352a:	f000 80b8 	beq.w	8369e <_malloc_r+0x1a2>
   8352e:	2b04      	cmp	r3, #4
   83530:	f200 816c 	bhi.w	8380c <_malloc_r+0x310>
   83534:	09b3      	lsrs	r3, r6, #6
   83536:	f103 0039 	add.w	r0, r3, #57	; 0x39
   8353a:	f103 0e38 	add.w	lr, r3, #56	; 0x38
   8353e:	00c1      	lsls	r1, r0, #3
   83540:	4fb8      	ldr	r7, [pc, #736]	; (83824 <_malloc_r+0x328>)
   83542:	4439      	add	r1, r7
   83544:	684c      	ldr	r4, [r1, #4]
   83546:	3908      	subs	r1, #8
   83548:	42a1      	cmp	r1, r4
   8354a:	d106      	bne.n	8355a <_malloc_r+0x5e>
   8354c:	e00c      	b.n	83568 <_malloc_r+0x6c>
   8354e:	2a00      	cmp	r2, #0
   83550:	f280 80ab 	bge.w	836aa <_malloc_r+0x1ae>
   83554:	68e4      	ldr	r4, [r4, #12]
   83556:	42a1      	cmp	r1, r4
   83558:	d006      	beq.n	83568 <_malloc_r+0x6c>
   8355a:	6863      	ldr	r3, [r4, #4]
   8355c:	f023 0303 	bic.w	r3, r3, #3
   83560:	1b9a      	subs	r2, r3, r6
   83562:	2a0f      	cmp	r2, #15
   83564:	ddf3      	ble.n	8354e <_malloc_r+0x52>
   83566:	4670      	mov	r0, lr
   83568:	693c      	ldr	r4, [r7, #16]
   8356a:	f8df e2cc 	ldr.w	lr, [pc, #716]	; 83838 <_malloc_r+0x33c>
   8356e:	4574      	cmp	r4, lr
   83570:	f000 819e 	beq.w	838b0 <_malloc_r+0x3b4>
   83574:	6863      	ldr	r3, [r4, #4]
   83576:	f023 0303 	bic.w	r3, r3, #3
   8357a:	1b9a      	subs	r2, r3, r6
   8357c:	2a0f      	cmp	r2, #15
   8357e:	f300 8183 	bgt.w	83888 <_malloc_r+0x38c>
   83582:	2a00      	cmp	r2, #0
   83584:	f8c7 e014 	str.w	lr, [r7, #20]
   83588:	f8c7 e010 	str.w	lr, [r7, #16]
   8358c:	f280 8091 	bge.w	836b2 <_malloc_r+0x1b6>
   83590:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
   83594:	f080 8154 	bcs.w	83840 <_malloc_r+0x344>
   83598:	2201      	movs	r2, #1
   8359a:	08db      	lsrs	r3, r3, #3
   8359c:	6879      	ldr	r1, [r7, #4]
   8359e:	ea4f 0ca3 	mov.w	ip, r3, asr #2
   835a2:	4413      	add	r3, r2
   835a4:	f857 8033 	ldr.w	r8, [r7, r3, lsl #3]
   835a8:	fa02 f20c 	lsl.w	r2, r2, ip
   835ac:	eb07 0cc3 	add.w	ip, r7, r3, lsl #3
   835b0:	430a      	orrs	r2, r1
   835b2:	f1ac 0108 	sub.w	r1, ip, #8
   835b6:	60e1      	str	r1, [r4, #12]
   835b8:	f8c4 8008 	str.w	r8, [r4, #8]
   835bc:	607a      	str	r2, [r7, #4]
   835be:	f847 4033 	str.w	r4, [r7, r3, lsl #3]
   835c2:	f8c8 400c 	str.w	r4, [r8, #12]
   835c6:	2401      	movs	r4, #1
   835c8:	1083      	asrs	r3, r0, #2
   835ca:	409c      	lsls	r4, r3
   835cc:	4294      	cmp	r4, r2
   835ce:	d87d      	bhi.n	836cc <_malloc_r+0x1d0>
   835d0:	4214      	tst	r4, r2
   835d2:	d106      	bne.n	835e2 <_malloc_r+0xe6>
   835d4:	f020 0003 	bic.w	r0, r0, #3
   835d8:	0064      	lsls	r4, r4, #1
   835da:	4214      	tst	r4, r2
   835dc:	f100 0004 	add.w	r0, r0, #4
   835e0:	d0fa      	beq.n	835d8 <_malloc_r+0xdc>
   835e2:	eb07 09c0 	add.w	r9, r7, r0, lsl #3
   835e6:	46cc      	mov	ip, r9
   835e8:	4680      	mov	r8, r0
   835ea:	f8dc 300c 	ldr.w	r3, [ip, #12]
   835ee:	459c      	cmp	ip, r3
   835f0:	d107      	bne.n	83602 <_malloc_r+0x106>
   835f2:	e15f      	b.n	838b4 <_malloc_r+0x3b8>
   835f4:	2a00      	cmp	r2, #0
   835f6:	f280 816d 	bge.w	838d4 <_malloc_r+0x3d8>
   835fa:	68db      	ldr	r3, [r3, #12]
   835fc:	459c      	cmp	ip, r3
   835fe:	f000 8159 	beq.w	838b4 <_malloc_r+0x3b8>
   83602:	6859      	ldr	r1, [r3, #4]
   83604:	f021 0103 	bic.w	r1, r1, #3
   83608:	1b8a      	subs	r2, r1, r6
   8360a:	2a0f      	cmp	r2, #15
   8360c:	ddf2      	ble.n	835f4 <_malloc_r+0xf8>
   8360e:	68dc      	ldr	r4, [r3, #12]
   83610:	f8d3 c008 	ldr.w	ip, [r3, #8]
   83614:	f046 0801 	orr.w	r8, r6, #1
   83618:	4628      	mov	r0, r5
   8361a:	441e      	add	r6, r3
   8361c:	f042 0501 	orr.w	r5, r2, #1
   83620:	f8c3 8004 	str.w	r8, [r3, #4]
   83624:	f8cc 400c 	str.w	r4, [ip, #12]
   83628:	f8c4 c008 	str.w	ip, [r4, #8]
   8362c:	617e      	str	r6, [r7, #20]
   8362e:	613e      	str	r6, [r7, #16]
   83630:	f8c6 e00c 	str.w	lr, [r6, #12]
   83634:	f8c6 e008 	str.w	lr, [r6, #8]
   83638:	6075      	str	r5, [r6, #4]
   8363a:	505a      	str	r2, [r3, r1]
   8363c:	9300      	str	r3, [sp, #0]
   8363e:	f000 fa05 	bl	83a4c <__malloc_unlock>
   83642:	9b00      	ldr	r3, [sp, #0]
   83644:	f103 0408 	add.w	r4, r3, #8
   83648:	e01e      	b.n	83688 <_malloc_r+0x18c>
   8364a:	2910      	cmp	r1, #16
   8364c:	d820      	bhi.n	83690 <_malloc_r+0x194>
   8364e:	f000 f9f7 	bl	83a40 <__malloc_lock>
   83652:	2610      	movs	r6, #16
   83654:	2318      	movs	r3, #24
   83656:	2002      	movs	r0, #2
   83658:	4f72      	ldr	r7, [pc, #456]	; (83824 <_malloc_r+0x328>)
   8365a:	443b      	add	r3, r7
   8365c:	685c      	ldr	r4, [r3, #4]
   8365e:	f1a3 0208 	sub.w	r2, r3, #8
   83662:	4294      	cmp	r4, r2
   83664:	f000 812f 	beq.w	838c6 <_malloc_r+0x3ca>
   83668:	6863      	ldr	r3, [r4, #4]
   8366a:	68e1      	ldr	r1, [r4, #12]
   8366c:	f023 0303 	bic.w	r3, r3, #3
   83670:	4423      	add	r3, r4
   83672:	685a      	ldr	r2, [r3, #4]
   83674:	68a6      	ldr	r6, [r4, #8]
   83676:	f042 0201 	orr.w	r2, r2, #1
   8367a:	60f1      	str	r1, [r6, #12]
   8367c:	4628      	mov	r0, r5
   8367e:	608e      	str	r6, [r1, #8]
   83680:	605a      	str	r2, [r3, #4]
   83682:	f000 f9e3 	bl	83a4c <__malloc_unlock>
   83686:	3408      	adds	r4, #8
   83688:	4620      	mov	r0, r4
   8368a:	b003      	add	sp, #12
   8368c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   83690:	2400      	movs	r4, #0
   83692:	230c      	movs	r3, #12
   83694:	4620      	mov	r0, r4
   83696:	602b      	str	r3, [r5, #0]
   83698:	b003      	add	sp, #12
   8369a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   8369e:	2040      	movs	r0, #64	; 0x40
   836a0:	f44f 7100 	mov.w	r1, #512	; 0x200
   836a4:	f04f 0e3f 	mov.w	lr, #63	; 0x3f
   836a8:	e74a      	b.n	83540 <_malloc_r+0x44>
   836aa:	4423      	add	r3, r4
   836ac:	685a      	ldr	r2, [r3, #4]
   836ae:	68e1      	ldr	r1, [r4, #12]
   836b0:	e7e0      	b.n	83674 <_malloc_r+0x178>
   836b2:	4423      	add	r3, r4
   836b4:	685a      	ldr	r2, [r3, #4]
   836b6:	4628      	mov	r0, r5
   836b8:	f042 0201 	orr.w	r2, r2, #1
   836bc:	605a      	str	r2, [r3, #4]
   836be:	3408      	adds	r4, #8
   836c0:	f000 f9c4 	bl	83a4c <__malloc_unlock>
   836c4:	4620      	mov	r0, r4
   836c6:	b003      	add	sp, #12
   836c8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   836cc:	68bc      	ldr	r4, [r7, #8]
   836ce:	6863      	ldr	r3, [r4, #4]
   836d0:	f023 0803 	bic.w	r8, r3, #3
   836d4:	45b0      	cmp	r8, r6
   836d6:	d304      	bcc.n	836e2 <_malloc_r+0x1e6>
   836d8:	eba8 0306 	sub.w	r3, r8, r6
   836dc:	2b0f      	cmp	r3, #15
   836de:	f300 8085 	bgt.w	837ec <_malloc_r+0x2f0>
   836e2:	f8df 9158 	ldr.w	r9, [pc, #344]	; 8383c <_malloc_r+0x340>
   836e6:	4b50      	ldr	r3, [pc, #320]	; (83828 <_malloc_r+0x32c>)
   836e8:	f8d9 2000 	ldr.w	r2, [r9]
   836ec:	681b      	ldr	r3, [r3, #0]
   836ee:	3201      	adds	r2, #1
   836f0:	4433      	add	r3, r6
   836f2:	eb04 0a08 	add.w	sl, r4, r8
   836f6:	f000 8154 	beq.w	839a2 <_malloc_r+0x4a6>
   836fa:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
   836fe:	330f      	adds	r3, #15
   83700:	f423 6b7f 	bic.w	fp, r3, #4080	; 0xff0
   83704:	f02b 0b0f 	bic.w	fp, fp, #15
   83708:	4659      	mov	r1, fp
   8370a:	4628      	mov	r0, r5
   8370c:	f000 f9a4 	bl	83a58 <_sbrk_r>
   83710:	1c41      	adds	r1, r0, #1
   83712:	4602      	mov	r2, r0
   83714:	f000 80fb 	beq.w	8390e <_malloc_r+0x412>
   83718:	4582      	cmp	sl, r0
   8371a:	f200 80f6 	bhi.w	8390a <_malloc_r+0x40e>
   8371e:	4b43      	ldr	r3, [pc, #268]	; (8382c <_malloc_r+0x330>)
   83720:	6819      	ldr	r1, [r3, #0]
   83722:	4459      	add	r1, fp
   83724:	6019      	str	r1, [r3, #0]
   83726:	f000 814c 	beq.w	839c2 <_malloc_r+0x4c6>
   8372a:	f8d9 0000 	ldr.w	r0, [r9]
   8372e:	3001      	adds	r0, #1
   83730:	bf1b      	ittet	ne
   83732:	eba2 0a0a 	subne.w	sl, r2, sl
   83736:	4451      	addne	r1, sl
   83738:	f8c9 2000 	streq.w	r2, [r9]
   8373c:	6019      	strne	r1, [r3, #0]
   8373e:	f012 0107 	ands.w	r1, r2, #7
   83742:	f000 8114 	beq.w	8396e <_malloc_r+0x472>
   83746:	f1c1 0008 	rsb	r0, r1, #8
   8374a:	f5c1 5180 	rsb	r1, r1, #4096	; 0x1000
   8374e:	4402      	add	r2, r0
   83750:	3108      	adds	r1, #8
   83752:	eb02 090b 	add.w	r9, r2, fp
   83756:	f3c9 090b 	ubfx	r9, r9, #0, #12
   8375a:	eba1 0909 	sub.w	r9, r1, r9
   8375e:	4649      	mov	r1, r9
   83760:	4628      	mov	r0, r5
   83762:	9301      	str	r3, [sp, #4]
   83764:	9200      	str	r2, [sp, #0]
   83766:	f000 f977 	bl	83a58 <_sbrk_r>
   8376a:	1c43      	adds	r3, r0, #1
   8376c:	e89d 000c 	ldmia.w	sp, {r2, r3}
   83770:	f000 8142 	beq.w	839f8 <_malloc_r+0x4fc>
   83774:	1a80      	subs	r0, r0, r2
   83776:	4448      	add	r0, r9
   83778:	f040 0001 	orr.w	r0, r0, #1
   8377c:	6819      	ldr	r1, [r3, #0]
   8377e:	42bc      	cmp	r4, r7
   83780:	4449      	add	r1, r9
   83782:	60ba      	str	r2, [r7, #8]
   83784:	6019      	str	r1, [r3, #0]
   83786:	6050      	str	r0, [r2, #4]
   83788:	d017      	beq.n	837ba <_malloc_r+0x2be>
   8378a:	f1b8 0f0f 	cmp.w	r8, #15
   8378e:	f240 80fa 	bls.w	83986 <_malloc_r+0x48a>
   83792:	f04f 0c05 	mov.w	ip, #5
   83796:	6862      	ldr	r2, [r4, #4]
   83798:	f1a8 000c 	sub.w	r0, r8, #12
   8379c:	f020 0007 	bic.w	r0, r0, #7
   837a0:	f002 0201 	and.w	r2, r2, #1
   837a4:	eb04 0e00 	add.w	lr, r4, r0
   837a8:	4302      	orrs	r2, r0
   837aa:	280f      	cmp	r0, #15
   837ac:	6062      	str	r2, [r4, #4]
   837ae:	f8ce c004 	str.w	ip, [lr, #4]
   837b2:	f8ce c008 	str.w	ip, [lr, #8]
   837b6:	f200 8116 	bhi.w	839e6 <_malloc_r+0x4ea>
   837ba:	4b1d      	ldr	r3, [pc, #116]	; (83830 <_malloc_r+0x334>)
   837bc:	68bc      	ldr	r4, [r7, #8]
   837be:	681a      	ldr	r2, [r3, #0]
   837c0:	4291      	cmp	r1, r2
   837c2:	bf88      	it	hi
   837c4:	6019      	strhi	r1, [r3, #0]
   837c6:	4b1b      	ldr	r3, [pc, #108]	; (83834 <_malloc_r+0x338>)
   837c8:	681a      	ldr	r2, [r3, #0]
   837ca:	4291      	cmp	r1, r2
   837cc:	6862      	ldr	r2, [r4, #4]
   837ce:	bf88      	it	hi
   837d0:	6019      	strhi	r1, [r3, #0]
   837d2:	f022 0203 	bic.w	r2, r2, #3
   837d6:	4296      	cmp	r6, r2
   837d8:	eba2 0306 	sub.w	r3, r2, r6
   837dc:	d801      	bhi.n	837e2 <_malloc_r+0x2e6>
   837de:	2b0f      	cmp	r3, #15
   837e0:	dc04      	bgt.n	837ec <_malloc_r+0x2f0>
   837e2:	4628      	mov	r0, r5
   837e4:	f000 f932 	bl	83a4c <__malloc_unlock>
   837e8:	2400      	movs	r4, #0
   837ea:	e74d      	b.n	83688 <_malloc_r+0x18c>
   837ec:	f046 0201 	orr.w	r2, r6, #1
   837f0:	f043 0301 	orr.w	r3, r3, #1
   837f4:	4426      	add	r6, r4
   837f6:	6062      	str	r2, [r4, #4]
   837f8:	4628      	mov	r0, r5
   837fa:	60be      	str	r6, [r7, #8]
   837fc:	3408      	adds	r4, #8
   837fe:	6073      	str	r3, [r6, #4]
   83800:	f000 f924 	bl	83a4c <__malloc_unlock>
   83804:	4620      	mov	r0, r4
   83806:	b003      	add	sp, #12
   83808:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   8380c:	2b14      	cmp	r3, #20
   8380e:	d970      	bls.n	838f2 <_malloc_r+0x3f6>
   83810:	2b54      	cmp	r3, #84	; 0x54
   83812:	f200 80a2 	bhi.w	8395a <_malloc_r+0x45e>
   83816:	0b33      	lsrs	r3, r6, #12
   83818:	f103 006f 	add.w	r0, r3, #111	; 0x6f
   8381c:	f103 0e6e 	add.w	lr, r3, #110	; 0x6e
   83820:	00c1      	lsls	r1, r0, #3
   83822:	e68d      	b.n	83540 <_malloc_r+0x44>
   83824:	20070564 	.word	0x20070564
   83828:	2007c394 	.word	0x2007c394
   8382c:	2007c364 	.word	0x2007c364
   83830:	2007c38c 	.word	0x2007c38c
   83834:	2007c390 	.word	0x2007c390
   83838:	2007056c 	.word	0x2007056c
   8383c:	2007096c 	.word	0x2007096c
   83840:	0a5a      	lsrs	r2, r3, #9
   83842:	2a04      	cmp	r2, #4
   83844:	d95b      	bls.n	838fe <_malloc_r+0x402>
   83846:	2a14      	cmp	r2, #20
   83848:	f200 80ae 	bhi.w	839a8 <_malloc_r+0x4ac>
   8384c:	f102 015c 	add.w	r1, r2, #92	; 0x5c
   83850:	00c9      	lsls	r1, r1, #3
   83852:	325b      	adds	r2, #91	; 0x5b
   83854:	eb07 0c01 	add.w	ip, r7, r1
   83858:	5879      	ldr	r1, [r7, r1]
   8385a:	f1ac 0c08 	sub.w	ip, ip, #8
   8385e:	458c      	cmp	ip, r1
   83860:	f000 8088 	beq.w	83974 <_malloc_r+0x478>
   83864:	684a      	ldr	r2, [r1, #4]
   83866:	f022 0203 	bic.w	r2, r2, #3
   8386a:	4293      	cmp	r3, r2
   8386c:	d273      	bcs.n	83956 <_malloc_r+0x45a>
   8386e:	6889      	ldr	r1, [r1, #8]
   83870:	458c      	cmp	ip, r1
   83872:	d1f7      	bne.n	83864 <_malloc_r+0x368>
   83874:	f8dc 300c 	ldr.w	r3, [ip, #12]
   83878:	687a      	ldr	r2, [r7, #4]
   8387a:	60e3      	str	r3, [r4, #12]
   8387c:	f8c4 c008 	str.w	ip, [r4, #8]
   83880:	609c      	str	r4, [r3, #8]
   83882:	f8cc 400c 	str.w	r4, [ip, #12]
   83886:	e69e      	b.n	835c6 <_malloc_r+0xca>
   83888:	f046 0c01 	orr.w	ip, r6, #1
   8388c:	f042 0101 	orr.w	r1, r2, #1
   83890:	4426      	add	r6, r4
   83892:	f8c4 c004 	str.w	ip, [r4, #4]
   83896:	4628      	mov	r0, r5
   83898:	617e      	str	r6, [r7, #20]
   8389a:	613e      	str	r6, [r7, #16]
   8389c:	f8c6 e00c 	str.w	lr, [r6, #12]
   838a0:	f8c6 e008 	str.w	lr, [r6, #8]
   838a4:	6071      	str	r1, [r6, #4]
   838a6:	50e2      	str	r2, [r4, r3]
   838a8:	f000 f8d0 	bl	83a4c <__malloc_unlock>
   838ac:	3408      	adds	r4, #8
   838ae:	e6eb      	b.n	83688 <_malloc_r+0x18c>
   838b0:	687a      	ldr	r2, [r7, #4]
   838b2:	e688      	b.n	835c6 <_malloc_r+0xca>
   838b4:	f108 0801 	add.w	r8, r8, #1
   838b8:	f018 0f03 	tst.w	r8, #3
   838bc:	f10c 0c08 	add.w	ip, ip, #8
   838c0:	f47f ae93 	bne.w	835ea <_malloc_r+0xee>
   838c4:	e02d      	b.n	83922 <_malloc_r+0x426>
   838c6:	68dc      	ldr	r4, [r3, #12]
   838c8:	42a3      	cmp	r3, r4
   838ca:	bf08      	it	eq
   838cc:	3002      	addeq	r0, #2
   838ce:	f43f ae4b 	beq.w	83568 <_malloc_r+0x6c>
   838d2:	e6c9      	b.n	83668 <_malloc_r+0x16c>
   838d4:	461c      	mov	r4, r3
   838d6:	4419      	add	r1, r3
   838d8:	684a      	ldr	r2, [r1, #4]
   838da:	68db      	ldr	r3, [r3, #12]
   838dc:	f854 6f08 	ldr.w	r6, [r4, #8]!
   838e0:	f042 0201 	orr.w	r2, r2, #1
   838e4:	604a      	str	r2, [r1, #4]
   838e6:	4628      	mov	r0, r5
   838e8:	60f3      	str	r3, [r6, #12]
   838ea:	609e      	str	r6, [r3, #8]
   838ec:	f000 f8ae 	bl	83a4c <__malloc_unlock>
   838f0:	e6ca      	b.n	83688 <_malloc_r+0x18c>
   838f2:	f103 005c 	add.w	r0, r3, #92	; 0x5c
   838f6:	f103 0e5b 	add.w	lr, r3, #91	; 0x5b
   838fa:	00c1      	lsls	r1, r0, #3
   838fc:	e620      	b.n	83540 <_malloc_r+0x44>
   838fe:	099a      	lsrs	r2, r3, #6
   83900:	f102 0139 	add.w	r1, r2, #57	; 0x39
   83904:	00c9      	lsls	r1, r1, #3
   83906:	3238      	adds	r2, #56	; 0x38
   83908:	e7a4      	b.n	83854 <_malloc_r+0x358>
   8390a:	42bc      	cmp	r4, r7
   8390c:	d054      	beq.n	839b8 <_malloc_r+0x4bc>
   8390e:	68bc      	ldr	r4, [r7, #8]
   83910:	6862      	ldr	r2, [r4, #4]
   83912:	f022 0203 	bic.w	r2, r2, #3
   83916:	e75e      	b.n	837d6 <_malloc_r+0x2da>
   83918:	f859 3908 	ldr.w	r3, [r9], #-8
   8391c:	4599      	cmp	r9, r3
   8391e:	f040 8086 	bne.w	83a2e <_malloc_r+0x532>
   83922:	f010 0f03 	tst.w	r0, #3
   83926:	f100 30ff 	add.w	r0, r0, #4294967295
   8392a:	d1f5      	bne.n	83918 <_malloc_r+0x41c>
   8392c:	687b      	ldr	r3, [r7, #4]
   8392e:	ea23 0304 	bic.w	r3, r3, r4
   83932:	607b      	str	r3, [r7, #4]
   83934:	0064      	lsls	r4, r4, #1
   83936:	429c      	cmp	r4, r3
   83938:	f63f aec8 	bhi.w	836cc <_malloc_r+0x1d0>
   8393c:	2c00      	cmp	r4, #0
   8393e:	f43f aec5 	beq.w	836cc <_malloc_r+0x1d0>
   83942:	421c      	tst	r4, r3
   83944:	4640      	mov	r0, r8
   83946:	f47f ae4c 	bne.w	835e2 <_malloc_r+0xe6>
   8394a:	0064      	lsls	r4, r4, #1
   8394c:	421c      	tst	r4, r3
   8394e:	f100 0004 	add.w	r0, r0, #4
   83952:	d0fa      	beq.n	8394a <_malloc_r+0x44e>
   83954:	e645      	b.n	835e2 <_malloc_r+0xe6>
   83956:	468c      	mov	ip, r1
   83958:	e78c      	b.n	83874 <_malloc_r+0x378>
   8395a:	f5b3 7faa 	cmp.w	r3, #340	; 0x154
   8395e:	d815      	bhi.n	8398c <_malloc_r+0x490>
   83960:	0bf3      	lsrs	r3, r6, #15
   83962:	f103 0078 	add.w	r0, r3, #120	; 0x78
   83966:	f103 0e77 	add.w	lr, r3, #119	; 0x77
   8396a:	00c1      	lsls	r1, r0, #3
   8396c:	e5e8      	b.n	83540 <_malloc_r+0x44>
   8396e:	f44f 5180 	mov.w	r1, #4096	; 0x1000
   83972:	e6ee      	b.n	83752 <_malloc_r+0x256>
   83974:	2101      	movs	r1, #1
   83976:	687b      	ldr	r3, [r7, #4]
   83978:	1092      	asrs	r2, r2, #2
   8397a:	fa01 f202 	lsl.w	r2, r1, r2
   8397e:	431a      	orrs	r2, r3
   83980:	607a      	str	r2, [r7, #4]
   83982:	4663      	mov	r3, ip
   83984:	e779      	b.n	8387a <_malloc_r+0x37e>
   83986:	2301      	movs	r3, #1
   83988:	6053      	str	r3, [r2, #4]
   8398a:	e72a      	b.n	837e2 <_malloc_r+0x2e6>
   8398c:	f240 5254 	movw	r2, #1364	; 0x554
   83990:	4293      	cmp	r3, r2
   83992:	d822      	bhi.n	839da <_malloc_r+0x4de>
   83994:	0cb3      	lsrs	r3, r6, #18
   83996:	f103 007d 	add.w	r0, r3, #125	; 0x7d
   8399a:	f103 0e7c 	add.w	lr, r3, #124	; 0x7c
   8399e:	00c1      	lsls	r1, r0, #3
   839a0:	e5ce      	b.n	83540 <_malloc_r+0x44>
   839a2:	f103 0b10 	add.w	fp, r3, #16
   839a6:	e6af      	b.n	83708 <_malloc_r+0x20c>
   839a8:	2a54      	cmp	r2, #84	; 0x54
   839aa:	d829      	bhi.n	83a00 <_malloc_r+0x504>
   839ac:	0b1a      	lsrs	r2, r3, #12
   839ae:	f102 016f 	add.w	r1, r2, #111	; 0x6f
   839b2:	00c9      	lsls	r1, r1, #3
   839b4:	326e      	adds	r2, #110	; 0x6e
   839b6:	e74d      	b.n	83854 <_malloc_r+0x358>
   839b8:	4b20      	ldr	r3, [pc, #128]	; (83a3c <_malloc_r+0x540>)
   839ba:	6819      	ldr	r1, [r3, #0]
   839bc:	4459      	add	r1, fp
   839be:	6019      	str	r1, [r3, #0]
   839c0:	e6b3      	b.n	8372a <_malloc_r+0x22e>
   839c2:	f3ca 000b 	ubfx	r0, sl, #0, #12
   839c6:	2800      	cmp	r0, #0
   839c8:	f47f aeaf 	bne.w	8372a <_malloc_r+0x22e>
   839cc:	eb08 030b 	add.w	r3, r8, fp
   839d0:	68ba      	ldr	r2, [r7, #8]
   839d2:	f043 0301 	orr.w	r3, r3, #1
   839d6:	6053      	str	r3, [r2, #4]
   839d8:	e6ef      	b.n	837ba <_malloc_r+0x2be>
   839da:	207f      	movs	r0, #127	; 0x7f
   839dc:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
   839e0:	f04f 0e7e 	mov.w	lr, #126	; 0x7e
   839e4:	e5ac      	b.n	83540 <_malloc_r+0x44>
   839e6:	f104 0108 	add.w	r1, r4, #8
   839ea:	4628      	mov	r0, r5
   839ec:	9300      	str	r3, [sp, #0]
   839ee:	f7ff fc39 	bl	83264 <_free_r>
   839f2:	9b00      	ldr	r3, [sp, #0]
   839f4:	6819      	ldr	r1, [r3, #0]
   839f6:	e6e0      	b.n	837ba <_malloc_r+0x2be>
   839f8:	2001      	movs	r0, #1
   839fa:	f04f 0900 	mov.w	r9, #0
   839fe:	e6bd      	b.n	8377c <_malloc_r+0x280>
   83a00:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
   83a04:	d805      	bhi.n	83a12 <_malloc_r+0x516>
   83a06:	0bda      	lsrs	r2, r3, #15
   83a08:	f102 0178 	add.w	r1, r2, #120	; 0x78
   83a0c:	00c9      	lsls	r1, r1, #3
   83a0e:	3277      	adds	r2, #119	; 0x77
   83a10:	e720      	b.n	83854 <_malloc_r+0x358>
   83a12:	f240 5154 	movw	r1, #1364	; 0x554
   83a16:	428a      	cmp	r2, r1
   83a18:	d805      	bhi.n	83a26 <_malloc_r+0x52a>
   83a1a:	0c9a      	lsrs	r2, r3, #18
   83a1c:	f102 017d 	add.w	r1, r2, #125	; 0x7d
   83a20:	00c9      	lsls	r1, r1, #3
   83a22:	327c      	adds	r2, #124	; 0x7c
   83a24:	e716      	b.n	83854 <_malloc_r+0x358>
   83a26:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
   83a2a:	227e      	movs	r2, #126	; 0x7e
   83a2c:	e712      	b.n	83854 <_malloc_r+0x358>
   83a2e:	687b      	ldr	r3, [r7, #4]
   83a30:	e780      	b.n	83934 <_malloc_r+0x438>
   83a32:	08f0      	lsrs	r0, r6, #3
   83a34:	f106 0308 	add.w	r3, r6, #8
   83a38:	e60e      	b.n	83658 <_malloc_r+0x15c>
   83a3a:	bf00      	nop
   83a3c:	2007c364 	.word	0x2007c364

00083a40 <__malloc_lock>:
   83a40:	4801      	ldr	r0, [pc, #4]	; (83a48 <__malloc_lock+0x8>)
   83a42:	f7ff bd21 	b.w	83488 <__retarget_lock_acquire_recursive>
   83a46:	bf00      	nop
   83a48:	2007c3f8 	.word	0x2007c3f8

00083a4c <__malloc_unlock>:
   83a4c:	4801      	ldr	r0, [pc, #4]	; (83a54 <__malloc_unlock+0x8>)
   83a4e:	f7ff bd1d 	b.w	8348c <__retarget_lock_release_recursive>
   83a52:	bf00      	nop
   83a54:	2007c3f8 	.word	0x2007c3f8

00083a58 <_sbrk_r>:
   83a58:	b538      	push	{r3, r4, r5, lr}
   83a5a:	2300      	movs	r3, #0
   83a5c:	4c06      	ldr	r4, [pc, #24]	; (83a78 <_sbrk_r+0x20>)
   83a5e:	4605      	mov	r5, r0
   83a60:	4608      	mov	r0, r1
   83a62:	6023      	str	r3, [r4, #0]
   83a64:	f7ff f856 	bl	82b14 <_sbrk>
   83a68:	1c43      	adds	r3, r0, #1
   83a6a:	d000      	beq.n	83a6e <_sbrk_r+0x16>
   83a6c:	bd38      	pop	{r3, r4, r5, pc}
   83a6e:	6823      	ldr	r3, [r4, #0]
   83a70:	2b00      	cmp	r3, #0
   83a72:	d0fb      	beq.n	83a6c <_sbrk_r+0x14>
   83a74:	602b      	str	r3, [r5, #0]
   83a76:	bd38      	pop	{r3, r4, r5, pc}
   83a78:	2007c40c 	.word	0x2007c40c

00083a7c <__sread>:
   83a7c:	b510      	push	{r4, lr}
   83a7e:	460c      	mov	r4, r1
   83a80:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
   83a84:	f000 f954 	bl	83d30 <_read_r>
   83a88:	2800      	cmp	r0, #0
   83a8a:	db03      	blt.n	83a94 <__sread+0x18>
   83a8c:	6d23      	ldr	r3, [r4, #80]	; 0x50
   83a8e:	4403      	add	r3, r0
   83a90:	6523      	str	r3, [r4, #80]	; 0x50
   83a92:	bd10      	pop	{r4, pc}
   83a94:	89a3      	ldrh	r3, [r4, #12]
   83a96:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
   83a9a:	81a3      	strh	r3, [r4, #12]
   83a9c:	bd10      	pop	{r4, pc}
   83a9e:	bf00      	nop

00083aa0 <__swrite>:
   83aa0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   83aa4:	460c      	mov	r4, r1
   83aa6:	f9b1 100c 	ldrsh.w	r1, [r1, #12]
   83aaa:	461f      	mov	r7, r3
   83aac:	05cb      	lsls	r3, r1, #23
   83aae:	4616      	mov	r6, r2
   83ab0:	4605      	mov	r5, r0
   83ab2:	d507      	bpl.n	83ac4 <__swrite+0x24>
   83ab4:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
   83ab8:	2302      	movs	r3, #2
   83aba:	2200      	movs	r2, #0
   83abc:	f000 f922 	bl	83d04 <_lseek_r>
   83ac0:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
   83ac4:	f421 5180 	bic.w	r1, r1, #4096	; 0x1000
   83ac8:	81a1      	strh	r1, [r4, #12]
   83aca:	463b      	mov	r3, r7
   83acc:	4632      	mov	r2, r6
   83ace:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
   83ad2:	4628      	mov	r0, r5
   83ad4:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   83ad8:	f000 b814 	b.w	83b04 <_write_r>

00083adc <__sseek>:
   83adc:	b510      	push	{r4, lr}
   83ade:	460c      	mov	r4, r1
   83ae0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
   83ae4:	f000 f90e 	bl	83d04 <_lseek_r>
   83ae8:	89a3      	ldrh	r3, [r4, #12]
   83aea:	1c42      	adds	r2, r0, #1
   83aec:	bf0e      	itee	eq
   83aee:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
   83af2:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
   83af6:	6520      	strne	r0, [r4, #80]	; 0x50
   83af8:	81a3      	strh	r3, [r4, #12]
   83afa:	bd10      	pop	{r4, pc}

00083afc <__sclose>:
   83afc:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
   83b00:	f000 b878 	b.w	83bf4 <_close_r>

00083b04 <_write_r>:
   83b04:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   83b06:	460e      	mov	r6, r1
   83b08:	2500      	movs	r5, #0
   83b0a:	4c08      	ldr	r4, [pc, #32]	; (83b2c <_write_r+0x28>)
   83b0c:	4611      	mov	r1, r2
   83b0e:	4607      	mov	r7, r0
   83b10:	461a      	mov	r2, r3
   83b12:	4630      	mov	r0, r6
   83b14:	6025      	str	r5, [r4, #0]
   83b16:	f7fc fc69 	bl	803ec <_write>
   83b1a:	1c43      	adds	r3, r0, #1
   83b1c:	d000      	beq.n	83b20 <_write_r+0x1c>
   83b1e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   83b20:	6823      	ldr	r3, [r4, #0]
   83b22:	2b00      	cmp	r3, #0
   83b24:	d0fb      	beq.n	83b1e <_write_r+0x1a>
   83b26:	603b      	str	r3, [r7, #0]
   83b28:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   83b2a:	bf00      	nop
   83b2c:	2007c40c 	.word	0x2007c40c

00083b30 <__register_exitproc>:
   83b30:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   83b34:	4d2c      	ldr	r5, [pc, #176]	; (83be8 <__register_exitproc+0xb8>)
   83b36:	4606      	mov	r6, r0
   83b38:	6828      	ldr	r0, [r5, #0]
   83b3a:	4698      	mov	r8, r3
   83b3c:	460f      	mov	r7, r1
   83b3e:	4691      	mov	r9, r2
   83b40:	f7ff fca2 	bl	83488 <__retarget_lock_acquire_recursive>
   83b44:	4b29      	ldr	r3, [pc, #164]	; (83bec <__register_exitproc+0xbc>)
   83b46:	681c      	ldr	r4, [r3, #0]
   83b48:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
   83b4c:	2b00      	cmp	r3, #0
   83b4e:	d03e      	beq.n	83bce <__register_exitproc+0x9e>
   83b50:	685a      	ldr	r2, [r3, #4]
   83b52:	2a1f      	cmp	r2, #31
   83b54:	dc1c      	bgt.n	83b90 <__register_exitproc+0x60>
   83b56:	f102 0e01 	add.w	lr, r2, #1
   83b5a:	b176      	cbz	r6, 83b7a <__register_exitproc+0x4a>
   83b5c:	2101      	movs	r1, #1
   83b5e:	eb03 0482 	add.w	r4, r3, r2, lsl #2
   83b62:	f8c4 9088 	str.w	r9, [r4, #136]	; 0x88
   83b66:	f8d3 0188 	ldr.w	r0, [r3, #392]	; 0x188
   83b6a:	4091      	lsls	r1, r2
   83b6c:	4308      	orrs	r0, r1
   83b6e:	2e02      	cmp	r6, #2
   83b70:	f8c3 0188 	str.w	r0, [r3, #392]	; 0x188
   83b74:	f8c4 8108 	str.w	r8, [r4, #264]	; 0x108
   83b78:	d023      	beq.n	83bc2 <__register_exitproc+0x92>
   83b7a:	3202      	adds	r2, #2
   83b7c:	f8c3 e004 	str.w	lr, [r3, #4]
   83b80:	6828      	ldr	r0, [r5, #0]
   83b82:	f843 7022 	str.w	r7, [r3, r2, lsl #2]
   83b86:	f7ff fc81 	bl	8348c <__retarget_lock_release_recursive>
   83b8a:	2000      	movs	r0, #0
   83b8c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   83b90:	4b17      	ldr	r3, [pc, #92]	; (83bf0 <__register_exitproc+0xc0>)
   83b92:	b30b      	cbz	r3, 83bd8 <__register_exitproc+0xa8>
   83b94:	f44f 70c8 	mov.w	r0, #400	; 0x190
   83b98:	f7ff fca8 	bl	834ec <malloc>
   83b9c:	4603      	mov	r3, r0
   83b9e:	b1d8      	cbz	r0, 83bd8 <__register_exitproc+0xa8>
   83ba0:	2000      	movs	r0, #0
   83ba2:	f8d4 1148 	ldr.w	r1, [r4, #328]	; 0x148
   83ba6:	f04f 0e01 	mov.w	lr, #1
   83baa:	6058      	str	r0, [r3, #4]
   83bac:	6019      	str	r1, [r3, #0]
   83bae:	4602      	mov	r2, r0
   83bb0:	f8c4 3148 	str.w	r3, [r4, #328]	; 0x148
   83bb4:	f8c3 0188 	str.w	r0, [r3, #392]	; 0x188
   83bb8:	f8c3 018c 	str.w	r0, [r3, #396]	; 0x18c
   83bbc:	2e00      	cmp	r6, #0
   83bbe:	d0dc      	beq.n	83b7a <__register_exitproc+0x4a>
   83bc0:	e7cc      	b.n	83b5c <__register_exitproc+0x2c>
   83bc2:	f8d3 018c 	ldr.w	r0, [r3, #396]	; 0x18c
   83bc6:	4301      	orrs	r1, r0
   83bc8:	f8c3 118c 	str.w	r1, [r3, #396]	; 0x18c
   83bcc:	e7d5      	b.n	83b7a <__register_exitproc+0x4a>
   83bce:	f504 73a6 	add.w	r3, r4, #332	; 0x14c
   83bd2:	f8c4 3148 	str.w	r3, [r4, #328]	; 0x148
   83bd6:	e7bb      	b.n	83b50 <__register_exitproc+0x20>
   83bd8:	6828      	ldr	r0, [r5, #0]
   83bda:	f7ff fc57 	bl	8348c <__retarget_lock_release_recursive>
   83bde:	f04f 30ff 	mov.w	r0, #4294967295
   83be2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   83be6:	bf00      	nop
   83be8:	20070560 	.word	0x20070560
   83bec:	00083d80 	.word	0x00083d80
   83bf0:	000834ed 	.word	0x000834ed

00083bf4 <_close_r>:
   83bf4:	b538      	push	{r3, r4, r5, lr}
   83bf6:	2300      	movs	r3, #0
   83bf8:	4c06      	ldr	r4, [pc, #24]	; (83c14 <_close_r+0x20>)
   83bfa:	4605      	mov	r5, r0
   83bfc:	4608      	mov	r0, r1
   83bfe:	6023      	str	r3, [r4, #0]
   83c00:	f7fe ffa4 	bl	82b4c <_close>
   83c04:	1c43      	adds	r3, r0, #1
   83c06:	d000      	beq.n	83c0a <_close_r+0x16>
   83c08:	bd38      	pop	{r3, r4, r5, pc}
   83c0a:	6823      	ldr	r3, [r4, #0]
   83c0c:	2b00      	cmp	r3, #0
   83c0e:	d0fb      	beq.n	83c08 <_close_r+0x14>
   83c10:	602b      	str	r3, [r5, #0]
   83c12:	bd38      	pop	{r3, r4, r5, pc}
   83c14:	2007c40c 	.word	0x2007c40c

00083c18 <_fclose_r>:
   83c18:	b570      	push	{r4, r5, r6, lr}
   83c1a:	b159      	cbz	r1, 83c34 <_fclose_r+0x1c>
   83c1c:	4605      	mov	r5, r0
   83c1e:	460c      	mov	r4, r1
   83c20:	b110      	cbz	r0, 83c28 <_fclose_r+0x10>
   83c22:	6b83      	ldr	r3, [r0, #56]	; 0x38
   83c24:	2b00      	cmp	r3, #0
   83c26:	d03c      	beq.n	83ca2 <_fclose_r+0x8a>
   83c28:	6e63      	ldr	r3, [r4, #100]	; 0x64
   83c2a:	07d8      	lsls	r0, r3, #31
   83c2c:	d505      	bpl.n	83c3a <_fclose_r+0x22>
   83c2e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   83c32:	b92b      	cbnz	r3, 83c40 <_fclose_r+0x28>
   83c34:	2600      	movs	r6, #0
   83c36:	4630      	mov	r0, r6
   83c38:	bd70      	pop	{r4, r5, r6, pc}
   83c3a:	89a3      	ldrh	r3, [r4, #12]
   83c3c:	0599      	lsls	r1, r3, #22
   83c3e:	d53c      	bpl.n	83cba <_fclose_r+0xa2>
   83c40:	4621      	mov	r1, r4
   83c42:	4628      	mov	r0, r5
   83c44:	f7ff f974 	bl	82f30 <__sflush_r>
   83c48:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
   83c4a:	4606      	mov	r6, r0
   83c4c:	b133      	cbz	r3, 83c5c <_fclose_r+0x44>
   83c4e:	69e1      	ldr	r1, [r4, #28]
   83c50:	4628      	mov	r0, r5
   83c52:	4798      	blx	r3
   83c54:	2800      	cmp	r0, #0
   83c56:	bfb8      	it	lt
   83c58:	f04f 36ff 	movlt.w	r6, #4294967295
   83c5c:	89a3      	ldrh	r3, [r4, #12]
   83c5e:	061a      	lsls	r2, r3, #24
   83c60:	d422      	bmi.n	83ca8 <_fclose_r+0x90>
   83c62:	6b21      	ldr	r1, [r4, #48]	; 0x30
   83c64:	b141      	cbz	r1, 83c78 <_fclose_r+0x60>
   83c66:	f104 0340 	add.w	r3, r4, #64	; 0x40
   83c6a:	4299      	cmp	r1, r3
   83c6c:	d002      	beq.n	83c74 <_fclose_r+0x5c>
   83c6e:	4628      	mov	r0, r5
   83c70:	f7ff faf8 	bl	83264 <_free_r>
   83c74:	2300      	movs	r3, #0
   83c76:	6323      	str	r3, [r4, #48]	; 0x30
   83c78:	6c61      	ldr	r1, [r4, #68]	; 0x44
   83c7a:	b121      	cbz	r1, 83c86 <_fclose_r+0x6e>
   83c7c:	4628      	mov	r0, r5
   83c7e:	f7ff faf1 	bl	83264 <_free_r>
   83c82:	2300      	movs	r3, #0
   83c84:	6463      	str	r3, [r4, #68]	; 0x44
   83c86:	f7ff fa77 	bl	83178 <__sfp_lock_acquire>
   83c8a:	2200      	movs	r2, #0
   83c8c:	6e63      	ldr	r3, [r4, #100]	; 0x64
   83c8e:	81a2      	strh	r2, [r4, #12]
   83c90:	07db      	lsls	r3, r3, #31
   83c92:	d50e      	bpl.n	83cb2 <_fclose_r+0x9a>
   83c94:	6da0      	ldr	r0, [r4, #88]	; 0x58
   83c96:	f7ff fbf5 	bl	83484 <__retarget_lock_close_recursive>
   83c9a:	f7ff fa73 	bl	83184 <__sfp_lock_release>
   83c9e:	4630      	mov	r0, r6
   83ca0:	bd70      	pop	{r4, r5, r6, pc}
   83ca2:	f7ff fa39 	bl	83118 <__sinit>
   83ca6:	e7bf      	b.n	83c28 <_fclose_r+0x10>
   83ca8:	6921      	ldr	r1, [r4, #16]
   83caa:	4628      	mov	r0, r5
   83cac:	f7ff fada 	bl	83264 <_free_r>
   83cb0:	e7d7      	b.n	83c62 <_fclose_r+0x4a>
   83cb2:	6da0      	ldr	r0, [r4, #88]	; 0x58
   83cb4:	f7ff fbea 	bl	8348c <__retarget_lock_release_recursive>
   83cb8:	e7ec      	b.n	83c94 <_fclose_r+0x7c>
   83cba:	6da0      	ldr	r0, [r4, #88]	; 0x58
   83cbc:	f7ff fbe4 	bl	83488 <__retarget_lock_acquire_recursive>
   83cc0:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   83cc4:	2b00      	cmp	r3, #0
   83cc6:	d1bb      	bne.n	83c40 <_fclose_r+0x28>
   83cc8:	6e66      	ldr	r6, [r4, #100]	; 0x64
   83cca:	f016 0601 	ands.w	r6, r6, #1
   83cce:	d1b1      	bne.n	83c34 <_fclose_r+0x1c>
   83cd0:	6da0      	ldr	r0, [r4, #88]	; 0x58
   83cd2:	f7ff fbdb 	bl	8348c <__retarget_lock_release_recursive>
   83cd6:	4630      	mov	r0, r6
   83cd8:	bd70      	pop	{r4, r5, r6, pc}
   83cda:	bf00      	nop

00083cdc <_fstat_r>:
   83cdc:	b570      	push	{r4, r5, r6, lr}
   83cde:	460d      	mov	r5, r1
   83ce0:	2300      	movs	r3, #0
   83ce2:	4c07      	ldr	r4, [pc, #28]	; (83d00 <_fstat_r+0x24>)
   83ce4:	4606      	mov	r6, r0
   83ce6:	4611      	mov	r1, r2
   83ce8:	4628      	mov	r0, r5
   83cea:	6023      	str	r3, [r4, #0]
   83cec:	f7fe ff31 	bl	82b52 <_fstat>
   83cf0:	1c43      	adds	r3, r0, #1
   83cf2:	d000      	beq.n	83cf6 <_fstat_r+0x1a>
   83cf4:	bd70      	pop	{r4, r5, r6, pc}
   83cf6:	6823      	ldr	r3, [r4, #0]
   83cf8:	2b00      	cmp	r3, #0
   83cfa:	d0fb      	beq.n	83cf4 <_fstat_r+0x18>
   83cfc:	6033      	str	r3, [r6, #0]
   83cfe:	bd70      	pop	{r4, r5, r6, pc}
   83d00:	2007c40c 	.word	0x2007c40c

00083d04 <_lseek_r>:
   83d04:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   83d06:	460e      	mov	r6, r1
   83d08:	2500      	movs	r5, #0
   83d0a:	4c08      	ldr	r4, [pc, #32]	; (83d2c <_lseek_r+0x28>)
   83d0c:	4611      	mov	r1, r2
   83d0e:	4607      	mov	r7, r0
   83d10:	461a      	mov	r2, r3
   83d12:	4630      	mov	r0, r6
   83d14:	6025      	str	r5, [r4, #0]
   83d16:	f7fe ff21 	bl	82b5c <_lseek>
   83d1a:	1c43      	adds	r3, r0, #1
   83d1c:	d000      	beq.n	83d20 <_lseek_r+0x1c>
   83d1e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   83d20:	6823      	ldr	r3, [r4, #0]
   83d22:	2b00      	cmp	r3, #0
   83d24:	d0fb      	beq.n	83d1e <_lseek_r+0x1a>
   83d26:	603b      	str	r3, [r7, #0]
   83d28:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   83d2a:	bf00      	nop
   83d2c:	2007c40c 	.word	0x2007c40c

00083d30 <_read_r>:
   83d30:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   83d32:	460e      	mov	r6, r1
   83d34:	2500      	movs	r5, #0
   83d36:	4c08      	ldr	r4, [pc, #32]	; (83d58 <_read_r+0x28>)
   83d38:	4611      	mov	r1, r2
   83d3a:	4607      	mov	r7, r0
   83d3c:	461a      	mov	r2, r3
   83d3e:	4630      	mov	r0, r6
   83d40:	6025      	str	r5, [r4, #0]
   83d42:	f7fc fb35 	bl	803b0 <_read>
   83d46:	1c43      	adds	r3, r0, #1
   83d48:	d000      	beq.n	83d4c <_read_r+0x1c>
   83d4a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   83d4c:	6823      	ldr	r3, [r4, #0]
   83d4e:	2b00      	cmp	r3, #0
   83d50:	d0fb      	beq.n	83d4a <_read_r+0x1a>
   83d52:	603b      	str	r3, [r7, #0]
   83d54:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   83d56:	bf00      	nop
   83d58:	2007c40c 	.word	0x2007c40c
   83d5c:	6e696c42 	.word	0x6e696c42
   83d60:	6154206b 	.word	0x6154206b
   83d64:	00006b73 	.word	0x00006b73
   83d68:	454c4449 	.word	0x454c4449
   83d6c:	00000000 	.word	0x00000000
   83d70:	51726d54 	.word	0x51726d54
   83d74:	00000000 	.word	0x00000000
   83d78:	20726d54 	.word	0x20726d54
   83d7c:	00637653 	.word	0x00637653

00083d80 <_global_impure_ptr>:
   83d80:	20070138                                8.. 

00083d84 <_init>:
   83d84:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   83d86:	bf00      	nop
   83d88:	bcf8      	pop	{r3, r4, r5, r6, r7}
   83d8a:	bc08      	pop	{r3}
   83d8c:	469e      	mov	lr, r3
   83d8e:	4770      	bx	lr

00083d90 <__init_array_start>:
   83d90:	00082f11 	.word	0x00082f11

00083d94 <__frame_dummy_init_array_entry>:
   83d94:	00080119                                ....

00083d98 <_fini>:
   83d98:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   83d9a:	bf00      	nop
   83d9c:	bcf8      	pop	{r3, r4, r5, r6, r7}
   83d9e:	bc08      	pop	{r3}
   83da0:	469e      	mov	lr, r3
   83da2:	4770      	bx	lr

00083da4 <__fini_array_start>:
   83da4:	000800f5 	.word	0x000800f5

Disassembly of section .relocate:

20070000 <SystemInit>:
20070000:	f44f 6380 	mov.w	r3, #1024	; 0x400
20070004:	4a20      	ldr	r2, [pc, #128]	; (20070088 <SystemInit+0x88>)
20070006:	6013      	str	r3, [r2, #0]
20070008:	f502 7200 	add.w	r2, r2, #512	; 0x200
2007000c:	6013      	str	r3, [r2, #0]
2007000e:	4b1f      	ldr	r3, [pc, #124]	; (2007008c <SystemInit+0x8c>)
20070010:	6a1b      	ldr	r3, [r3, #32]
20070012:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
20070016:	d107      	bne.n	20070028 <SystemInit+0x28>
20070018:	4a1d      	ldr	r2, [pc, #116]	; (20070090 <SystemInit+0x90>)
2007001a:	4b1c      	ldr	r3, [pc, #112]	; (2007008c <SystemInit+0x8c>)
2007001c:	621a      	str	r2, [r3, #32]
2007001e:	461a      	mov	r2, r3
20070020:	6e93      	ldr	r3, [r2, #104]	; 0x68
20070022:	f013 0f01 	tst.w	r3, #1
20070026:	d0fb      	beq.n	20070020 <SystemInit+0x20>
20070028:	4a1a      	ldr	r2, [pc, #104]	; (20070094 <SystemInit+0x94>)
2007002a:	4b18      	ldr	r3, [pc, #96]	; (2007008c <SystemInit+0x8c>)
2007002c:	621a      	str	r2, [r3, #32]
2007002e:	461a      	mov	r2, r3
20070030:	6e93      	ldr	r3, [r2, #104]	; 0x68
20070032:	f413 3f80 	tst.w	r3, #65536	; 0x10000
20070036:	d0fb      	beq.n	20070030 <SystemInit+0x30>
20070038:	4a14      	ldr	r2, [pc, #80]	; (2007008c <SystemInit+0x8c>)
2007003a:	6b13      	ldr	r3, [r2, #48]	; 0x30
2007003c:	f023 0303 	bic.w	r3, r3, #3
20070040:	f043 0301 	orr.w	r3, r3, #1
20070044:	6313      	str	r3, [r2, #48]	; 0x30
20070046:	6e93      	ldr	r3, [r2, #104]	; 0x68
20070048:	f013 0f08 	tst.w	r3, #8
2007004c:	d0fb      	beq.n	20070046 <SystemInit+0x46>
2007004e:	4a12      	ldr	r2, [pc, #72]	; (20070098 <SystemInit+0x98>)
20070050:	4b0e      	ldr	r3, [pc, #56]	; (2007008c <SystemInit+0x8c>)
20070052:	629a      	str	r2, [r3, #40]	; 0x28
20070054:	461a      	mov	r2, r3
20070056:	6e93      	ldr	r3, [r2, #104]	; 0x68
20070058:	f013 0f02 	tst.w	r3, #2
2007005c:	d0fb      	beq.n	20070056 <SystemInit+0x56>
2007005e:	2211      	movs	r2, #17
20070060:	4b0a      	ldr	r3, [pc, #40]	; (2007008c <SystemInit+0x8c>)
20070062:	631a      	str	r2, [r3, #48]	; 0x30
20070064:	461a      	mov	r2, r3
20070066:	6e93      	ldr	r3, [r2, #104]	; 0x68
20070068:	f013 0f08 	tst.w	r3, #8
2007006c:	d0fb      	beq.n	20070066 <SystemInit+0x66>
2007006e:	2212      	movs	r2, #18
20070070:	4b06      	ldr	r3, [pc, #24]	; (2007008c <SystemInit+0x8c>)
20070072:	631a      	str	r2, [r3, #48]	; 0x30
20070074:	461a      	mov	r2, r3
20070076:	6e93      	ldr	r3, [r2, #104]	; 0x68
20070078:	f013 0f08 	tst.w	r3, #8
2007007c:	d0fb      	beq.n	20070076 <SystemInit+0x76>
2007007e:	4a07      	ldr	r2, [pc, #28]	; (2007009c <SystemInit+0x9c>)
20070080:	4b07      	ldr	r3, [pc, #28]	; (200700a0 <SystemInit+0xa0>)
20070082:	601a      	str	r2, [r3, #0]
20070084:	4770      	bx	lr
20070086:	bf00      	nop
20070088:	400e0a00 	.word	0x400e0a00
2007008c:	400e0600 	.word	0x400e0600
20070090:	00370809 	.word	0x00370809
20070094:	01370809 	.word	0x01370809
20070098:	200d3f01 	.word	0x200d3f01
2007009c:	0501bd00 	.word	0x0501bd00
200700a0:	20070130 	.word	0x20070130

200700a4 <system_init_flash>:
200700a4:	4b1b      	ldr	r3, [pc, #108]	; (20070114 <system_init_flash+0x70>)
200700a6:	4298      	cmp	r0, r3
200700a8:	d915      	bls.n	200700d6 <system_init_flash+0x32>
200700aa:	4b1b      	ldr	r3, [pc, #108]	; (20070118 <system_init_flash+0x74>)
200700ac:	4298      	cmp	r0, r3
200700ae:	d919      	bls.n	200700e4 <system_init_flash+0x40>
200700b0:	4b1a      	ldr	r3, [pc, #104]	; (2007011c <system_init_flash+0x78>)
200700b2:	4298      	cmp	r0, r3
200700b4:	d91e      	bls.n	200700f4 <system_init_flash+0x50>
200700b6:	4b1a      	ldr	r3, [pc, #104]	; (20070120 <system_init_flash+0x7c>)
200700b8:	4298      	cmp	r0, r3
200700ba:	d923      	bls.n	20070104 <system_init_flash+0x60>
200700bc:	4b19      	ldr	r3, [pc, #100]	; (20070124 <system_init_flash+0x80>)
200700be:	4298      	cmp	r0, r3
200700c0:	bf94      	ite	ls
200700c2:	f44f 6380 	movls.w	r3, #1024	; 0x400
200700c6:	f44f 63a0 	movhi.w	r3, #1280	; 0x500
200700ca:	4a17      	ldr	r2, [pc, #92]	; (20070128 <system_init_flash+0x84>)
200700cc:	6013      	str	r3, [r2, #0]
200700ce:	f502 7200 	add.w	r2, r2, #512	; 0x200
200700d2:	6013      	str	r3, [r2, #0]
200700d4:	4770      	bx	lr
200700d6:	2300      	movs	r3, #0
200700d8:	4a13      	ldr	r2, [pc, #76]	; (20070128 <system_init_flash+0x84>)
200700da:	6013      	str	r3, [r2, #0]
200700dc:	f502 7200 	add.w	r2, r2, #512	; 0x200
200700e0:	6013      	str	r3, [r2, #0]
200700e2:	4770      	bx	lr
200700e4:	f44f 7380 	mov.w	r3, #256	; 0x100
200700e8:	4a0f      	ldr	r2, [pc, #60]	; (20070128 <system_init_flash+0x84>)
200700ea:	6013      	str	r3, [r2, #0]
200700ec:	f502 7200 	add.w	r2, r2, #512	; 0x200
200700f0:	6013      	str	r3, [r2, #0]
200700f2:	4770      	bx	lr
200700f4:	f44f 7300 	mov.w	r3, #512	; 0x200
200700f8:	4a0b      	ldr	r2, [pc, #44]	; (20070128 <system_init_flash+0x84>)
200700fa:	6013      	str	r3, [r2, #0]
200700fc:	f502 7200 	add.w	r2, r2, #512	; 0x200
20070100:	6013      	str	r3, [r2, #0]
20070102:	4770      	bx	lr
20070104:	f44f 7340 	mov.w	r3, #768	; 0x300
20070108:	4a07      	ldr	r2, [pc, #28]	; (20070128 <system_init_flash+0x84>)
2007010a:	6013      	str	r3, [r2, #0]
2007010c:	f502 7200 	add.w	r2, r2, #512	; 0x200
20070110:	6013      	str	r3, [r2, #0]
20070112:	4770      	bx	lr
20070114:	0121eabf 	.word	0x0121eabf
20070118:	02faf07f 	.word	0x02faf07f
2007011c:	03d08fff 	.word	0x03d08fff
20070120:	04c4b3ff 	.word	0x04c4b3ff
20070124:	055d4a7f 	.word	0x055d4a7f
20070128:	400e0a00 	.word	0x400e0a00

2007012c <uxCriticalNesting>:
2007012c:	aaaaaaaa                                ....

20070130 <SystemCoreClock>:
20070130:	003d0900                                ..=.

20070134 <_impure_ptr>:
20070134:	20070138                                8.. 

20070138 <impure_data>:
20070138:	00000000 20070424 2007048c 200704f4     ....$.. ... ... 
	...
200701e0:	00000001 00000000 abcd330e e66d1234     .........3..4.m.
200701f0:	0005deec 0000000b 00000000 00000000     ................
	...

20070560 <__atexit_recursive_mutex>:
20070560:	2007c3e8                                ... 

20070564 <__malloc_av_>:
	...
2007056c:	20070564 20070564 2007056c 2007056c     d.. d.. l.. l.. 
2007057c:	20070574 20070574 2007057c 2007057c     t.. t.. |.. |.. 
2007058c:	20070584 20070584 2007058c 2007058c     ... ... ... ... 
2007059c:	20070594 20070594 2007059c 2007059c     ... ... ... ... 
200705ac:	200705a4 200705a4 200705ac 200705ac     ... ... ... ... 
200705bc:	200705b4 200705b4 200705bc 200705bc     ... ... ... ... 
200705cc:	200705c4 200705c4 200705cc 200705cc     ... ... ... ... 
200705dc:	200705d4 200705d4 200705dc 200705dc     ... ... ... ... 
200705ec:	200705e4 200705e4 200705ec 200705ec     ... ... ... ... 
200705fc:	200705f4 200705f4 200705fc 200705fc     ... ... ... ... 
2007060c:	20070604 20070604 2007060c 2007060c     ... ... ... ... 
2007061c:	20070614 20070614 2007061c 2007061c     ... ... ... ... 
2007062c:	20070624 20070624 2007062c 2007062c     $.. $.. ,.. ,.. 
2007063c:	20070634 20070634 2007063c 2007063c     4.. 4.. <.. <.. 
2007064c:	20070644 20070644 2007064c 2007064c     D.. D.. L.. L.. 
2007065c:	20070654 20070654 2007065c 2007065c     T.. T.. \.. \.. 
2007066c:	20070664 20070664 2007066c 2007066c     d.. d.. l.. l.. 
2007067c:	20070674 20070674 2007067c 2007067c     t.. t.. |.. |.. 
2007068c:	20070684 20070684 2007068c 2007068c     ... ... ... ... 
2007069c:	20070694 20070694 2007069c 2007069c     ... ... ... ... 
200706ac:	200706a4 200706a4 200706ac 200706ac     ... ... ... ... 
200706bc:	200706b4 200706b4 200706bc 200706bc     ... ... ... ... 
200706cc:	200706c4 200706c4 200706cc 200706cc     ... ... ... ... 
200706dc:	200706d4 200706d4 200706dc 200706dc     ... ... ... ... 
200706ec:	200706e4 200706e4 200706ec 200706ec     ... ... ... ... 
200706fc:	200706f4 200706f4 200706fc 200706fc     ... ... ... ... 
2007070c:	20070704 20070704 2007070c 2007070c     ... ... ... ... 
2007071c:	20070714 20070714 2007071c 2007071c     ... ... ... ... 
2007072c:	20070724 20070724 2007072c 2007072c     $.. $.. ,.. ,.. 
2007073c:	20070734 20070734 2007073c 2007073c     4.. 4.. <.. <.. 
2007074c:	20070744 20070744 2007074c 2007074c     D.. D.. L.. L.. 
2007075c:	20070754 20070754 2007075c 2007075c     T.. T.. \.. \.. 
2007076c:	20070764 20070764 2007076c 2007076c     d.. d.. l.. l.. 
2007077c:	20070774 20070774 2007077c 2007077c     t.. t.. |.. |.. 
2007078c:	20070784 20070784 2007078c 2007078c     ... ... ... ... 
2007079c:	20070794 20070794 2007079c 2007079c     ... ... ... ... 
200707ac:	200707a4 200707a4 200707ac 200707ac     ... ... ... ... 
200707bc:	200707b4 200707b4 200707bc 200707bc     ... ... ... ... 
200707cc:	200707c4 200707c4 200707cc 200707cc     ... ... ... ... 
200707dc:	200707d4 200707d4 200707dc 200707dc     ... ... ... ... 
200707ec:	200707e4 200707e4 200707ec 200707ec     ... ... ... ... 
200707fc:	200707f4 200707f4 200707fc 200707fc     ... ... ... ... 
2007080c:	20070804 20070804 2007080c 2007080c     ... ... ... ... 
2007081c:	20070814 20070814 2007081c 2007081c     ... ... ... ... 
2007082c:	20070824 20070824 2007082c 2007082c     $.. $.. ,.. ,.. 
2007083c:	20070834 20070834 2007083c 2007083c     4.. 4.. <.. <.. 
2007084c:	20070844 20070844 2007084c 2007084c     D.. D.. L.. L.. 
2007085c:	20070854 20070854 2007085c 2007085c     T.. T.. \.. \.. 
2007086c:	20070864 20070864 2007086c 2007086c     d.. d.. l.. l.. 
2007087c:	20070874 20070874 2007087c 2007087c     t.. t.. |.. |.. 
2007088c:	20070884 20070884 2007088c 2007088c     ... ... ... ... 
2007089c:	20070894 20070894 2007089c 2007089c     ... ... ... ... 
200708ac:	200708a4 200708a4 200708ac 200708ac     ... ... ... ... 
200708bc:	200708b4 200708b4 200708bc 200708bc     ... ... ... ... 
200708cc:	200708c4 200708c4 200708cc 200708cc     ... ... ... ... 
200708dc:	200708d4 200708d4 200708dc 200708dc     ... ... ... ... 
200708ec:	200708e4 200708e4 200708ec 200708ec     ... ... ... ... 
200708fc:	200708f4 200708f4 200708fc 200708fc     ... ... ... ... 
2007090c:	20070904 20070904 2007090c 2007090c     ... ... ... ... 
2007091c:	20070914 20070914 2007091c 2007091c     ... ... ... ... 
2007092c:	20070924 20070924 2007092c 2007092c     $.. $.. ,.. ,.. 
2007093c:	20070934 20070934 2007093c 2007093c     4.. 4.. <.. <.. 
2007094c:	20070944 20070944 2007094c 2007094c     D.. D.. L.. L.. 
2007095c:	20070954 20070954 2007095c 2007095c     T.. T.. \.. \.. 

2007096c <__malloc_sbrk_base>:
2007096c:	ffffffff                                ....

20070970 <__malloc_trim_threshold>:
20070970:	00020000                                ....
